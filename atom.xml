<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>pRism</title>
  
  
  <link href="https://www.pri87.vip/atom.xml" rel="self"/>
  
  <link href="https://www.pri87.vip/"/>
  <updated>2024-05-02T11:25:45.036Z</updated>
  <id>https://www.pri87.vip/</id>
  
  <author>
    <name>pRism</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kali配置步骤</title>
    <link href="https://www.pri87.vip/posts/8e948a96.html"/>
    <id>https://www.pri87.vip/posts/8e948a96.html</id>
    <published>2024-05-02T05:21:58.000Z</published>
    <updated>2024-05-02T11:25:45.036Z</updated>
    
    <content type="html"><![CDATA[<p>今天不小心把kali删了，于是准备重新装一个，之前装的时候也没有怎么仔细用过，权当是用来调试elf，所以趁放假重新配一个，顺便记录一下流程。</p><hr><h2 id="安装kali-linux">安装kali-linux</h2><p>下载vmware</p><p><a href="https://www.vmware.com/">VMware - Delivering a Digital Foundation For Businesses</a></p><p>下载kali</p><p><a href="https://www.kali.org/get-kali/#kali-virtual-machines">Get Kali | Kali Linux</a></p><p><img src="https://s2.loli.net/2024/05/02/LxIoaKvrtRCSXpf.png" alt="image-20240502133052716"></p><p>建议图里面框着的这个</p><p><a href="https://cdimage.kali.org/kali-2024.1/kali-linux-2024.1-vmware-amd64.7z">下载直链</a></p><hr><p>下载完成后解压并打开文件夹，如果已经安装好了VMware，那么双击vmx文件会自动弹出VMware并配置好虚拟机。现在就可以用了。</p><p>点击开启。</p><p>账户和密码均为kali</p><p>现在就可以使用了。</p><hr><h2 id="基本设置">基本设置</h2><h3 id="设置中文">设置中文</h3><p>输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure locales</span><br></pre></td></tr></table></figure><p>在对应选框按空格选择对应语言包然后按回车确认</p><p><img src="https://s2.loli.net/2024/05/02/hnwkv8z2C7GdFir.png" alt="image-20240502140958050"></p><p>后一个页面在zh_CN.UTF-8的位置回车</p><p>重启后生效。</p><h3 id="更新软件包">更新软件包</h3><p>使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br></pre></td></tr></table></figure><p>来更新软件包</p><h3 id="换源">换源</h3><p>安装leafpad</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install leafpad</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo leafpad /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>添加源：</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#中科大</span></span><br><span class="line">deb http:<span class="comment">//mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.ustc.edu.cn/kali kali-rolling main non-free contrib</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#阿里云</span></span><br><span class="line">deb http:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br><span class="line">deb-src http:<span class="comment">//mirrors.aliyun.com/kali kali-rolling main non-free contrib</span></span><br><span class="line"> </span><br><span class="line"><span class="meta">#清华大学</span></span><br><span class="line">deb http:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span></span><br><span class="line">deb-src https:<span class="comment">//mirrors.tuna.tsinghua.edu.cn/kali kali-rolling main contrib non-free</span></span><br></pre></td></tr></table></figure><h3 id="获取vscode-其实用vim也可以">获取vscode/其实用vim也可以</h3><p>打开火狐，直接搜索官网</p><p>下载deb版本</p><p>在download文件夹使用：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i ./(文件名)</span><br></pre></td></tr></table></figure><h3 id="改变字体">改变字体</h3><p>下载好自己想要的字体，我的字体是内置的</p><p>在终端-文件-参数配置-第一行修改字体和大小</p><h3 id="配置ssh">配置ssh</h3><p>编辑config</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo leafpad /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>#PasswordAuthentication yes行去掉#</p><p>#PermitRootLogin prohibit-password去掉#</p><p>把prohibit-password改为yes</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service ssh start</span><br><span class="line">sudo service ssh status</span><br></pre></td></tr></table></figure><p>此时如果有：</p><p><code>active(running)</code>就算成功</p><h2 id="基本环境配置">基本环境配置</h2><p>由于不懂web，所以只配了其它环境</p><h3 id="RE环境配置">RE环境配置</h3><p>创建一个文件夹，放入ida的调试文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod 777 linux_server</span><br><span class="line">chmod 777 linux_server64</span><br></pre></td></tr></table></figure><p>修改权限</p><p>使用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ifconfig</span><br></pre></td></tr></table></figure><p>查看ip端口号</p><p><img src="https://s2.loli.net/2024/05/02/Jsgn1Mho3uKSp6w.png" alt="image-20240502155336325"></p><p>先执行对应的server(如果你的文件是32位的就不加64)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./linux_server64</span><br></pre></td></tr></table></figure><p>然后在ida中输入</p><p><img src="https://s2.loli.net/2024/05/02/TNQqLdpEAug6Vaf.png" alt="image-20240502155358135"></p><p>调试成功</p><h3 id="CRY环境配置">CRY环境配置</h3><h4 id="安装docker">安装docker</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install docker docker-compose </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">或</span></span><br><span class="line">apt-get install docker.io</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">启动docker服务</span></span><br><span class="line">service docker start</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">列出docker现有镜像</span></span><br><span class="line">docker images</span><br><span class="line"> </span><br><span class="line">docker run hello-world</span><br></pre></td></tr></table></figure><p>如果弹出</p><p><img src="https://s2.loli.net/2024/05/02/PGaHBt7Fr8IJisT.png" alt="image-20240502161037944"></p><p>表明成功</p><h4 id="安装sage-math">安装sage-math</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure><p>启动docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull sagemath/sagemath</span><br></pre></td></tr></table></figure><p>拉取镜像</p><p>最后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it sagemath/sagemath:latest</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/05/02/aDfsTwqE79OztFQ.png" alt="image-20240502161640136"></p><p>成功</p><p>由于sage的python好像模块不齐，还要配置模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p8888:8888 sagemath/sagemath:latest sage-jupyter</span><br></pre></td></tr></table></figure><p>打开交互式环境，点击最下面的链接</p><p><img src="https://s2.loli.net/2024/05/02/Sx1UzhFfamklsEg.png" alt="image-20240502163425729"></p><p>new - terminal</p><p>在这里pip install就好</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pycryptodome</span><br><span class="line">pip install crypto</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/05/02/Jnz4YKiud9GDBcI.png" alt="image-20240502164306991"></p><p>安装好了测试一下，在new中选择sagemath10.3</p><p><img src="https://s2.loli.net/2024/05/02/81NgP2YGifK3EDc.png" alt="image-20240502164335278"></p><h3 id="PWN环境配置">PWN环境配置</h3><h4 id="pwntool安装">pwntool安装</h4><p>因为是py库，用来写exp的</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install <span class="comment">--upgrade pwntools</span></span><br></pre></td></tr></table></figure><p>其实应该在本机安的，感觉方便一点</p><h4 id="pwndbg安装">pwndbg安装</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/pwndbg/pwndbg</span><br></pre></td></tr></table></figure><p>然后</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd pwndbg</span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><h4 id="插件安装">插件安装</h4><p>peda</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/longld/peda.git</span><br></pre></td></tr></table></figure><p>pwngdb</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/scwuaptx/Pwngdb.git </span><br></pre></td></tr></table></figure><p>由于正常情况插件不能一起使用？？所以要配置文件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp ~/Pwngdb/.gdbinit ~/</span><br><span class="line">sudo leafpad /.gdbinit</span><br></pre></td></tr></table></figure><p>在其中写入：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> ~<span class="regexp">/pwndbg/g</span>dbinit.py</span><br><span class="line"><span class="keyword">source</span> ~<span class="regexp">/peda/</span>peda.py</span><br><span class="line"><span class="keyword">source</span> ~<span class="regexp">/pwngdb/</span>pwngdb.py</span><br><span class="line"><span class="keyword">source</span> ~<span class="regexp">/Pwngdb/</span>angelheap/gdbinit.py</span><br><span class="line"></span><br><span class="line">define hook-run</span><br><span class="line">python</span><br><span class="line"><span class="keyword">import</span> angelheap</span><br><span class="line">angelheap.init_angelheap()</span><br><span class="line">end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>注意目录必须和安装位置一样，上面的地址默认是在~目录下载的</p><p>然后</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gdb</span><br><span class="line"><span class="built_in">file</span> xxx</span><br><span class="line"><span class="built_in">start</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/05/02/jMg94u3cXY5wify.png" alt="image-20240502190833611"></p><p>成功</p><h3 id="MISC环境配置">MISC环境配置</h3><p>misc里面需要的东西有点杂，而且很多其实在windows里面都有代替，所以感觉没什么必要，但是保险起见（防止之后我作死），还是写一点</p><h4 id="foremost">foremost</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-<span class="built_in">get</span> install foremost</span><br></pre></td></tr></table></figure><p>检查：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">foremost -h</span></span><br></pre></td></tr></table></figure><h4 id="binwalk">binwalk</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/ReFirmLabs/binwalk.git</span><br><span class="line">cd binwalk</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure><h4 id="ciphey">ciphey</h4><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt <span class="keyword">install</span> python3-ciphey</span><br></pre></td></tr></table></figure><p>差不多这几个工具吧（<s>弗如随波逐流</s>）</p><hr><p>之后应该也有更新QAQ</p><p>参考：</p><p><a href="https://www.cnblogs.com/huajianyizou/p/kali1.html#_label3">Kali下载安装以及基础配置 - 清光照归途 - 博客园 (cnblogs.com)</a></p><p><a href="https://blog.csdn.net/weixin_46318141/article/details/121168812">kali下对Docker的详细安装_kali安装docker-CSDN博客</a></p><p>[<a href="https://blog.csdn.net/qq_46145027/article/details/124912352">密码学]利用docker安装与使用sagemath_kali安装sagemath-CSDN博客</a></p><p><a href="https://blog.csdn.net/whbing1471/article/details/112410599">gdb与peda、pwngdb、pwndbg组合安装与使用_gdb peda-CSDN博客</a></p>]]></content>
    
    
    <summary type="html">不小心把kali删了QAQ</summary>
    
    
    
    <category term="知识集" scheme="https://www.pri87.vip/categories/%E7%9F%A5%E8%AF%86%E9%9B%86/"/>
    
    
    <category term="kali" scheme="https://www.pri87.vip/tags/kali/"/>
    
  </entry>
  
  <entry>
    <title>CE与mono模块_1</title>
    <link href="https://www.pri87.vip/posts/b58030d5.html"/>
    <id>https://www.pri87.vip/posts/b58030d5.html</id>
    <published>2024-05-01T14:32:07.000Z</published>
    <updated>2024-05-01T16:12:25.732Z</updated>
    
    <content type="html"><![CDATA[<p>今天不想学习，想玩游戏，所以就打开了一个肉鸽游戏，尝试开挂。</p><p>参考：<a href="https://www.bilibili.com/read/cv12648903/">【CheatEngine基础教程】四、Unity3D游戏《晚上nano好》修改实战</a></p><hr><p>先打开游戏目录，看看是哪类游戏</p><ul><li>rpgmaker：解包+编辑器用工程文件打开</li><li>gamemaker：js反混淆得到源代码</li><li>unity il ：ce+dnspy</li><li>unity il2cpp：恢复符号表ida改cpp代码+ce</li></ul><p>在Managed文件夹中：</p><p><img src="https://s2.loli.net/2024/05/01/zCu6egoh4MGdD1b.png" alt="image-20240501224552961"></p><p>很明显可以看出是unity游戏</p><p>首先要明确目标：</p><p>这是一个卡牌rougelike游戏，玩家操作2~4个角色+一个主角打败复数的敌人</p><p>修改金钱，技能点（升级人物），人物血量，每回合费用</p><p>那么开始</p><hr><p>由于这个游戏是unity游戏，可以直接通过ce的mono分析模块来方便地检测内容并hook函数</p><p><img src="https://s2.loli.net/2024/05/01/WhaZ835mzOniIXE.png" alt="image-20240501232651548"></p><p>这样打开这个功能，然后搜索金钱数量，直到找到对应的值</p><p><img src="https://s2.loli.net/2024/05/01/VfbATiPKu9JMcIX.png" alt="image-20240501232847246"></p><p>右键，查找是什么改写了这个值</p><p>得到：</p><p><img src="https://s2.loli.net/2024/05/01/W3fw4BKvlXYamz9.png" alt="image-20240501233125213"></p><p>详细分析一下这个代码，会发现这里的地址是写死的，以字面量直接放到内容里面，这是为什么呢？</p><p>由于unity是cs语言，cs在编译时只生成il中间代码，在CLR虚拟机中执行，相当于java里面的虚拟机。这样，它边执行边编译，直接把对应的值写死在编译出的代码里面，然后直接执行，这样当然可以每次都使用字面量而每次都可以不一样。</p><p>这也说明不能通过找多级指针来寻找基址，需要另一种方法。</p><p>由于开启了mono分析功能，在检测界面点击：显示反汇编程序：</p><p><img src="https://s2.loli.net/2024/05/01/SDkHMu6Xsi4WBvK.png" alt="image-20240501233819497"></p><p>可以看到已经把函数名翻译出来了，那么我们可以从函数名下文章直接找值，由于函数名是一定的，从函数名开始的偏移也是一定的，这样就可以直接找到对应的变量而不需要找基址。可以看到这里的方法是金币的set方法</p><p>在dnspy中查看</p><p><img src="https://s2.loli.net/2024/05/01/rHcURCS4dVo8nwQ.png" alt="image-20240501234129448"></p><p>显然找get更好</p><p>在ce中ctrl+g跳转:PlayData:get_Gold</p><p>只有1c的长度</p><p><img src="https://s2.loli.net/2024/05/01/9tNqvX15Gkb26Wp.png" alt="image-20240501234429636"></p><p>可以直接从11行取出rax+25c作为gold的值，但是get和set在这里都有rax+25c的偏移，可以怀疑这里有一个结构体，如果可以找到结构体开始的值，相当于整个内容都有了，只不过还有解决每个值对应的内容是什么的问题。这时mono分析功能又派上用场了：</p><p>ctrl+d:</p><p>把我们金钱的地址填进去-结构-定义新的结构：</p><p>它把所有信息显示出来了（还有偏移量）：</p><p><img src="https://s2.loli.net/2024/05/01/yucfLIpWzjeVgK6.png" alt="image-20240501234828639"></p><p>一开始的值就是上面函数中的字面量，soul就是技能点，把这两个偏移记住</p><p>在内存查看中-工具-自动汇编-写自动汇编脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">[ENABLE]</span><br><span class="line">&#123;$lua&#125;</span><br><span class="line">if syntaxcheck then return end</span><br><span class="line">if (LaunchMonoDataCollector()==0) then error(&quot;No Mono&quot;) end</span><br><span class="line">;判断mono功能是否开启</span><br><span class="line">&#123;$asm&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">aobscanregion(getGoldMethod,PlayData:get_Gold,PlayData:get_Gold+FF,48 B8)</span><br><span class="line">;取到对应函数对应位的对应值（结构体开始位置）</span><br><span class="line">alloc(Pridata,8)</span><br><span class="line">;生成标签，以标签开头的内容作为标签区域的代码，标签内容是可读可写可执行的</span><br><span class="line">registersymbol(Pridata)</span><br><span class="line">;把标签升为全局变量，可以在其它位置使用，比如制作指针的时候</span><br><span class="line">Pridata:</span><br><span class="line">readmem(getGoldMethod+2,8)</span><br><span class="line">;将对应位置写入全局变量</span><br><span class="line">[DISABLE]</span><br><span class="line">dealloc(Pridata)</span><br><span class="line">unregistersymbol(Pridata)</span><br></pre></td></tr></table></figure><p>这样我们保存后就保存了对应的结构体指针</p><p>然后根据偏移：</p><p><img src="https://s2.loli.net/2024/05/01/pix2qoOGMdzXTIL.png" alt="image-20240501235648619"></p><p>做出指针，后面的soul同理，不再赘述</p><p>在这个结构体中还有人物血量：</p><p>同理把找到的结构体开头作为基址来偏移就好</p><p><img src="https://s2.loli.net/2024/05/01/SOsnpq3f876uJy9.png" alt="image-20240501235927670"></p><p>最后还有cost，每回合费用，它不在这个结构体里面，重新搜索，如法炮制：</p><p>先看结构体偏移8c</p><p>找到setAP函数和getAP函数，这两个函数似乎都没有硬编码的地址，也比较合理，每次开一个战斗都要重新生成一次，但是可以看到：</p><p><img src="https://s2.loli.net/2024/05/02/GAPbXhqDOozjyxf.png" alt="image-20240502000544674"></p><p>明显结构体开头在r15，但是拿不到值，干脆直接注入代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">[Enable]</span><br><span class="line">&#123;$asm&#125;</span><br><span class="line">alloc(newmem,512,BattleTeam:SetAP+11d)</span><br><span class="line">label(returnhere)</span><br><span class="line">label(originalcode)</span><br><span class="line">label(exit)</span><br><span class="line">alloc(Battledata,8)</span><br><span class="line">registersymbol(Battledata);创建全局变量</span><br><span class="line">newmem:;插入获取的代码</span><br><span class="line">mov [Battledata],r15</span><br><span class="line">originalcode:;原来的代码</span><br><span class="line">mov [r15+0000008C],edi</span><br><span class="line"></span><br><span class="line">exit:</span><br><span class="line">jmp returnhere</span><br><span class="line"></span><br><span class="line">BattleTeam:SetAP+11d:;把目标地址改成跳转</span><br><span class="line">jmp newmem</span><br><span class="line">nop 2</span><br><span class="line">returnhere:</span><br><span class="line"></span><br><span class="line">[Disable]</span><br><span class="line">BattleTeam:SetAP+11d:;还原代码</span><br><span class="line">mov [r15+0000008C],edi</span><br><span class="line">dealloc(Battledata)</span><br><span class="line">dealloc(newmem)</span><br><span class="line"></span><br><span class="line">&#123;$asm&#125;</span><br></pre></td></tr></table></figure><p>这样就拿到结构体头了，不过因为是代码注入，必须要调用一次这个函数之后才可以得到值。</p><p>同理就得到AP的值了。</p>]]></content>
    
    
    <summary type="html">使用CE中的mono分析模块对unity游戏进行分析</summary>
    
    
    
    <category term="实践" scheme="https://www.pri87.vip/categories/%E5%AE%9E%E8%B7%B5/"/>
    
    
    <category term="RE" scheme="https://www.pri87.vip/tags/RE/"/>
    
    <category term="游戏逆向" scheme="https://www.pri87.vip/tags/%E6%B8%B8%E6%88%8F%E9%80%86%E5%90%91/"/>
    
    <category term="unity" scheme="https://www.pri87.vip/tags/unity/"/>
    
  </entry>
  
  <entry>
    <title>NSSCTF-r22题目复现</title>
    <link href="https://www.pri87.vip/posts/8a68bf71.html"/>
    <id>https://www.pri87.vip/posts/8a68bf71.html</id>
    <published>2024-04-26T15:35:39.000Z</published>
    <updated>2024-04-28T14:26:59.701Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>XYCTF2024-wp</title>
    <link href="https://www.pri87.vip/posts/685012f7.html"/>
    <id>https://www.pri87.vip/posts/685012f7.html</id>
    <published>2024-04-26T15:28:28.000Z</published>
    <updated>2024-04-28T14:26:59.701Z</updated>
    
    <content type="html"><![CDATA[<p>能说什么呢，这题。。。难以言喻</p><hr><h2 id="RE">RE</h2><h3 id="week1">week1</h3><h4 id="DebugMe">DebugMe</h4><p>这个是安卓动态调试，之前遇到过一个类似的，但是不同的是，那个直接在模拟器里面调就可以，这次这个好像没有被jadx识别到。</p><p>然后学到了另外一种方法：</p><p>在jadx调试界面直接点击启动ADB服务，然后打开模拟器，点击刷新，就能看到所有进程，然后就可以调试了</p><p>这个时候点击按钮，出flag</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">XYCTF</span><span class="template-variable">&#123;d3bugg3r_15_v3ry_u53ful&#125;</span></span><br></pre></td></tr></table></figure><h4 id="你真的是大学生吗？">你真的是大学生吗？</h4><p>这个是一个16位dos程序，ida打开看汇编还原程序</p><p>加密逻辑：</p><p><img src="https://s2.loli.net/2024/04/06/OKsLR8WFtHxiI92.png" alt="image-20240406123918332"></p><p>相当于每次和下一位xor</p><p>之前没怎么搞懂mov si ，2F，然后发现是把它当地址。。没看明白add si,cx有什么用，可能add si,cx是创建一个空缓冲区存输入的。</p><p>加密逻辑确实是从最后开始向前异或，</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = *p2;</span><br><span class="line">p2-=<span class="number">1</span>;</span><br><span class="line">*p2 ^= a;</span><br></pre></td></tr></table></figure><p>那直接逆向</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">a = [<span class="number">0x76</span>, <span class="number">0x0E</span>, <span class="number">0x77</span>, <span class="number">0x14</span>, <span class="number">0x60</span>, <span class="number">0x06</span>, <span class="number">0x7D</span>, <span class="number">0x04</span>, <span class="number">0x6B</span>, <span class="number">0x1E</span>, <span class="number">0x41</span>, <span class="number">0x2A</span>, <span class="number">0x44</span>, <span class="number">0x2B</span>, <span class="number">0x5C</span>, <span class="number">0x03</span>, <span class="number">0x3B</span>, <span class="number">0x0B</span>, <span class="number">0x33</span>, <span class="number">0x05</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">    a[i]^=a[(i+<span class="number">1</span>)%<span class="built_in">len</span>(a)]</span><br><span class="line">pl(a)</span><br><span class="line"><span class="comment"># xyctf&#123;you_know_8086&#125;</span></span><br></pre></td></tr></table></figure><h4 id="喵喵的flag碎了一地">喵喵的flag碎了一地</h4><p>这个不用多说，直接跟着提示走就好</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;<span class="symbol">My_fl@</span><span class="symbol">g_h4s_br0ken_4parT_Bu7_Y0u_c@</span>n_f1x_1t!&#125;</span><br></pre></td></tr></table></figure><h4 id="聪明的信使">聪明的信使</h4><p>一眼凯撒加密，拿去爆破</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Y0u_KnOw_Crypt0_14_v3ry_Imp0rt@nt!&#125;</span><br></pre></td></tr></table></figure><p>偏移是9</p><h4 id="Trustme">Trustme</h4><p>解包之后感觉哪里不对，好像什么都没有，但是assets里面有一个mydb的文件，打开看看，全是0xff，异或一下试试，出来了QAQ</p><p>查一下知道这个是SQLite文件，用在线工具分析文件得到flag</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">XYCTF</span><span class="template-variable">&#123;And0r1d_15_V3ryEasy&#125;</span></span><br></pre></td></tr></table></figure><h4 id="Baby-Unity-ez-Unity">Baby Unity / ez Unity</h4><p>这两个的做法一模一样，唯一的区别是ez里面的dat文件头被修改了，先放flag，然后记录一下第一次遇到li2cpp的题</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">XYCTF</span>&#123;<span class="number">389</span>f6900-e12d-<span class="number">4</span>c54-a85d-<span class="number">64</span>a54af9f84c&#125;</span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">XYCTF</span><span class="template-variable">&#123;IL2CPP_1s_intere5t1ng&#125;</span></span><br></pre></td></tr></table></figure><p>原理大概是这样：</p><p>unity的游戏输出有两种一种是mono的c#（一般逆的），这种一般在managed文件夹里有Assembly-CShap.dll文件，然后这个东西可以直接被dnspy之类的直接反编译。这次这种叫li2cpp（中间代码 to cpp）,通过失去动态编译特性来换取cpp的多平台，速度快等优势，对逆向来说：最恶心的就是文件变成了GameAssembly.dll，这是个PE文件（在移动端是so文件），也就是说符号表完全不必要有，这样就不好逆了（如果有佬可以直接逆的话，只能说NB），不过这个文件也没有常量表之类的东西所以肯定在一个地方存了它的数据来读入。</p><p>根据检索网络得知：符号表位于\il2cpp_data\Metadata\global-metadata.dat</p><p>现在的目的就是把这个文件导入进去了。</p><p>有一个工具叫做licppdumper可以做到这一点：</p><p>下载后双击exe，提示选择li2cpp二进制文件，选择GameAssembly.dll，又提示选择dat文件选择dat文件（baby那道题可以直接导入，ez那道题做了加密）</p><p>发现导入不了，去010看看结构：</p><p><img src="https://s2.loli.net/2024/04/06/cElIVup7XRNadnD.png" alt="错误的结构"></p><p><img src="https://s2.loli.net/2024/04/06/DjiS8cWGAzyf3U5.png" alt="正常的结构"></p><p>把第一排改成AF 1B B1 FA 1D 00 00 00 00 01 00 00，删几个字符，让后面接着C0 B2</p><p>然后把下面的内容对齐</p><p>直接dumper导入，导入成功！</p><p>然后打开ida，导入脚本文件，然后选择刚刚用dumper生成的两个json文件：</p><p>script.json和stringliteral.json文件，两个选择完之后,符号表就恢复了，然后在ida里面直接找加密函数，应该很好看，一个是RC4，一个是AES直接放到在线网站上解就好了，其中用到的数被还原成注释了，不要看错了QAQ</p><h3 id="week2">week2</h3><h4 id="ez-cube">ez_cube</h4><p>用ida反编译分析，找到打乱方式</p><p><img src="https://s2.loli.net/2024/04/09/21wu6gCdpSfPxc5.png" alt="image-20240409183514183"></p><p>百度搜索cfop pll可得公式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">R <span class="string">U&#x27; R U R U R U&#x27;</span> <span class="string">R&#x27; U&#x27;</span> R2</span><br><span class="line">flag&#123;RuRURURuruRR&#125;</span><br></pre></td></tr></table></figure><h4 id="ez-rand">ez_rand</h4><p>这个题就是考rand函数在不同环境下效果不同这个知识点，刚好我一开始就用的cpp，直接写脚本爆破出rand然后用就好了，还有注意传入初始化的值在al寄存器里面，所以要&amp;0xffff</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span>;</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span>;</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span>;</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line">    <span class="type">long</span> tstart = <span class="number">1640966400</span>;</span><br><span class="line">    <span class="type">long</span> tlast = <span class="number">1735660800</span>;</span><br><span class="line">    <span class="type">long</span> time = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> flag[<span class="number">29</span>] = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span> &#125;;<span class="comment">/*&quot;XYCTF&#123;&quot;;*/</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">char</span> data[<span class="number">29</span>] = &#123;</span><br><span class="line">    <span class="number">0x5D</span>, <span class="number">0x0C</span>, <span class="number">0x6C</span>, <span class="number">0xEA</span>, <span class="number">0x46</span>, <span class="number">0x19</span>, <span class="number">0xFC</span>, <span class="number">0x34</span>, <span class="number">0xB2</span>, <span class="number">0x62</span>, <span class="number">0x23</span>, <span class="number">0x07</span>, <span class="number">0x62</span>, <span class="number">0x22</span>, <span class="number">0x6E</span>, <span class="number">0xFB</span>,</span><br><span class="line">    <span class="number">0xB4</span>, <span class="number">0xE8</span>, <span class="number">0xF2</span>, <span class="number">0xA9</span>, <span class="number">0x91</span>, <span class="number">0x12</span>, <span class="number">0x21</span>, <span class="number">0x86</span>, <span class="number">0xDB</span>, <span class="number">0x8E</span>, <span class="number">0xE9</span>, <span class="number">0x43</span>, <span class="number">0x4D</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">//for (time = tstart; time &lt;= tlast; time++)</span></span><br><span class="line">    <span class="comment">//&#123;</span></span><br><span class="line">    <span class="comment">//    srand(time &amp; 0xffff);</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    int f = 0;</span></span><br><span class="line">    <span class="comment">//    for (int i = 0; i &lt; 6; i++)</span></span><br><span class="line">    <span class="comment">//    &#123;</span></span><br><span class="line">    <span class="comment">//        int num = rand();</span></span><br><span class="line">    <span class="comment">//        if ((flag[i] ^ (unsigned __int8)(num + ((((unsigned __int64)(2155905153 * num) &gt;&gt; 32) &amp; 0x80000000) != 0) + ((int)((unsigned __int64)(2155905153 * num) &gt;&gt; 32) &gt;&gt; 7))) == data[i])</span></span><br><span class="line">    <span class="comment">//        &#123;</span></span><br><span class="line">    <span class="comment">//            f++;</span></span><br><span class="line">    <span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//        if (f &gt;= 6)</span></span><br><span class="line">    <span class="comment">//        &#123;</span></span><br><span class="line">    <span class="comment">//            printf(&quot;%d  &quot;, time &amp; 0xffff);</span></span><br><span class="line">    <span class="comment">//        &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">//    //std::cout &lt;&lt; std::endl;</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    time = <span class="number">21308</span>;</span><br><span class="line">    <span class="built_in">srand</span>(time);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">29</span>; i++) &#123;</span><br><span class="line">        <span class="type">int</span> num = <span class="built_in">rand</span>();</span><br><span class="line">        <span class="type">unsigned</span> <span class="type">char</span> x = (<span class="type">unsigned</span> __int8)(num + ((((<span class="type">unsigned</span> __int64)(<span class="number">2155905153</span> * num) &gt;&gt; <span class="number">32</span>) &amp; <span class="number">0x80000000</span>) != <span class="number">0</span>) + ((<span class="type">int</span>)((<span class="type">unsigned</span> __int64)(<span class="number">2155905153</span> * num) &gt;&gt; <span class="number">32</span>) &gt;&gt; <span class="number">7</span>));</span><br><span class="line">        flag[i] = data[i] ^ x;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    std::cout &lt;&lt; flag;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//XYCTF&#123;R@nd_1s_S0_S0_S0_easy!&#125;</span></span><br></pre></td></tr></table></figure><h4 id="今夕是何年">今夕是何年</h4><p>架构题，是龙芯架构，配好虚拟机，然后直接输出</p><p><img src="https://s2.loli.net/2024/04/09/dmL7viqNCcRYBZI.png" alt="image-20240409185205541"></p><h4 id="何须相思煮余年">何须相思煮余年</h4><p>居然是一个txt文件，开头是push ebp，那没事了，直接ida32打开</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">enc = [<span class="number">88</span>,<span class="number">88</span>,<span class="number">134</span>,<span class="number">87</span>,<span class="number">74</span>,<span class="number">118</span>,<span class="number">318</span>,<span class="number">101</span>,<span class="number">59</span>,<span class="number">92</span>,<span class="number">480</span>,<span class="number">60</span>,<span class="number">65</span>,<span class="number">41</span>,<span class="number">770</span>,<span class="number">110</span>,<span class="number">73</span>,<span class="number">31</span>,<span class="number">918</span>,<span class="number">39</span>,<span class="number">120</span>,<span class="number">27</span>,<span class="number">1188</span>,<span class="number">47</span>,<span class="number">77</span>,<span class="number">24</span>,<span class="number">1352</span>,<span class="number">44</span>,<span class="number">81</span>,<span class="number">23</span>,<span class="number">1680</span>,<span class="number">46</span>,<span class="number">85</span>,<span class="number">15</span>,<span class="number">1870</span>,<span class="number">66</span>,<span class="number">91</span>,<span class="number">16</span>,<span class="number">4750</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">39</span>):</span><br><span class="line">    <span class="keyword">if</span> (i%<span class="number">4</span>==<span class="number">0</span>):</span><br><span class="line">        enc[i]-=i</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">4</span>==<span class="number">1</span>):</span><br><span class="line">        enc[i]+=i</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">4</span>==<span class="number">2</span>):</span><br><span class="line">        enc[i]//=i</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">4</span>==<span class="number">3</span>):</span><br><span class="line">        enc[i]^=i</span><br><span class="line">pl(enc)</span><br><span class="line"><span class="comment"># XYCTF&#123;5b3e07567a9034d06851475481507a75&#125;</span></span><br></pre></td></tr></table></figure><h4 id="砸核桃">砸核桃</h4><p>查一下壳是nspack，直接找个工具脱了</p><p>然后打开。又是很简单的逻辑,直接写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">k = <span class="string">&#x27;this_is_not_flag&#x27;</span></span><br><span class="line"></span><br><span class="line">last = [<span class="number">0x00000012</span>, <span class="number">0x00000004</span>, <span class="number">0x00000008</span>, <span class="number">0x00000014</span>, <span class="number">0x00000024</span>, <span class="number">0x0000005C</span>, <span class="number">0x0000004A</span>, <span class="number">0x0000003D</span>, <span class="number">0x00000056</span>, <span class="number">0x0000000A</span>, <span class="number">0x00000010</span>, <span class="number">0x00000067</span>, <span class="number">0x00000000</span>, <span class="number">0x00000041</span>, <span class="number">0x00000000</span>, <span class="number">0x00000001</span>, <span class="number">0x00000046</span>, <span class="number">0x0000005A</span>, <span class="number">0x00000044</span>, <span class="number">0x00000042</span>, <span class="number">0x0000006E</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000044</span>, <span class="number">0x00000072</span>, <span class="number">0x0000000C</span>, <span class="number">0x0000000D</span>, <span class="number">0x00000040</span>, <span class="number">0x0000003E</span>, <span class="number">0x0000004B</span>, <span class="number">0x0000005F</span>, <span class="number">0x00000002</span>, <span class="number">0x00000001</span>, <span class="number">0x0000004C</span>, <span class="number">0x0000005E</span>, <span class="number">0x0000005B</span>, <span class="number">0x00000017</span>, <span class="number">0x0000006E</span>, <span class="number">0x0000000C</span>, <span class="number">0x00000016</span>, <span class="number">0x00000068</span>, <span class="number">0x0000005B</span>, <span class="number">0x00000012</span>, <span class="number">0x00000000</span>, <span class="number">0x00000000</span>]</span><br><span class="line"></span><br><span class="line">pxor(last,k)</span><br><span class="line"><span class="comment"># flag&#123;59b8ed8f-af22-11e7-bb4a-3cf862d1ee75&#125;</span></span><br></pre></td></tr></table></figure><h3 id="week3">week3</h3><h4 id="ez-enc">ez_enc</h4><p>打开main，是一个简单的带mod的加密，既然是前一个数据和后一个数据有关系，还不大，直接z3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">key = <span class="string">&#x27;IMouto&#x27;</span></span><br><span class="line"></span><br><span class="line">last = [<span class="number">0x27</span>, <span class="number">0x24</span>, <span class="number">0x17</span>, <span class="number">0x0B</span>, <span class="number">0x50</span>, <span class="number">0x03</span>, <span class="number">0xC8</span>, <span class="number">0x0C</span>, </span><br><span class="line">        <span class="number">0x1F</span>, <span class="number">0x17</span>, <span class="number">0x36</span>, <span class="number">0x55</span>, <span class="number">0xCB</span>, <span class="number">0x2D</span>, <span class="number">0xE9</span>, <span class="number">0x32</span>, </span><br><span class="line">        <span class="number">0x0E</span>, <span class="number">0x11</span>, <span class="number">0x26</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x07</span>, <span class="number">0xFC</span>, <span class="number">0x27</span>, </span><br><span class="line">        <span class="number">0x3D</span>, <span class="number">0x2D</span>, <span class="number">0xED</span>, <span class="number">0x35</span>, <span class="number">0x59</span>, <span class="number">0xEB</span>, <span class="number">0x3C</span>, <span class="number">0x3E</span>, </span><br><span class="line">        <span class="number">0xE4</span>, <span class="number">0x7D</span>]</span><br><span class="line"></span><br><span class="line">out,flag = zini(<span class="number">34</span>)</span><br><span class="line">f = Solver()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>):</span><br><span class="line">    f.add(last[i]==(<span class="built_in">ord</span>(key[i%<span class="number">6</span>])^out[i+<span class="number">1</span>]+out[i] % <span class="number">20</span>))</span><br><span class="line"></span><br><span class="line">isflag(f,flag)</span><br><span class="line">zcheck(f,flag)</span><br><span class="line"><span class="comment"># flag&#123;!_r3ea11y_w4nt_@_cu7e_s1$ter&#125;</span></span><br></pre></td></tr></table></figure><h4 id="what’s-this">what’s this</h4><p>是lua的字节码，放到在线解码里面解码，接出来就是正常的lua代码，</p><p>前面是一堆混淆的函数，最后是真的代码，大概是这个</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Xor</span><span class="params">(num1, num2)</span></span></span><br><span class="line">  <span class="keyword">local</span> tmp1 = num1</span><br><span class="line">  <span class="keyword">local</span> tmp2 = num2</span><br><span class="line">  <span class="keyword">local</span> str = <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="keyword">repeat</span></span><br><span class="line">    <span class="keyword">local</span> s1 = tmp1 % <span class="number">2</span></span><br><span class="line">    <span class="keyword">local</span> s2 = tmp2 % <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> s1 == s2 <span class="keyword">then</span></span><br><span class="line">      str = <span class="string">&quot;0&quot;</span> .. str</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      str = <span class="string">&quot;1&quot;</span> .. str</span><br><span class="line">    <span class="keyword">end</span></span><br><span class="line">    tmp1 = <span class="built_in">math</span>.<span class="built_in">modf</span>(tmp1 / <span class="number">2</span>)</span><br><span class="line">    tmp2 = <span class="built_in">math</span>.<span class="built_in">modf</span>(tmp2 / <span class="number">2</span>)</span><br><span class="line">  <span class="keyword">until</span> tmp1 == <span class="number">0</span> <span class="keyword">and</span> tmp2 == <span class="number">0</span></span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">tonumber</span>(str, <span class="number">2</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">value = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="built_in">output</span> = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">true</span> <span class="keyword">do</span></span><br><span class="line">  <span class="keyword">local</span> temp = <span class="built_in">string</span>.<span class="built_in">byte</span>(flag, i)</span><br><span class="line">  temp = <span class="built_in">string</span>.<span class="built_in">char</span>(Xor(temp, <span class="number">8</span>) % <span class="number">256</span>)</span><br><span class="line">  value = value .. temp</span><br><span class="line">  i = i + <span class="number">1</span></span><br><span class="line">  <span class="keyword">if</span> i &gt; <span class="built_in">string</span>.<span class="built_in">len</span>(flag) <span class="keyword">then</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> _ = <span class="number">1</span>, <span class="number">1000</span> <span class="keyword">do</span></span><br><span class="line">  x = <span class="number">3</span></span><br><span class="line">  y = x * <span class="number">3</span></span><br><span class="line">  z = y / <span class="number">4</span></span><br><span class="line">  w = z - <span class="number">5</span></span><br><span class="line">  <span class="keyword">if</span> w == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This line will never be executed&quot;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">1</span>, <span class="built_in">string</span>.<span class="built_in">len</span>(flag) <span class="keyword">do</span></span><br><span class="line">  temp = <span class="built_in">string</span>.<span class="built_in">byte</span>(value, i)</span><br><span class="line">  temp = <span class="built_in">string</span>.<span class="built_in">char</span>(temp + <span class="number">3</span>)</span><br><span class="line">  <span class="built_in">output</span> = <span class="built_in">output</span> .. temp</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">result = <span class="built_in">output</span>:<span class="built_in">rep</span>(<span class="number">10</span>)</span><br><span class="line">invalid_list = &#123;</span><br><span class="line">  <span class="number">1</span>,</span><br><span class="line">  <span class="number">2</span>,</span><br><span class="line">  <span class="number">3</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> _ = <span class="number">1</span>, <span class="number">20</span> <span class="keyword">do</span></span><br><span class="line">  <span class="built_in">table</span>.<span class="built_in">insert</span>(invalid_list, <span class="number">4</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> _ = <span class="number">1</span>, <span class="number">50</span> <span class="keyword">do</span></span><br><span class="line">  result = result .. <span class="string">&quot;A&quot;</span></span><br><span class="line">  <span class="built_in">table</span>.<span class="built_in">insert</span>(invalid_list, <span class="number">4</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> i = <span class="number">1</span>, <span class="built_in">string</span>.<span class="built_in">len</span>(<span class="built_in">output</span>) <span class="keyword">do</span></span><br><span class="line">  temp = <span class="built_in">string</span>.<span class="built_in">byte</span>(<span class="built_in">output</span>, i)</span><br><span class="line">  temp = <span class="built_in">string</span>.<span class="built_in">char</span>(temp - <span class="number">1</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> _ = <span class="number">1</span>, <span class="number">30</span> <span class="keyword">do</span></span><br><span class="line">  result = result .. <span class="built_in">string</span>.<span class="built_in">lower</span>(<span class="built_in">output</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> _ = <span class="number">1</span>, <span class="number">950</span> <span class="keyword">do</span></span><br><span class="line">  x = <span class="number">3</span></span><br><span class="line">  y = x * <span class="number">3</span></span><br><span class="line">  z = y / <span class="number">4</span></span><br><span class="line">  w = z - <span class="number">5</span></span><br><span class="line">  <span class="keyword">if</span> w == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This line will never be executed&quot;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">for</span> _ = <span class="number">1</span>, <span class="number">50</span> <span class="keyword">do</span></span><br><span class="line">  x = <span class="number">-1</span></span><br><span class="line">  y = x * <span class="number">4</span></span><br><span class="line">  z = y / <span class="number">2</span></span><br><span class="line">  w = z - <span class="number">3</span></span><br><span class="line">  <span class="keyword">if</span> w == <span class="number">0</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;This line will also never be executed&quot;</span>)</span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&quot;base64&quot;</span>)</span><br><span class="line">obfuscated_output = to_base64(<span class="built_in">output</span>)</span><br><span class="line">obfuscated_output = <span class="built_in">string</span>.<span class="built_in">reverse</span>(obfuscated_output)</span><br><span class="line">obfuscated_output = <span class="built_in">string</span>.<span class="built_in">gsub</span>(obfuscated_output, <span class="string">&quot;g&quot;</span>, <span class="string">&quot;3&quot;</span>)</span><br><span class="line">obfuscated_output = <span class="built_in">string</span>.<span class="built_in">gsub</span>(obfuscated_output, <span class="string">&quot;H&quot;</span>, <span class="string">&quot;4&quot;</span>)</span><br><span class="line">obfuscated_output = <span class="built_in">string</span>.<span class="built_in">gsub</span>(obfuscated_output, <span class="string">&quot;W&quot;</span>, <span class="string">&quot;6&quot;</span>)</span><br><span class="line">invalid_variable = obfuscated_output:<span class="built_in">rep</span>(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">if</span> obfuscated_output == <span class="string">&quot;==AeuFEcwxGPuJ0PBNzbC16ctFnPB5DPzI0bwx6bu9GQ2F1XOR1U&quot;</span> <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;You get the flag.&quot;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">print</span>(<span class="string">&quot;F**k!&quot;</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分析一下是base64加换字加一些奇怪的加密，那丢给chatgpt</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">Xor</span>(<span class="params">num1, num2</span>):</span><br><span class="line">    <span class="keyword">return</span> num1 ^ num2</span><br><span class="line"></span><br><span class="line">obfuscated_output = <span class="string">&quot;==AeuFEcwxGPuJ0PBNzbC16ctFnPB5DPzI0bwx6bu9GQ2F1XOR1U&quot;</span></span><br><span class="line">obfuscated_output = obfuscated_output.replace(<span class="string">&quot;3&quot;</span>, <span class="string">&quot;g&quot;</span>).replace(<span class="string">&quot;4&quot;</span>, <span class="string">&quot;H&quot;</span>).replace(<span class="string">&quot;6&quot;</span>, <span class="string">&quot;W&quot;</span>)[::-<span class="number">1</span>]</span><br><span class="line">output = base64.b64decode(obfuscated_output).decode()</span><br><span class="line"></span><br><span class="line">value = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> output:</span><br><span class="line">    temp = <span class="built_in">ord</span>(char) - <span class="number">3</span></span><br><span class="line">    value += <span class="built_in">chr</span>(temp)</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> value:</span><br><span class="line">    temp = Xor(<span class="built_in">ord</span>(char), <span class="number">8</span>) % <span class="number">256</span></span><br><span class="line">    flag += <span class="built_in">chr</span>(temp)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># XYCTF&#123;5dcbaed781363fbfb7d8647c1aee6c&#125;</span></span><br></pre></td></tr></table></figure><h4 id="ez-math">ez_math</h4><p>是python的混淆，还没有工具，用美化工具美化一下，还是可以理解，大概就是把a*b sum了一下，最后再化简一手</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(flag) == <span class="number">32</span> <span class="keyword">and</span> (</span><br><span class="line">    (flag[<span class="number">0</span>] * (flag[<span class="number">0</span>] - <span class="number">176</span>)) +</span><br><span class="line">    (flag[<span class="number">1</span>] * (flag[<span class="number">1</span>] - <span class="number">178</span>)) +</span><br><span class="line">    (flag[<span class="number">2</span>] * (flag[<span class="number">2</span>] - <span class="number">134</span>)) +</span><br><span class="line">    (flag[<span class="number">3</span>] * (flag[<span class="number">3</span>] - <span class="number">168</span>)) +</span><br><span class="line">    (flag[<span class="number">4</span>] * (flag[<span class="number">4</span>] - <span class="number">140</span>)) +</span><br><span class="line">    (flag[<span class="number">5</span>] * (flag[<span class="number">5</span>] - <span class="number">246</span>)) +</span><br><span class="line">    (flag[<span class="number">6</span>] * (flag[<span class="number">6</span>] - <span class="number">226</span>)) +</span><br><span class="line">    (flag[<span class="number">7</span>] * (flag[<span class="number">7</span>] - <span class="number">110</span>)) +</span><br><span class="line">    (flag[<span class="number">8</span>] * (flag[<span class="number">8</span>] - <span class="number">174</span>)) +</span><br><span class="line">    (flag[<span class="number">9</span>] * (flag[<span class="number">9</span>] - <span class="number">178</span>)) +</span><br><span class="line">    (flag[<span class="number">10</span>] * (flag[<span class="number">10</span>] - <span class="number">142</span>)) +</span><br><span class="line">    (flag[<span class="number">11</span>] * (flag[<span class="number">11</span>] - <span class="number">230</span>)) +</span><br><span class="line">    (flag[<span class="number">12</span>] * (flag[<span class="number">12</span>] - <span class="number">198</span>)) +</span><br><span class="line">    (flag[<span class="number">13</span>] * (flag[<span class="number">13</span>] - <span class="number">170</span>)) +</span><br><span class="line">    (flag[<span class="number">14</span>] * (flag[<span class="number">14</span>] - <span class="number">234</span>)) +</span><br><span class="line">    (flag[<span class="number">15</span>] * (flag[<span class="number">15</span>] - <span class="number">224</span>)) +</span><br><span class="line">    (flag[<span class="number">16</span>] * (flag[<span class="number">16</span>] - <span class="number">232</span>)) +</span><br><span class="line">    (flag[<span class="number">17</span>] * (flag[<span class="number">17</span>] - <span class="number">168</span>)) +</span><br><span class="line">    (flag[<span class="number">18</span>] * (flag[<span class="number">18</span>] - <span class="number">178</span>)) +</span><br><span class="line">    (flag[<span class="number">19</span>] * (flag[<span class="number">19</span>] - <span class="number">176</span>)) +</span><br><span class="line">    (flag[<span class="number">20</span>] * (flag[<span class="number">20</span>] - <span class="number">212</span>)) +</span><br><span class="line">    (flag[<span class="number">21</span>] * (flag[<span class="number">21</span>] - <span class="number">220</span>)) +</span><br><span class="line">    (flag[<span class="number">22</span>] * (flag[<span class="number">22</span>] - <span class="number">212</span>)) +</span><br><span class="line">    (flag[<span class="number">23</span>] * (flag[<span class="number">23</span>] - <span class="number">150</span>)) +</span><br><span class="line">    (flag[<span class="number">24</span>] * (flag[<span class="number">24</span>] - <span class="number">222</span>)) +</span><br><span class="line">    (flag[<span class="number">25</span>] * (flag[<span class="number">25</span>] - <span class="number">242</span>)) +</span><br><span class="line">    (flag[<span class="number">26</span>] * (flag[<span class="number">26</span>] - <span class="number">170</span>)) +</span><br><span class="line">    (flag[<span class="number">27</span>] * (flag[<span class="number">27</span>] - <span class="number">168</span>)) +</span><br><span class="line">    (flag[<span class="number">28</span>] * (flag[<span class="number">28</span>] - <span class="number">150</span>)) +</span><br><span class="line">    (flag[<span class="number">29</span>] * (flag[<span class="number">29</span>] - <span class="number">232</span>)) +</span><br><span class="line">    (flag[<span class="number">30</span>] * (flag[<span class="number">30</span>] - <span class="number">142</span>)) +</span><br><span class="line">    (flag[<span class="number">31</span>] * (flag[<span class="number">31</span>] - <span class="number">250</span>)) + <span class="number">297412</span> == <span class="number">0</span></span><br><span class="line">):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;yes&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过观察可以发现，每一行后面减的数除以二就是flag</p><p>那就直接除以二</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">XYCTF</span><span class="template-variable">&#123;q7WYGscUuptTYXjnjKoyUTKtG&#125;</span></span><br></pre></td></tr></table></figure><h4 id="给阿姨倒一杯卡布奇诺">给阿姨倒一杯卡布奇诺</h4><p>是一个简单的tea，魔改的部分是一开始的data1和data2的异或</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">encrypt</span><span class="params">(<span class="type">uint32_t</span>* v, <span class="type">uint32_t</span>* k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">uint32_t</span> i;</span><br><span class="line"><span class="type">uint32_t</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">data1 ^= *v;</span><br><span class="line">data2 ^= v[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">0x1F</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line">sum += <span class="number">1853174124</span>;</span><br><span class="line">data1 += ((data2 &gt;&gt; <span class="number">5</span>) + k[<span class="number">1</span>]) ^ (data2 + sum) ^ (*k + <span class="number">16</span> * data2) ^ (sum + i);</span><br><span class="line">data2 += ((data1 &gt;&gt; <span class="number">5</span>) + k[<span class="number">3</span>]) ^ (data1 + sum) ^ (k[<span class="number">2</span>] + <span class="number">16</span> * data1) ^ (sum + i);</span><br><span class="line">&#125;</span><br><span class="line">*v = data1;</span><br><span class="line">v[<span class="number">1</span>] = data2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个还是相当于把传入当key，data1和2更像是加密的值，要解密直接在最后异或上前一个的最后值就出来了。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">decrypt</span><span class="params">(<span class="type">uint32_t</span>* v, <span class="type">uint32_t</span>* k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> i;</span><br><span class="line"><span class="type">uint32_t</span> sum = <span class="number">0x6E75316C</span> * <span class="number">32</span>;</span><br><span class="line"></span><br><span class="line">data1 = *v;</span><br><span class="line">data2 = v[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0x1f</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">data2 -= ((data1 &gt;&gt; <span class="number">5</span>) + k[<span class="number">3</span>]) ^ (data1 + sum) ^ (k[<span class="number">2</span>] + <span class="number">16</span> * data1) ^ (sum + i);</span><br><span class="line">data1 -= ((data2 &gt;&gt; <span class="number">5</span>) + k[<span class="number">1</span>]) ^ (data2 + sum) ^ (*k + <span class="number">16</span> * data2) ^ (sum + i);</span><br><span class="line">sum -= <span class="number">0x6E75316C</span>;</span><br><span class="line">&#125;</span><br><span class="line">*v = *(v - <span class="number">2</span>) ^ data1;</span><br><span class="line">v[<span class="number">1</span>] = *(v - <span class="number">1</span>) ^ data2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里要注意i要是反着的，因为加密的时候用了i</p><p>出来是</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">62333331</span></span><br><span class="line"><span class="number">34656666</span></span><br><span class="line"><span class="number">32643130</span></span><br><span class="line"><span class="number">30613332</span></span><br><span class="line"><span class="number">35383332</span></span><br><span class="line"><span class="number">63303964</span></span><br><span class="line"><span class="number">63316635</span></span><br><span class="line"><span class="number">37373361</span></span><br></pre></td></tr></table></figure><p>转成字符再用xyctf包起来(题目说的是flag{}但是试了不行)：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">XYCTF</span>&#123;<span class="number">133</span>bffe401d223a02385d90c5f1ca377&#125;</span><br></pre></td></tr></table></figure><h4 id="easy-language">easy language</h4><p>这个题好坑啊！！QAQ</p><p>先通过e-decompliner插件找到主要目的地</p><p>可以看到是aes</p><p>最后的判断是</p><p><img src="https://s2.loli.net/2024/04/18/LKfxNsRWCpMVqkP.png" alt="image-20240418095501581"></p><p>根据signseacher扫描结果，发现有反调试，通过附加调试跳过</p><p>在</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v5 = 字节集比较((_BYTE *)byte_59D0F4 + <span class="number">8</span>, encoded, v3);</span><br></pre></td></tr></table></figure><p>得到byte_59D0F4中的值即正确的密文，</p><p>在</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mode = <span class="string">&quot;AES-ECB&quot;</span>;</span><br><span class="line"> v9 = sub_401975((<span class="type">int</span> *)&amp;checknum, (_DWORD **)&amp;key, (<span class="type">char</span> **)&amp;mode, <span class="number">1</span>, <span class="number">7</span>, <span class="number">1</span>, &amp;v11, <span class="number">0</span>);</span><br></pre></td></tr></table></figure><p>中得到key</p><p>丢进在线工具解密aes</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RZy/zVEWMFxaCbzChAg<span class="number">8</span><span class="keyword">x</span><span class="number">26</span>XZYr<span class="number">51</span>rNVnM+zBoBp<span class="number">3</span>gya<span class="number">93</span>L<span class="number">9</span>QQXpFRin<span class="number">1</span>JE<span class="number">33</span>vyx</span><br><span class="line">welcometoxyctf!!</span><br><span class="line">XYCTF&#123;y<span class="number">0</span>u_<span class="title">@r3_v3ry_g00d_a7_E_l</span><span class="title">@ngu</span><span class="title">@ge</span>&#125;</span><br></pre></td></tr></table></figure><p>总结一下：如果遇到奇怪的字符串，像是部分不对的，以及有fake_flag可能有反调试</p><h4 id="馒头">馒头</h4><p>数据结构，直接按ans1把树画出来，直接画就好，</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">XYCTF</span><span class="template-variable">&#123;xaf1svut7rojh3de0&#125;</span></span><br></pre></td></tr></table></figure><h3 id="week4">week4</h3><h4 id="find-me">find_me</h4><p>一共有三个文件，只有4号是可执行文件，打开分析，发现是把3号加密成1号，那么尝试还原3号，注意其中使用了rand，所以应该写c代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">FILE* inputFile, * outputFile;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> sbox[<span class="number">512</span>] = &#123; <span class="number">0xF3</span>, <span class="number">0x75</span>, <span class="number">0xC9</span>, <span class="number">0xB4</span>, <span class="number">0x2A</span>, <span class="number">0x3A</span>, <span class="number">0x9A</span>, <span class="number">0x90</span>, <span class="number">0xBE</span>, <span class="number">0x43</span>, <span class="number">0x65</span>, <span class="number">0x33</span>, <span class="number">0x39</span>, <span class="number">0xD3</span>, <span class="number">0xF0</span>, <span class="number">0x46</span>, <span class="number">0xA5</span>, <span class="number">0x32</span>, <span class="number">0xCE</span>, <span class="number">0x4B</span>, <span class="number">0x8A</span>, <span class="number">0x6C</span>, <span class="number">0x60</span>, <span class="number">0xC7</span>, <span class="number">0x70</span>, <span class="number">0x55</span>, <span class="number">0xEF</span>, <span class="number">0x96</span>, <span class="number">0xB2</span>, <span class="number">0x08</span>, <span class="number">0xC7</span>, <span class="number">0x68</span>, <span class="number">0x53</span>, <span class="number">0x6E</span>, <span class="number">0xD9</span>, <span class="number">0x0D</span>, <span class="number">0xD4</span>, <span class="number">0x69</span>, <span class="number">0xCD</span>, <span class="number">0x87</span>, <span class="number">0x45</span>, <span class="number">0x01</span>, <span class="number">0xE9</span>, <span class="number">0x93</span>, <span class="number">0x7B</span>, <span class="number">0x21</span>, <span class="number">0x65</span>, <span class="number">0xDE</span>, <span class="number">0x8E</span>, <span class="number">0x24</span>, <span class="number">0x26</span>, <span class="number">0xA6</span>, <span class="number">0xC8</span>, <span class="number">0x94</span>, <span class="number">0x7E</span>, <span class="number">0xFD</span>, <span class="number">0x4F</span>, <span class="number">0xFD</span>, <span class="number">0xAD</span>, <span class="number">0x2B</span>, <span class="number">0x51</span>, <span class="number">0x28</span>, <span class="number">0x0A</span>, <span class="number">0x5C</span>, <span class="number">0xA1</span>, <span class="number">0x0E</span>, <span class="number">0x11</span>, <span class="number">0x45</span>, <span class="number">0x25</span>, <span class="number">0x6D</span>, <span class="number">0x6B</span>, <span class="number">0x9F</span>, <span class="number">0x75</span>, <span class="number">0x5D</span>, <span class="number">0x3E</span>, <span class="number">0x20</span>, <span class="number">0xFA</span>, <span class="number">0xDC</span>, <span class="number">0x07</span>, <span class="number">0xA3</span>, <span class="number">0x77</span>, <span class="number">0xC6</span>, <span class="number">0x8C</span>, <span class="number">0xEC</span>, <span class="number">0x8B</span>, <span class="number">0x3C</span>, <span class="number">0xCE</span>, <span class="number">0x2D</span>, <span class="number">0x18</span>, <span class="number">0xE3</span>, <span class="number">0xBA</span>, <span class="number">0xBD</span>, <span class="number">0xBC</span>, <span class="number">0xCA</span>, <span class="number">0xB7</span>, <span class="number">0xB4</span>, <span class="number">0x03</span>, <span class="number">0x5B</span>, <span class="number">0xF0</span>, <span class="number">0x4D</span>, <span class="number">0x4C</span>, <span class="number">0xF2</span>, <span class="number">0x3B</span>, <span class="number">0x34</span>, <span class="number">0x42</span>, <span class="number">0xB3</span>, <span class="number">0x39</span>, <span class="number">0x91</span>, <span class="number">0x67</span>, <span class="number">0x23</span>, <span class="number">0x16</span>, <span class="number">0xEA</span>, <span class="number">0x88</span>, <span class="number">0x05</span>, <span class="number">0x08</span>, <span class="number">0x19</span>, <span class="number">0xDA</span>, <span class="number">0xDF</span>, <span class="number">0xD0</span>, <span class="number">0xF5</span>, <span class="number">0x09</span>, <span class="number">0x23</span>, <span class="number">0x59</span>, <span class="number">0x6D</span>, <span class="number">0x62</span>, <span class="number">0x13</span>, <span class="number">0x85</span>, <span class="number">0xBD</span>, <span class="number">0x3D</span>, <span class="number">0x7E</span>, <span class="number">0x92</span>, <span class="number">0xE4</span>, <span class="number">0x82</span>, <span class="number">0x06</span>, <span class="number">0xBB</span>, <span class="number">0x7B</span>, <span class="number">0x6A</span>, <span class="number">0x47</span>, <span class="number">0xD9</span>, <span class="number">0xF6</span>, <span class="number">0x1E</span>, <span class="number">0x09</span>, <span class="number">0x58</span>, <span class="number">0x1A</span>, <span class="number">0xD8</span>, <span class="number">0xFE</span>, <span class="number">0x29</span>, <span class="number">0x8C</span>, <span class="number">0xBF</span>, <span class="number">0x54</span>, <span class="number">0xAF</span>, <span class="number">0xAE</span>, <span class="number">0xA2</span>, <span class="number">0x8F</span>, <span class="number">0xD6</span>, <span class="number">0xE7</span>, <span class="number">0xBB</span>, <span class="number">0x24</span>, <span class="number">0x97</span>, <span class="number">0x7A</span>, <span class="number">0xD7</span>, <span class="number">0x7F</span>, <span class="number">0xCB</span>, <span class="number">0x40</span>, <span class="number">0x3F</span>, <span class="number">0x49</span>, <span class="number">0x00</span>, <span class="number">0xDC</span>, <span class="number">0xE0</span>, <span class="number">0x5E</span>, <span class="number">0xC9</span>, <span class="number">0xE0</span>, <span class="number">0x95</span>, <span class="number">0x4E</span>, <span class="number">0xC4</span>, <span class="number">0x90</span>, <span class="number">0xEB</span>, <span class="number">0x74</span>, <span class="number">0x6B</span>, <span class="number">0xA0</span>, <span class="number">0x9D</span>, <span class="number">0xCD</span>, <span class="number">0xDE</span>, <span class="number">0xA2</span>, <span class="number">0x87</span>, <span class="number">0x1A</span>, <span class="number">0xD1</span>, <span class="number">0x12</span>, <span class="number">0xC8</span>, <span class="number">0x1B</span>, <span class="number">0x80</span>, <span class="number">0xE2</span>, <span class="number">0x4A</span>, <span class="number">0x10</span>, <span class="number">0x60</span>, <span class="number">0x79</span>, <span class="number">0x37</span>, <span class="number">0x29</span>, <span class="number">0x25</span>, <span class="number">0xBA</span>, <span class="number">0xAE</span>, <span class="number">0x04</span>, <span class="number">0x1B</span>, <span class="number">0xDB</span>, <span class="number">0xD5</span>, <span class="number">0x48</span>, <span class="number">0xFE</span>, <span class="number">0x51</span>, <span class="number">0x05</span>, <span class="number">0x83</span>, <span class="number">0x15</span>, <span class="number">0x64</span>, <span class="number">0xC4</span>, <span class="number">0x76</span>, <span class="number">0x34</span>, <span class="number">0xB5</span>, <span class="number">0xF2</span>, <span class="number">0xC5</span>, <span class="number">0x78</span>, <span class="number">0x6F</span>, <span class="number">0xC6</span>, <span class="number">0x10</span>, <span class="number">0x5F</span>, <span class="number">0x53</span>, <span class="number">0x81</span>, <span class="number">0xFB</span>, <span class="number">0x8D</span>, <span class="number">0x40</span>, <span class="number">0xE6</span>, <span class="number">0x71</span>, <span class="number">0xA8</span>, <span class="number">0x57</span>, <span class="number">0xB7</span>, <span class="number">0x99</span>, <span class="number">0x20</span>, <span class="number">0x98</span>, <span class="number">0x56</span>, <span class="number">0xF4</span>, <span class="number">0xD8</span>, <span class="number">0x70</span>, <span class="number">0xB9</span>, <span class="number">0xF8</span>, <span class="number">0xE4</span>, <span class="number">0xB5</span>, <span class="number">0x7A</span>, <span class="number">0xAA</span>, <span class="number">0xFA</span>, <span class="number">0x3C</span>, <span class="number">0x73</span>, <span class="number">0x77</span>, <span class="number">0xE8</span>, <span class="number">0xF9</span>, <span class="number">0x12</span>, <span class="number">0x83</span>, <span class="number">0x2A</span>, <span class="number">0xB1</span>, <span class="number">0xC1</span>, <span class="number">0x9F</span>, <span class="number">0xF5</span>, <span class="number">0x5E</span>, <span class="number">0xF1</span>, <span class="number">0xF6</span>, <span class="number">0xD7</span>, <span class="number">0x89</span>, <span class="number">0x30</span>, <span class="number">0x63</span>, <span class="number">0xF4</span>, <span class="number">0x68</span>, <span class="number">0xA9</span>, <span class="number">0x0B</span>, <span class="number">0x36</span>, <span class="number">0x85</span>, <span class="number">0xF8</span>, <span class="number">0xB3</span>, <span class="number">0x95</span>, <span class="number">0x64</span>, <span class="number">0x79</span>, <span class="number">0x56</span>, <span class="number">0x97</span>, <span class="number">0x19</span>, <span class="number">0x5F</span>, <span class="number">0xA8</span>, <span class="number">0x6C</span>, <span class="number">0x4C</span>, <span class="number">0x52</span>, <span class="number">0x69</span>, <span class="number">0xB6</span>, <span class="number">0x5A</span>, <span class="number">0x54</span>, <span class="number">0x63</span>, <span class="number">0x58</span>, <span class="number">0x16</span>, <span class="number">0x86</span>, <span class="number">0x46</span>, <span class="number">0xBE</span>, <span class="number">0x31</span>, <span class="number">0x1D</span>, <span class="number">0xCF</span>, <span class="number">0x42</span>, <span class="number">0x31</span>, <span class="number">0x59</span>, <span class="number">0xEE</span>, <span class="number">0xEA</span>, <span class="number">0x0F</span>, <span class="number">0x28</span>, <span class="number">0x57</span>, <span class="number">0x3B</span>, <span class="number">0x7F</span>, <span class="number">0xD0</span>, <span class="number">0xB9</span>, <span class="number">0x8D</span>, <span class="number">0xED</span>, <span class="number">0x44</span>, <span class="number">0x30</span>, <span class="number">0xA7</span>, <span class="number">0xC1</span>, <span class="number">0x5B</span>, <span class="number">0x04</span>, <span class="number">0x33</span>, <span class="number">0xAC</span>, <span class="number">0x02</span>, <span class="number">0x73</span>, <span class="number">0xDB</span>, <span class="number">0xFF</span>, <span class="number">0x01</span>, <span class="number">0x3D</span>, <span class="number">0xB1</span>, <span class="number">0x36</span>, <span class="number">0x9C</span>, <span class="number">0xA0</span>, <span class="number">0x4D</span>, <span class="number">0x9C</span>, <span class="number">0x3E</span>, <span class="number">0x72</span>, <span class="number">0xF1</span>, <span class="number">0x1F</span>, <span class="number">0x88</span>, <span class="number">0xE5</span>, <span class="number">0xAD</span>, <span class="number">0x00</span>, <span class="number">0x49</span>, <span class="number">0x0E</span>, <span class="number">0x3A</span>, <span class="number">0xE6</span>, <span class="number">0xD2</span>, <span class="number">0xE1</span>, <span class="number">0xE9</span>, <span class="number">0x44</span>, <span class="number">0x27</span>, <span class="number">0x52</span>, <span class="number">0x99</span>, <span class="number">0xEC</span>, <span class="number">0xBC</span>, <span class="number">0x47</span>, <span class="number">0xCC</span>, <span class="number">0xA6</span>, <span class="number">0x9E</span>, <span class="number">0xD2</span>, <span class="number">0x7C</span>, <span class="number">0xFB</span>, <span class="number">0x72</span>, <span class="number">0xDA</span>, <span class="number">0xA7</span>, <span class="number">0x9A</span>, <span class="number">0x86</span>, <span class="number">0x55</span>, <span class="number">0x8A</span>, <span class="number">0x76</span>, <span class="number">0x9B</span>, <span class="number">0xF3</span>, <span class="number">0x7C</span>, <span class="number">0x8F</span>, <span class="number">0x14</span>, <span class="number">0x7D</span>, <span class="number">0xC5</span>, <span class="number">0x94</span>, <span class="number">0x17</span>, <span class="number">0x8B</span>, <span class="number">0xAB</span>, <span class="number">0x15</span>, <span class="number">0xBF</span>, <span class="number">0x2E</span>, <span class="number">0xDD</span>, <span class="number">0x2C</span>, <span class="number">0xB0</span>, <span class="number">0x62</span>, <span class="number">0x89</span>, <span class="number">0x71</span>, <span class="number">0x92</span>, <span class="number">0x21</span>, <span class="number">0x9D</span>, <span class="number">0x0C</span>, <span class="number">0xEF</span>, <span class="number">0x9E</span>, <span class="number">0xD1</span>, <span class="number">0x2B</span>, <span class="number">0x06</span>, <span class="number">0xF7</span>, <span class="number">0x4F</span>, <span class="number">0xC3</span>, <span class="number">0xCF</span>, <span class="number">0xFF</span>, <span class="number">0x6E</span>, <span class="number">0xE5</span>, <span class="number">0xEB</span>, <span class="number">0x96</span>, <span class="number">0xF9</span>, <span class="number">0xDF</span>, <span class="number">0xCA</span>, <span class="number">0x07</span>, <span class="number">0xD4</span>, <span class="number">0xA3</span>, <span class="number">0x84</span>, <span class="number">0xE3</span>, <span class="number">0x1F</span>, <span class="number">0x66</span>, <span class="number">0x1D</span>, <span class="number">0x18</span>, <span class="number">0x35</span>, <span class="number">0x41</span>, <span class="number">0x2F</span>, <span class="number">0x02</span>, <span class="number">0x66</span>, <span class="number">0x2E</span>, <span class="number">0x6F</span>, <span class="number">0x61</span>, <span class="number">0xD5</span>, <span class="number">0x3F</span>, <span class="number">0x7D</span>, <span class="number">0x78</span>, <span class="number">0x1C</span>, <span class="number">0x32</span>, <span class="number">0xAB</span>, <span class="number">0xA4</span>, <span class="number">0x67</span>, <span class="number">0xC2</span>, <span class="number">0xC0</span>, <span class="number">0x1C</span>, <span class="number">0x11</span>, <span class="number">0xE2</span>, <span class="number">0x2C</span>, <span class="number">0x38</span>, <span class="number">0x8E</span>, <span class="number">0xB2</span>, <span class="number">0x48</span>, <span class="number">0xE1</span>, <span class="number">0x0A</span>, <span class="number">0x22</span>, <span class="number">0xD3</span>, <span class="number">0x41</span>, <span class="number">0xD6</span>, <span class="number">0x91</span>, <span class="number">0x0D</span>, <span class="number">0x03</span>, <span class="number">0xFC</span>, <span class="number">0xFC</span>, <span class="number">0x38</span>, <span class="number">0xAC</span>, <span class="number">0xA9</span>, <span class="number">0x98</span>, <span class="number">0xAA</span>, <span class="number">0x14</span>, <span class="number">0xCB</span>, <span class="number">0xCC</span>, <span class="number">0x4B</span>, <span class="number">0x81</span>, <span class="number">0x2D</span>, <span class="number">0x5C</span>, <span class="number">0xB8</span>, <span class="number">0x0F</span>, <span class="number">0x1E</span>, <span class="number">0xAF</span>, <span class="number">0x93</span>, <span class="number">0xB6</span>, <span class="number">0x50</span>, <span class="number">0x50</span>, <span class="number">0xE7</span>, <span class="number">0x35</span>, <span class="number">0x4A</span>, <span class="number">0xC2</span>, <span class="number">0xA5</span>, <span class="number">0x37</span>, <span class="number">0x43</span>, <span class="number">0x9B</span>, <span class="number">0x22</span>, <span class="number">0x80</span>, <span class="number">0xC3</span>, <span class="number">0xDD</span>, <span class="number">0xED</span>, <span class="number">0x5A</span>, <span class="number">0x5D</span>, <span class="number">0x0C</span>, <span class="number">0x0B</span>, <span class="number">0x6A</span>, <span class="number">0x27</span>, <span class="number">0x2F</span>, <span class="number">0x74</span>, <span class="number">0xEE</span>, <span class="number">0xF7</span>, <span class="number">0x26</span>, <span class="number">0x82</span>, <span class="number">0x84</span>, <span class="number">0xB8</span>, <span class="number">0xE8</span>, <span class="number">0x61</span>, <span class="number">0xA4</span>, <span class="number">0xB0</span>, <span class="number">0xC0</span>, <span class="number">0x13</span>, <span class="number">0x4E</span>, <span class="number">0xA1</span>, <span class="number">0x17</span> &#125;; </span><br><span class="line"><span class="type">int</span> v8 = <span class="number">0</span>, v10 = <span class="number">0</span>, v11 = <span class="number">0</span>, v9, i;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> v12, v13;</span><br><span class="line"></span><br><span class="line">inputFile = fopen(<span class="string">&quot;Doraemon1&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">outputFile = fopen(<span class="string">&quot;Doraemon3&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (inputFile == <span class="literal">NULL</span> || outputFile == <span class="literal">NULL</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;无法打开文件\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (!feof(inputFile)) &#123;</span><br><span class="line">v10 = (v10 + <span class="number">1</span>) % <span class="number">512</span>;</span><br><span class="line">v11 = (sbox[v10] + v11) % <span class="number">512</span>;</span><br><span class="line">v13 = sbox[v10];</span><br><span class="line">sbox[v10] = sbox[v11];</span><br><span class="line">sbox[v11] = v13;</span><br><span class="line">v12 = sbox[(<span class="type">unsigned</span> <span class="type">char</span>)((sbox[v11] + sbox[v10]) % <span class="number">512</span>)];</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> c = fgetc(inputFile) ^ v12;</span><br><span class="line">fputc(c, outputFile);</span><br><span class="line"></span><br><span class="line">srand(sbox[v8 % <span class="number">512</span>]);</span><br><span class="line">v9 = rand() % <span class="number">4</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; v9; ++i) &#123;</span><br><span class="line">fgetc(inputFile);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">++v8;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fclose(inputFile);</span><br><span class="line">fclose(outputFile);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就还原了3，打开3看一下，好像是通过3生成了一个here，那就执行一下，打开here一看，flag出来了</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;i_L0ve_Dor4emon_Fov3rver&#125;</span></span><br></pre></td></tr></table></figure><h4 id="舔狗四部曲–简爱">舔狗四部曲–简爱</h4><p>先看主函数，好像是两个tea接着一个vm，从后往前试一下，先解vm</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">processCode</span><span class="params">(<span class="type">int</span>* input)</span> &#123;</span><br><span class="line"><span class="type">int</span> code[<span class="number">1802</span>]; <span class="comment">// [rsp+10h] [rbp-1C30h] BYREF</span></span><br><span class="line"><span class="type">int</span> j; <span class="comment">// [rsp+1C38h] [rbp-8h]</span></span><br><span class="line"><span class="type">int</span> i; <span class="comment">// [rsp+1C3Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(code, <span class="number">0</span>, <span class="number">0x1C20</span>uLL);</span><br><span class="line">code[<span class="number">32</span>] = <span class="number">2</span>;<span class="comment">//前32使input[0]+32,这一个i，j+1</span></span><br><span class="line">code[<span class="number">65</span>] = <span class="number">2</span>;<span class="comment">//前32使input[1]+32,这一个i，j+1</span></span><br><span class="line">code[<span class="number">66</span>] = <span class="number">4</span>;<span class="comment">//与后一位相加再减70</span></span><br><span class="line">code[<span class="number">98</span>] = <span class="number">2</span>;<span class="comment">//前31个使input[2]+31,这一个i，j+1</span></span><br><span class="line">code[<span class="number">99</span>] = <span class="number">5</span>;<span class="comment">//与后一位相减再加70</span></span><br><span class="line">code[<span class="number">185</span>] = <span class="number">2</span>;<span class="comment">//85个使input[3]+85</span></span><br><span class="line">code[<span class="number">186</span>] = <span class="number">2</span>;<span class="comment">//跳到第5位</span></span><br><span class="line">code[<span class="number">187</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">188</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">189</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">190</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">191</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">192</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">193</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">194</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">195</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">196</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">197</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">198</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">199</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">200</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">201</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">202</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">203</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">204</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">205</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">206</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">207</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">208</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">209</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">210</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">211</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">212</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">213</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">214</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">215</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">216</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">217</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">218</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">219</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">220</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">221</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">222</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">223</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">224</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">225</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">226</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">227</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">228</span>] = <span class="number">1</span>;<span class="comment">//input[5]减42</span></span><br><span class="line">code[<span class="number">229</span>] = <span class="number">2</span>;<span class="comment">//input[6]</span></span><br><span class="line">code[<span class="number">232</span>] = <span class="number">2</span>;<span class="comment">//input[6]+=2,i,j+1</span></span><br><span class="line">code[<span class="number">256</span>] = <span class="number">2</span>;<span class="comment">//input[7]+=23,i,j+1</span></span><br><span class="line">code[<span class="number">257</span>] = <span class="number">5</span>;<span class="comment">//input[8]-后一位+70</span></span><br><span class="line">code[<span class="number">303</span>] = <span class="number">1</span>;<span class="comment">//input[8]+45</span></span><br><span class="line">code[<span class="number">304</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">305</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">306</span>] = <span class="number">1</span>;<span class="comment">//input[8]-4</span></span><br><span class="line">code[<span class="number">307</span>] = <span class="number">2</span>;<span class="comment">//i,j+1</span></span><br><span class="line">code[<span class="number">308</span>] = <span class="number">5</span>;<span class="comment">//input[9]-后一位+70</span></span><br><span class="line">code[<span class="number">328</span>] = <span class="number">1</span>;<span class="comment">//input[9]+19</span></span><br><span class="line">code[<span class="number">329</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">330</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">331</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">332</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">333</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">334</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">335</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">336</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">337</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">338</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">339</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">340</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">341</span>] = <span class="number">1</span>;<span class="comment">//input[9]-14</span></span><br><span class="line">code[<span class="number">342</span>] = <span class="number">2</span>;<span class="comment">//input[10]</span></span><br><span class="line">code[<span class="number">353</span>] = <span class="number">2</span>;<span class="comment">//input[10]+10,input[11]</span></span><br><span class="line">code[<span class="number">354</span>] = <span class="number">5</span>;<span class="comment">//input[11]-后一位+70</span></span><br><span class="line">code[<span class="number">430</span>] = <span class="number">2</span>;<span class="comment">//input[11]+75,input[12]</span></span><br><span class="line">code[<span class="number">431</span>] = <span class="number">2</span>;<span class="comment">//input[13]</span></span><br><span class="line">code[<span class="number">432</span>] = <span class="number">5</span>;<span class="comment">//input[13]-后一位+70</span></span><br><span class="line">code[<span class="number">523</span>] = <span class="number">2</span>;<span class="comment">//input[13]+90,input[14]</span></span><br><span class="line">code[<span class="number">524</span>] = <span class="number">5</span>;<span class="comment">//input[14]-后一位+70</span></span><br><span class="line">code[<span class="number">564</span>] = <span class="number">2</span>;<span class="comment">//input[14]+=39,input[15]</span></span><br><span class="line">code[<span class="number">565</span>] = <span class="number">5</span>;<span class="comment">//input[15]-后一位+70</span></span><br><span class="line">code[<span class="number">627</span>] = <span class="number">2</span>;<span class="comment">//input[15]+=61,input[16]</span></span><br><span class="line">code[<span class="number">628</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">629</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">630</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">631</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">632</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">633</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">634</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">635</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">636</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">637</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">638</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">639</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">640</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">641</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">642</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">643</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">644</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">645</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">646</span>] = <span class="number">1</span>;<span class="comment">//input[16]-=19</span></span><br><span class="line">code[<span class="number">647</span>] = <span class="number">2</span>;<span class="comment">//input[17]</span></span><br><span class="line">code[<span class="number">648</span>] = <span class="number">4</span>;<span class="comment">//input[17]+后一位-70</span></span><br><span class="line">code[<span class="number">649</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">650</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">651</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">652</span>] = <span class="number">1</span>;<span class="comment">//input[17]-4</span></span><br><span class="line">code[<span class="number">653</span>] = <span class="number">2</span>;<span class="comment">//input[18]</span></span><br><span class="line">code[<span class="number">680</span>] = <span class="number">2</span>;<span class="comment">//input[18]+26,input[19]</span></span><br><span class="line">code[<span class="number">687</span>] = <span class="number">2</span>;<span class="comment">//input[19]+6,input[20]</span></span><br><span class="line">code[<span class="number">688</span>] = <span class="number">4</span>;<span class="comment">//input[20]+后一位-70</span></span><br><span class="line">code[<span class="number">698</span>] = <span class="number">2</span>;<span class="comment">//input[20]+9,input[21]</span></span><br><span class="line">code[<span class="number">766</span>] = <span class="number">2</span>;<span class="comment">//input[21]+67,input[22]</span></span><br><span class="line">code[<span class="number">767</span>] = <span class="number">5</span>;<span class="comment">//input[22]-后一位+70</span></span><br><span class="line">code[<span class="number">818</span>] = <span class="number">2</span>;<span class="comment">//input[22]+50,input[23]</span></span><br><span class="line">code[<span class="number">819</span>] = <span class="number">1</span>;<span class="comment">//input[23]-1</span></span><br><span class="line">code[<span class="number">820</span>] = <span class="number">2</span>;<span class="comment">//input[24]</span></span><br><span class="line">code[<span class="number">827</span>] = <span class="number">2</span>;<span class="comment">//input[24]+6,input[25]</span></span><br><span class="line">code[<span class="number">828</span>] = <span class="number">5</span>;<span class="comment">//input[25]-后一位+70</span></span><br><span class="line">code[<span class="number">846</span>] = <span class="number">2</span>;<span class="comment">//input[25]+17,input[26]</span></span><br><span class="line">code[<span class="number">847</span>] = <span class="number">5</span>;<span class="comment">//input[26]-后一位+70</span></span><br><span class="line">code[<span class="number">890</span>] = <span class="number">2</span>;<span class="comment">//input[26]+42,input[27]</span></span><br><span class="line">code[<span class="number">891</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">892</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">893</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">894</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">895</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">896</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">897</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">898</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">899</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">900</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">901</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">902</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">903</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">904</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">905</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">906</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">907</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">908</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">909</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">910</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">911</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">912</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">913</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">914</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">915</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">916</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">917</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">918</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">919</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">920</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">921</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">922</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">923</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">924</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">925</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">926</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">927</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">928</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">929</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">930</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">931</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">932</span>] = <span class="number">1</span>;<span class="comment">//input[27]-42</span></span><br><span class="line">code[<span class="number">933</span>] = <span class="number">2</span>;<span class="comment">//input[28]</span></span><br><span class="line">code[<span class="number">934</span>] = <span class="number">5</span>;<span class="comment">//input[28]-后一位+70</span></span><br><span class="line">code[<span class="number">989</span>] = <span class="number">2</span>;<span class="comment">//input[28]-54,input[29]</span></span><br><span class="line">code[<span class="number">994</span>] = <span class="number">2</span>;<span class="comment">//input[29]+3,input[30]</span></span><br><span class="line">code[<span class="number">995</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">996</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">997</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">998</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">999</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1000</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1001</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1002</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1003</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1013</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1014</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1015</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1016</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1017</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1018</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1019</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1020</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1021</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1022</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1023</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1024</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1025</span>] = <span class="number">1</span>;</span><br><span class="line">code[<span class="number">1026</span>] = <span class="number">1</span>;<span class="comment">//input[30]-23</span></span><br><span class="line">code[<span class="number">1027</span>] = <span class="number">2</span>;<span class="comment">//input[31]</span></span><br><span class="line">code[<span class="number">1028</span>] = <span class="number">3</span>;</span><br><span class="line">i = <span class="number">31</span>;</span><br><span class="line">j = <span class="number">1027</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (j &lt;= <span class="number">-1</span> || i &lt;= <span class="number">-1</span>) &#123; <span class="keyword">break</span>; &#125;</span><br><span class="line"><span class="keyword">while</span> (code[j] == <span class="number">0</span>) &#123;<span class="comment">//code=0</span></span><br><span class="line">--j;</span><br><span class="line">--input[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (code[j] == <span class="number">1</span>) &#123;</span><br><span class="line">--j;</span><br><span class="line">++input[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (code[j] == <span class="number">2</span>) &#123;<span class="comment">//递增位</span></span><br><span class="line">--j;</span><br><span class="line">--i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (code[j] == <span class="number">3</span>)<span class="comment">//结束标志</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (code[j] == <span class="number">4</span>) &#123;</span><br><span class="line">input[i] = input[i] - input[i + <span class="number">1</span>] + <span class="number">70</span>;</span><br><span class="line">--j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (code[j] == <span class="number">5</span>) &#123;</span><br><span class="line">input[i] = input[i] + input[i + <span class="number">1</span>] - <span class="number">70</span>;</span><br><span class="line">--j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> input[<span class="number">32</span>] = &#123; <span class="number">102</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">123</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">118</span>, <span class="number">101</span>, <span class="number">95</span>, <span class="number">105</span>, <span class="number">115</span>, <span class="number">95</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">116</span>, <span class="number">95</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">101</span>, <span class="number">95</span>, <span class="number">115</span>, <span class="number">105</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">100</span>, <span class="number">95</span>, <span class="number">76</span>, <span class="number">111</span>, <span class="number">118</span>, <span class="number">101</span>, <span class="number">125</span> &#125;;</span><br><span class="line">processCode(input);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">sizeof</span>(input); i++) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%x&quot;</span>, input[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">//&quot;FLAG&#123;vm_is_A_3ecreT_l0Ve_revers&#125;&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果直接就出了</p><h4 id="舔狗四部曲–相逢已是上上签">舔狗四部曲–相逢已是上上签</h4><p>先用010edtior把指向pe头的偏移修好，改成0001。然后进去用z3把key求出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">key,out = zini(<span class="number">6</span>)</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line">s.add(<span class="number">532</span> * key[<span class="number">5</span>] + <span class="number">829</span> * key[<span class="number">4</span>] + <span class="number">258</span> * key[<span class="number">3</span>] + <span class="number">811</span> * key[<span class="number">2</span>] + <span class="number">997</span> * key[<span class="number">1</span>] + <span class="number">593</span> * key[<span class="number">0</span>] == <span class="number">292512</span>)</span><br><span class="line">s.add(<span class="number">576</span> * key[<span class="number">5</span>] + <span class="number">695</span> * key[<span class="number">4</span>] + <span class="number">602</span> * key[<span class="number">3</span>] + <span class="number">328</span> * key[<span class="number">2</span>] + <span class="number">686</span> * key[<span class="number">1</span>] + <span class="number">605</span> * key[<span class="number">0</span>] == <span class="number">254496</span>)</span><br><span class="line">s.add(<span class="number">580</span> * key[<span class="number">5</span>] + <span class="number">448</span> * key[<span class="number">4</span>] + <span class="number">756</span> * key[<span class="number">3</span>] + <span class="number">449</span> * key[<span class="number">2</span>] + (key[<span class="number">1</span>] &lt;&lt; <span class="number">9</span>) + <span class="number">373</span> * key[<span class="number">0</span>] == <span class="number">222479</span>)</span><br><span class="line">s.add(<span class="number">597</span> * key[<span class="number">5</span>] + <span class="number">855</span> * key[<span class="number">4</span>] + <span class="number">971</span> * key[<span class="number">3</span>] + <span class="number">422</span> * key[<span class="number">2</span>] + <span class="number">635</span> * key[<span class="number">1</span>] + <span class="number">560</span> * key[<span class="number">0</span>] == <span class="number">295184</span>)</span><br><span class="line">s.add(<span class="number">524</span> * key[<span class="number">5</span>] + <span class="number">324</span> * key[<span class="number">4</span>] + <span class="number">925</span> * key[<span class="number">3</span>] + <span class="number">388</span> * key[<span class="number">2</span>] + <span class="number">507</span> * key[<span class="number">1</span>] + <span class="number">717</span> * key[<span class="number">0</span>] == <span class="number">251887</span>)</span><br><span class="line">s.add(<span class="number">414</span> * key[<span class="number">5</span>] + <span class="number">495</span> * key[<span class="number">4</span>] + <span class="number">518</span> * key[<span class="number">3</span>] + <span class="number">884</span> * key[<span class="number">2</span>] + <span class="number">368</span> * key[<span class="number">1</span>] + <span class="number">312</span> * key[<span class="number">0</span>] == <span class="number">211260</span>)</span><br><span class="line"></span><br><span class="line">zcheck(s,key)</span><br><span class="line"><span class="comment"># XYCTF!</span></span><br></pre></td></tr></table></figure><p>然后后面是一个魔改tea，直接解</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> __cdecl <span class="title">dec2</span><span class="params">(DWORD* flag, <span class="type">int</span> len_after)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> v2; <span class="comment">// ecx</span></span><br><span class="line"><span class="type">int</span> v3; <span class="comment">// eax</span></span><br><span class="line"><span class="type">int</span> v4; <span class="comment">// edx</span></span><br><span class="line"><span class="type">int</span> result; <span class="comment">// eax</span></span><br><span class="line"><span class="type">int</span> mid; <span class="comment">// [esp+4h] [ebp-1Ch]</span></span><br><span class="line"><span class="type">int</span> round; <span class="comment">// [esp+Ch] [ebp-14h]</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> sum; <span class="comment">// [esp+10h] [ebp-10h]</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag_last; <span class="comment">// [esp+18h] [ebp-8h]</span></span><br><span class="line"><span class="type">int</span> i; <span class="comment">// [esp+1Ch] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (len_after &gt; <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">round = <span class="number">52</span> / len_after + <span class="number">6</span>;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">sum -= round * <span class="number">0x61C88647</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = len_after - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">flag[i] -= ((flag[(i + <span class="number">7</span>) % <span class="number">8</span>] ^ key[(((sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">5</span>) ^ i) &amp; <span class="number">5</span>]) + (flag[(i + <span class="number">1</span>) % <span class="number">8</span>] ^ sum)) ^ (((<span class="number">16</span> * flag[(i + <span class="number">7</span>) % <span class="number">8</span>]) ^ (flag[(i + <span class="number">1</span>) % <span class="number">8</span>] &gt;&gt; <span class="number">3</span>)) + ((<span class="number">4</span> * flag[(i + <span class="number">1</span>) % <span class="number">8</span>]) ^ (flag[(i + <span class="number">7</span>) % <span class="number">8</span>] &gt;&gt; <span class="number">5</span>)));</span><br><span class="line">&#125;</span><br><span class="line">sum += <span class="number">0x61C88647</span>;</span><br><span class="line">--round;</span><br><span class="line">&#125; <span class="keyword">while</span> (round);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> last[<span class="number">32</span>] = &#123;</span><br><span class="line"><span class="number">0x71</span>, <span class="number">0x72</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x85</span>, <span class="number">0x22</span>, <span class="number">0x6E</span>, <span class="number">0x89</span>, <span class="number">0x1B</span>, <span class="number">0x8C</span>, <span class="number">0x18</span>, <span class="number">0xC5</span>, <span class="number">0x03</span>, <span class="number">0xFD</span>, <span class="number">0xBC</span>, <span class="number">0x72</span>,</span><br><span class="line"><span class="number">0xCA</span>, <span class="number">0x11</span>, <span class="number">0x80</span>, <span class="number">0x53</span>, <span class="number">0xAC</span>, <span class="number">0x46</span>, <span class="number">0xA1</span>, <span class="number">0x4D</span>, <span class="number">0x6B</span>, <span class="number">0x0D</span>, <span class="number">0x63</span>, <span class="number">0x86</span>, <span class="number">0xF0</span>, <span class="number">0x97</span>, <span class="number">0x97</span>, <span class="number">0xF8</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="built_in">dec2</span>((DWORD*)last, <span class="number">8</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; hex &lt;&lt; (last[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// XYCTF&#123;XXTEA_AND_Z3_1s_S0_easy!!&#125;</span></span><br></pre></td></tr></table></figure><h4 id="舔狗四部曲–记忆的时光机">舔狗四部曲–记忆的时光机</h4><p>第一次遇到这种jmp+寄存器的值，不过通过分析可以看出均为顺序跳转，直接trance，然后分析，大概得出加密逻辑</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">0000E808.text:enc+4sub     rsp, 48hRSP=00007FFCB17CE120 CF=0 PF=0 SF=0</span><br><span class="line">0000E808.text:enc+8lea     rcx, sub_558B201D1460RCX=0000558B201D1460</span><br><span class="line">0000E808.text:enc+Fmov     edx, 2RDX=0000000000000002</span><br><span class="line">0000E808.text:enc+14movsxd  r10, esiR10=0000000000000001</span><br><span class="line">0000E808.text:enc+17mov     rax, fs:28hRAX=374B368125068200</span><br><span class="line">0000E808.text:enc+20mov     [rsp+48h+var_10], rax</span><br><span class="line">0000E808.text:enc+25xor     eax, eaxRAX=0000000000000000 PF=1 ZF=1</span><br><span class="line">0000E808.text:enc+27lea     rax, sub_558B201D1448RAX=0000558B201D1448</span><br><span class="line">0000E808.text:enc+2Emov     [rsp+48h+var_48], rcx</span><br><span class="line">0000E808.text:enc+32add     esi, 6RSI=0000000000000007 PF=0 ZF=0</span><br><span class="line">0000E808.text:enc+35mov     [rsp+48h+var_40], rax</span><br><span class="line">0000E808.text:enc+3Alea     rax, sub_558B201D1430RAX=0000558B201D1430</span><br><span class="line">0000E808.text:enc+41lea     r11, key; \&quot;i_have_get_shell_but_where_is_you_my_de\&quot;...</span><br><span class="line">0000E808.text:enc+48mov     [rsp+48h+var_38], rax</span><br><span class="line">0000E808.text:enc+4Dlea     rax, sub_558B201D1418RAX=0000558B201D1418</span><br><span class="line">0000E808.text:enc+54mov     [rsp+48h+var_30], rax</span><br><span class="line">0000E808.text:enc+59lea     rax, sub_558B201D1400RAX=0000558B201D1400</span><br><span class="line">0000E808.text:enc+60mov     [rsp+48h+var_28], rax</span><br><span class="line">0000E808.text:enc+65lea     rax, loc_558B201D13E0RAX=0000558B201D13E0</span><br><span class="line">0000E808.text:enc+6Cmov     [rsp+48h+var_20], rax</span><br><span class="line">0000E808.text:enc+71lea     eax, [rdx-1]RAX=0000000000000001</span><br><span class="line">0000E808.text:enc+74jmp     rcx</span><br><span class="line">0000E808.text:sub_558B201D1460endbr64</span><br><span class="line">0000E808.text:sub_558B201D1460+4mov     rcx, [rsp+rax*8+0]RCX=0000558B201D1448</span><br><span class="line">0000E808.text:sub_558B201D1460+8add     edx, 1RDX=0000000000000003 PF=1</span><br><span class="line">0000E808.text:sub_558B201D1460+Bmov     r8d, ediR8=000000000000004D</span><br><span class="line">0000E808.text:sub_558B201D1460+Elea     eax, [rdx-1]RAX=0000000000000002</span><br><span class="line">0000E808.text:sub_558B201D1460+11jmp     rcx</span><br><span class="line">0000E808.text:sub_558B201D1448endbr64</span><br><span class="line">0000E808.text:sub_558B201D1448+4mov     rcx, [rsp+rax*8+0]RCX=0000558B201D1430</span><br><span class="line">0000E808.text:sub_558B201D1448+8xor     r8d, esiR8=000000000000004A PF=0</span><br><span class="line">0000E808.text:sub_558B201D1448+Badd     edx, 1RDX=0000000000000004</span><br><span class="line">0000E808.text:sub_558B201D1448+Exor     r8d, 66hR8=000000000000002C</span><br><span class="line">0000E808.text:sub_558B201D1448+12lea     eax, [rdx-1]RAX=0000000000000003</span><br><span class="line">0000E808.text:sub_558B201D1448+15jmp     rcx</span><br><span class="line">0000E808.text:sub_558B201D1430endbr64</span><br><span class="line">0000E808.text:sub_558B201D1430+4mov     rcx, [rsp+rax*8+0]RCX=0000558B201D1418</span><br><span class="line">0000E808.text:sub_558B201D1430+8add     edx, 1RDX=0000000000000005 PF=1</span><br><span class="line">0000E808.text:sub_558B201D1430+Bsub     r8d, 6R8=0000000000000026 PF=0</span><br><span class="line">0000E808.text:sub_558B201D1430+Flea     eax, [rdx-1]RAX=0000000000000004</span><br><span class="line">0000E808.text:sub_558B201D1430+12jmp     rcx</span><br><span class="line">0000E808.text:sub_558B201D1418endbr64</span><br><span class="line">0000E808.text:sub_558B201D1418+4mov     rcx, [rsp+rax*8+0]RCX=0000558B201D1400</span><br><span class="line">0000E808.text:sub_558B201D1418+8add     edx, 1RDX=0000000000000006 PF=1</span><br><span class="line">0000E808.text:sub_558B201D1418+Bmovzx   r9d, byte ptr [r11+r10]R9=000000000000005F</span><br><span class="line">0000E808.text:sub_558B201D1418+10lea     eax, [rdx-1]RAX=0000000000000005</span><br><span class="line">0000E808.text:sub_558B201D1418+13jmp     rcx</span><br><span class="line">0000E808.text:sub_558B201D1400endbr64</span><br><span class="line">0000E808.text:sub_558B201D1400+4mov     rcx, [rsp+rax*8+0]RCX=0000558B201D13E0</span><br><span class="line">0000E808.text:sub_558B201D1400+8add     edx, 1RDX=0000000000000007 PF=0</span><br><span class="line">0000E808.text:sub_558B201D1400+Bxor     r8d, r9dR8=0000000000000079</span><br><span class="line">0000E808.text:sub_558B201D1400+Elea     eax, [rdx-1]RAX=0000000000000006</span><br><span class="line">0000E808.text:sub_558B201D1400+11jmp     rcx</span><br><span class="line">0000E808.text:loc_558B201D13E0endbr64</span><br><span class="line">0000E808.text:0000558B201D13E4mov     rax, [rsp+38h]RAX=374B368125068200</span><br><span class="line">0000E808.text:0000558B201D13E9sub     rax, fs:28hRAX=0000000000000000 PF=1 ZF=1</span><br><span class="line">0000E808.text:0000558B201D13F2jnz     short loc_558B201D1473</span><br><span class="line">0000E808.text:0000558B201D13F4mov     eax, r8dRAX=0000000000000079</span><br><span class="line">0000E808.text:0000558B201D13F7add     rsp, 48hRSP=00007FFCB17CE168 PF=0 ZF=0</span><br><span class="line">0000E808.text:0000558B201D13FBretnRSP=00007FFCB17CE170</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># inp[i]^=(i+6)^0x66</span></span><br><span class="line"><span class="comment"># inp[i]-=6</span></span><br><span class="line"><span class="comment"># inp[i]^=key[i]</span></span><br></pre></td></tr></table></figure><p>那直接逆</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">last = [<span class="number">0x69</span>, <span class="number">0x58</span>, <span class="number">0x61</span>, <span class="number">0x63</span>, <span class="number">0x67</span>, <span class="number">0x4C</span>, <span class="number">0x4D</span>, <span class="number">0x32</span>, <span class="number">0x98</span>, <span class="number">0x20</span>, <span class="number">0x4D</span>, <span class="number">0x51</span>, <span class="number">0x7B</span>, <span class="number">0x25</span>, <span class="number">0x75</span>, <span class="number">0x51</span>, <span class="number">0xA3</span>, <span class="number">0x58</span>, <span class="number">0x60</span>, <span class="number">0x72</span>, <span class="number">0x42</span>, <span class="number">0x62</span>, <span class="number">0x67</span>, <span class="number">0x66</span>, <span class="number">0x37</span>, <span class="number">0x6C</span>, <span class="number">0x30</span>, <span class="number">0x46</span>, <span class="number">0x66</span>, <span class="number">0x4F</span>, <span class="number">0x5D</span>, <span class="number">0x03</span>, <span class="number">0x5D</span>, <span class="number">0xA4</span>, <span class="number">0x66</span>, <span class="number">0x01</span>, <span class="number">0x43</span>, <span class="number">0x68</span>, <span class="number">0x7D</span>, <span class="number">0x7C</span>, <span class="number">0x55</span>, <span class="number">0x4F</span>, <span class="number">0x7A</span>, <span class="number">0x3F</span>, <span class="number">0x6C</span>, <span class="number">0x12</span>, <span class="number">0x21</span>, <span class="number">0x09</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># inp[i]^=i^0x66</span></span><br><span class="line"><span class="comment"># inp[i]-=6</span></span><br><span class="line"><span class="comment"># inp[i]^=key[i]</span></span><br><span class="line">key = <span class="string">&quot;i_have_get_shell_but_where_is_you_my_dear_baby!!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(last)):</span><br><span class="line">    last[i]^=<span class="built_in">ord</span>(key[i])</span><br><span class="line">    last[i]+=<span class="number">6</span></span><br><span class="line">    last[i]^=(<span class="number">6</span>+i)^<span class="number">0x66</span></span><br><span class="line">        </span><br><span class="line">pl(last)</span><br><span class="line"><span class="comment"># flag&#123;Br0k3n_m3m0r1es_for3v3r_Sh1n@_1n_The_H3@$T&#125;</span></span><br></pre></td></tr></table></figure><h4 id="舔狗四部曲–我的白月光">舔狗四部曲–我的白月光</h4><p>一开头给了flag{L0v3_</p><p>然后分析一下主函数，发现最后有一个base64，拿去解一下，发现解不出来，然后尝试一下是不是反向了什么的</p><p>在cyberchef里面直接</p><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">reverse</span>+<span class="keyword">from</span> base64+<span class="built_in">reverse</span>+<span class="keyword">from</span> hex</span><br><span class="line">得到</span><br><span class="line"><span class="variable">_memory_never_go_done_finally_thankyou_xiaowangtongxue</span>&#125;</span><br></pre></td></tr></table></figure><p>然后再看一下中间还干了什么</p><p>看到有一个</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( !(_DWORD)v22 )</span><br><span class="line">&#123;</span><br><span class="line">  flOldProtect[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">  VirtualProtect(v11, <span class="number">8u</span>i64, <span class="number">4u</span>, flOldProtect);</span><br><span class="line">  *v11 = sub_7FF64A841470;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个sub好像很可疑，直接set ip 过去，在执行完函数后，在对应的hex窗口找到</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i8_<span class="built_in">a_k3y</span>_and</span><br></pre></td></tr></table></figure><p>最后</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;L0v3_i8_<span class="built_in">a_k3y</span>_and_memory_never_go_done_finally_thankyou_xiaowangtongxue&#125;</span><br></pre></td></tr></table></figure><h2 id="crypto">crypto</h2><h3 id="week1-2">week1</h3><h4 id="Sign1n">Sign1n</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">flag=<span class="string">b&#x27;XYCTF&#123;108376aa-c3ed-4e02-a915-47d9ea406612&#125;&#x27;</span></span><br><span class="line">flag=bytes_to_long(flag)</span><br><span class="line">leak=<span class="built_in">bin</span>(<span class="built_in">int</span>(flag))</span><br><span class="line"><span class="built_in">print</span>(leak)</span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    leak += <span class="string">&quot;0&quot;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(leak) == <span class="number">514</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">swap_bits</span>(<span class="params">input_str</span>):</span><br><span class="line">    input_list = <span class="built_in">list</span>(input_str[<span class="number">2</span>:])</span><br><span class="line">    length = <span class="built_in">len</span>(input_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length // <span class="number">2</span>):</span><br><span class="line">        temp = input_list[i]</span><br><span class="line">        input_list[i] = input_list[length - <span class="number">1</span> - i]</span><br><span class="line">        input_list[length - <span class="number">1</span> - i] = temp</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(input_list)</span><br><span class="line"></span><br><span class="line">input_str = leak</span><br><span class="line">result = swap_bits(input_str)</span><br><span class="line">a=result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">custom_add</span>(<span class="params">input_str</span>):</span><br><span class="line">    input_list = <span class="built_in">list</span>(input_str)</span><br><span class="line">    length = <span class="built_in">len</span>(input_list)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        input_list[i] = <span class="built_in">str</span>((<span class="built_in">int</span>(input_list[i]) + i + <span class="number">1</span>) % <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span>.join(input_list)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input_str = a</span><br><span class="line">result = custom_add(input_str)</span><br><span class="line">b=result</span><br><span class="line"><span class="built_in">print</span>(b)</span><br><span class="line"><span class="comment">#12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567891134567790113445679902334677900134557889122356678001344567801223566790013355689912235667901134457889023355788001344578891133467799012455778012235578800134456899022346779011344567991223557880012346788902335667900134456899122355788001245578891133566780013445678012235577801123557889112456678011245578801233467789112355779912234577990233556780113</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>既然是对每一位的单独加密，那就直接爆破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line">llll   = <span class="number">12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567891134567790113445679902334677900134557889122356678001344567801223566790013355689912235667901134457889023355788001344578891133467799012455778012235578800134456899022346779011344567991223557880012346788902335667900134456899122355788001245578891133566780013445678012235577801123557889112456678011245578801233467789112355779912234577990233556780113</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">out</span>(<span class="params">input_str</span>):</span><br><span class="line">    input_list = <span class="built_in">list</span>(<span class="built_in">str</span>(input_str))</span><br><span class="line">    length = <span class="built_in">len</span>(input_list)</span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(length):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">            <span class="keyword">if</span> (input_list[i] == <span class="built_in">str</span>((k + i + <span class="number">1</span>) % <span class="number">10</span>)):</span><br><span class="line">                res+=(<span class="built_in">str</span>(k))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">nex = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">reversed</span>(out(llll)))</span><br><span class="line"><span class="comment"># print(nex)</span></span><br><span class="line">nex = <span class="string">&#x27;0b&#x27;</span>+nex[:<span class="number">343</span>]</span><br><span class="line"><span class="comment"># print(nex)</span></span><br><span class="line">y = <span class="built_in">int</span>(nex,<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(y))</span><br><span class="line"><span class="comment"># XYCTF&#123;f94e8256-6368-47bc-9ae3-c73e382376d7&#125;</span></span><br></pre></td></tr></table></figure><h4 id="x0r">x0r</h4><p>是AES的选择明文攻击，由于是异或得到结果，那就可以直接截获每一次的密钥</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密钥块</span></span><br><span class="line"><span class="comment"># 输入1后得到的前32个字符和后96个字符</span></span><br><span class="line"><span class="comment"># 输入2后输入前32个字符，然后输入000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000</span></span><br><span class="line"><span class="comment"># 得到的输出放到这里</span></span><br><span class="line">key_blocks_hex = <span class="string">&#x27;69d174fb2dd82fc3ad184efde51b3a6673027ef1d3a49dbf955d2f62759b1a5924381fb190dd70c5957c7e395311272c&#x27;</span></span><br><span class="line">key_blocks = <span class="built_in">bytes</span>.fromhex(key_blocks_hex)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 密文</span></span><br><span class="line"><span class="comment"># 输入1后得到的前32个字符和后96个字符</span></span><br><span class="line"><span class="comment"># 放后96个字符</span></span><br><span class="line">ciphertext_hex = <span class="string">&#x27;318837af6ba319a69b7d78c9d67d175e11644bdce7c0ab88b83c1f0642b6783c175929d5a7be12a0f11f033357152328&#x27;</span></span><br><span class="line">ciphertext = <span class="built_in">bytes</span>.fromhex(ciphertext_hex)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密</span></span><br><span class="line">plaintext = <span class="string">b&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(ciphertext), AES.block_size):</span><br><span class="line">    key_block = key_blocks[i:i+AES.block_size]</span><br><span class="line">    ciphertext_block = ciphertext[i:i+AES.block_size]</span><br><span class="line">    plaintext_block = <span class="built_in">bytes</span>(a ^ b <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">zip</span>(ciphertext_block, key_block))</span><br><span class="line">    plaintext += plaintext_block</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(plaintext)</span><br><span class="line"><span class="comment"># XYCTF&#123;6e6e643f-8bf5-4d67-a0d7-be3a6d7cbedc&#125;</span></span><br></pre></td></tr></table></figure><h4 id="happy-to-solve1">happy_to_solve1</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">from</span> secrets <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_happy_prime</span>():</span><br><span class="line">    p = getPrime(<span class="number">512</span>)</span><br><span class="line">    q = sympy.nextprime(p ^ ((<span class="number">1</span> &lt;&lt; <span class="number">512</span>) - <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> p, q</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">p, q = get_happy_prime()</span><br><span class="line">n = p * q</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">pow</span>(m, e, n))</span><br></pre></td></tr></table></figure><p>我们知道q是p异或11111…的结果，那么p+q就约等于2**512</p><p>我们可以根据这个和pq乘积两个等式尝试寻找p和q</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sympy</span><br><span class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> Decimal, getcontext</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">solve_pq</span>(<span class="params">suma, mula</span>):</span><br><span class="line">    <span class="comment"># 设置精度</span></span><br><span class="line">    getcontext().prec = <span class="number">200</span></span><br><span class="line">    <span class="comment"># 计算判别式</span></span><br><span class="line">    discriminant = Decimal(suma**<span class="number">2</span> - <span class="number">4</span>*mula).sqrt()</span><br><span class="line">    <span class="comment"># 计算 p 和 q 的值</span></span><br><span class="line">    p = (suma + discriminant) / <span class="number">2</span></span><br><span class="line">    q = (suma - discriminant) / <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> p, q</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">suma = <span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">512</span>)-<span class="number">1</span></span><br><span class="line">mula = <span class="number">24852206647750545040640868093921252282805229864862413863025873203291042799096787789288461426555716785288286492530194901130042940279109598071958012303179823645151637759103558737126271435636657767272703908384802528366090871653024192321398785017073393201385586868836278447340624427705360349350604325533927890879</span></span><br><span class="line">n=<span class="number">24852206647750545040640868093921252282805229864862413863025873203291042799096787789288461426555716785288286492530194901130042940279109598071958012303179823645151637759103558737126271435636657767272703908384802528366090871653024192321398785017073393201385586868836278447340624427705360349350604325533927890879</span></span><br><span class="line"></span><br><span class="line">p, q = solve_pq(suma, mula)</span><br><span class="line"><span class="comment"># print(f&quot;p = &#123;Decimal(p):.2f&#125;, q = &#123;Decimal(q):.2f&#125;&quot;)</span></span><br><span class="line"><span class="comment"># print(sympy.nextprime(p))</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    <span class="keyword">if</span>((n%p)!=<span class="number">0</span>):</span><br><span class="line">        p = sympy.nextprime(p)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line">q = n // p</span><br><span class="line">c = <span class="number">14767985399473111932544176852718061186100743117407141435994374261886396781040934632110608219482140465671269958180849886097491653105939368395716596413352563005027867546585191103214650790884720729601171517615620202183534021987618146862260558624458833387692782722514796407503120297235224234298891794056695442287</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">phi =(p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">d = <span class="built_in">pow</span>(e,-<span class="number">1</span>,phi)</span><br><span class="line"></span><br><span class="line">m = <span class="built_in">pow</span>(c,d,n)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"><span class="comment"># XYCTF&#123;3f22f4efe3bbbc71bbcc999a0a622a1a23303cdc&#125;</span></span><br></pre></td></tr></table></figure><h4 id="反方向的密码-相思">反方向的密码 相思</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> secrets <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hash</span>(<span class="params">x</span>):</span><br><span class="line">    <span class="keyword">return</span> hashlib.sha256(x.encode()).digest()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">pad</span>(<span class="params">message</span>):</span><br><span class="line">    <span class="keyword">return</span> message + <span class="built_in">hash</span>(<span class="built_in">str</span>(<span class="built_in">len</span>(message)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = bytes_to_long(pad(flag))</span><br><span class="line">p = getStrongPrime(<span class="number">512</span>)</span><br><span class="line">q = getStrongPrime(<span class="number">512</span>)</span><br><span class="line">n = p * q</span><br><span class="line">e = <span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">pow</span>(m, e, n))</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="comment"># 120440199294949712392334113337541924034371176306546446428347114627162894108760435789068328282135879182130546564535108930827440004987170619301799710272329673259390065147556073101312748104743572369383346039000998822862286001416166288971531241789864076857299162050026949096919395896174243383291126202796610039053</span></span><br><span class="line"><span class="comment"># 143413213355903851638663645270518081058249439863120739973910994223793329606595495141951165221740599158773181585002460087410975579141155680671886930801733174300593785562287068287654547100320094291092508723488470015821072834947151827362715749438612812148855627557719115676595686347541785037035334177162406305243</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>相当于已知m低位，用Coppersmith定理可解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">e = <span class="number">0x3</span></span><br><span class="line">n = <span class="number">143413213355903851638663645270518081058249439863120739973910994223793329606595495141951165221740599158773181585002460087410975579141155680671886930801733174300593785562287068287654547100320094291092508723488470015821072834947151827362715749438612812148855627557719115676595686347541785037035334177162406305243</span></span><br><span class="line">c = <span class="number">120440199294949712392334113337541924034371176306546446428347114627162894108760435789068328282135879182130546564535108930827440004987170619301799710272329673259390065147556073101312748104743572369383346039000998822862286001416166288971531241789864076857299162050026949096919395896174243383291126202796610039053</span></span><br><span class="line"></span><br><span class="line">R.&lt;x&gt; = PolynomialRing(Zmod(n), implementation=<span class="string">&#x27;NTL&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>,<span class="number">50</span>):</span><br><span class="line">    low = <span class="built_in">int</span>(hashlib.sha256(<span class="built_in">str</span>(i).encode()).hexdigest(), <span class="number">16</span>)</span><br><span class="line">    m = low + x*<span class="number">2</span>**<span class="number">256</span></span><br><span class="line">    <span class="built_in">print</span>(i)</span><br><span class="line">    roots = (m**<span class="number">3</span> - c).monic().small_roots(X=<span class="number">2</span>**(i*<span class="number">8</span>),beta=<span class="number">0.4</span>,epsilon=<span class="number">0.01</span>)</span><br><span class="line">    <span class="keyword">if</span> roots:</span><br><span class="line">        M = m(roots[<span class="number">0</span>])</span><br><span class="line">        <span class="built_in">print</span>(long_to_bytes(<span class="built_in">int</span>(M))[:i])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># XYCTF&#123;!__d3ng__hu0__1@n__3h@n__Chu__!&#125;</span></span><br></pre></td></tr></table></figure><p>一开始怎么都爆不出来，结果发现是epsilon取大了，还没规定上下界（这个X=X=2**(i*8)就是确定为flag的长度的）,这样就要写m = low + x*2**256。不然会撞上下界</p><h3 id="week2-2">week2</h3><h4 id="Sign1n-Revenge">Sign1n_Revenge</h4><p>和signin一样，不写了</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flag</span>&#123;<span class="number">09</span>c24f8d-dbf8-<span class="number">463</span>b-a16f-<span class="number">3</span>dbc47e4a726&#125;</span><br></pre></td></tr></table></figure><h4 id="happy-to-solve2">happy_to_solve2</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> secrets <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_happy_prime</span>():</span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        p = <span class="built_in">int</span>(<span class="string">&quot;&quot;</span>.join([random.choice(<span class="string">&quot;123&quot;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">512</span>)]))</span><br><span class="line">        q = <span class="built_in">int</span>(<span class="string">&quot;&quot;</span>.join([random.choice(<span class="string">&quot;567&quot;</span>) <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">512</span>)]))</span><br><span class="line">        <span class="keyword">if</span> isPrime(p) <span class="keyword">and</span> isPrime(q):</span><br><span class="line">            <span class="keyword">return</span> (p,q)</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">p ,q= get_happy_prime()</span><br><span class="line">n = p * q</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">pow</span>(m, e, n))</span><br></pre></td></tr></table></figure><p>这个p和q每一位既然只有3种选择，那就可以从最低位开始爆破出p和q的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># # 乘积n</span></span><br><span class="line">n = <span class="number">697906506747097082736076931509594586899561519277373830451275402914416296858960649459482027106166486723487162428522597262774248272216088755005277069446993003521270487750989061229071167729138628583207229945902389632065500739730301375338674342457656803764567184544685006193130563116558641331897204457729877920989968662546183628637193220770495938729301979912328865798266631957128761871326655572836258178871966196973138373358029531478246243442559418904559585334351259080578222274926069834941166567112522869638854253933559832822899069320370733424453856240903784235604251466010104012061821038897933884352804297256364409157501116832788696434711523621632436970698827611375698724661553712549209133526623456888111161142213830821361143023186927163314212097199831985368310770663850851571934739809387798422381702174820982531508641022827776262236373967579266271031713520262606203067411268482553539580686495739014567368858613520107678565628269250835478345171330669316220473129104495659093134763261751546990704365966783697780787341963138501</span></span><br><span class="line"></span><br><span class="line">p_values = [<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;2&#x27;</span>, <span class="string">&#x27;3&#x27;</span>]</span><br><span class="line">q_values = [<span class="string">&#x27;5&#x27;</span>, <span class="string">&#x27;6&#x27;</span>, <span class="string">&#x27;7&#x27;</span>]</span><br><span class="line"></span><br><span class="line">n_str = <span class="built_in">str</span>(n)</span><br><span class="line"></span><br><span class="line">p = <span class="string">&#x27;&#x27;</span></span><br><span class="line">q = <span class="string">&#x27;&#x27;</span></span><br><span class="line">upone = <span class="number">0</span></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">set</span>(<span class="params">p, i, digit</span>):</span><br><span class="line">    p_list = <span class="built_in">list</span>(p)</span><br><span class="line">    <span class="keyword">if</span> i &lt; <span class="built_in">len</span>(p_list):</span><br><span class="line">        p_list[<span class="number">0</span>] = digit</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        p_list.insert(<span class="number">0</span>,digit)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.join(p_list)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">find_p_q</span>(<span class="params">i, p, q</span>):</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">0</span>)<span class="keyword">or</span>(<span class="built_in">int</span>(p)*<span class="built_in">int</span>(q)==n):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;p:&#x27;</span>, <span class="built_in">int</span>(p))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;q:&#x27;</span>, <span class="built_in">int</span>(q))</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    j = <span class="built_in">len</span>(n_str) -<span class="number">1</span> -i</span><br><span class="line">    <span class="keyword">for</span> p_val <span class="keyword">in</span> p_values:</span><br><span class="line">        new_p = <span class="built_in">set</span>(p, j, p_val)</span><br><span class="line">        <span class="keyword">for</span> q_val <span class="keyword">in</span> q_values:</span><br><span class="line">            new_q = <span class="built_in">set</span>(q, j, q_val)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">str</span>(<span class="built_in">int</span>(new_q)*<span class="built_in">int</span>(new_p))[-(<span class="number">1</span>+j)]) == n_str[i]:</span><br><span class="line">                <span class="keyword">if</span> find_p_q(i-<span class="number">1</span>, new_p, new_q): <span class="comment"># 向下一层</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span> <span class="comment"># 否则向上一层</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> find_p_q(<span class="built_in">len</span>(n_str)-<span class="number">1</span>, <span class="string">&#x27;0&#x27;</span>, <span class="string">&#x27;0&#x27;</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;wrong&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = <span class="number">12121111312111223223122131311333233122132311113333112131132223222322113121112211311111122233111221112223111221331112322222333332331231122322123321123123133323213331321113332333332231113221231213322231322132311333132111221123111323112322131123322323331121233332123131222321123312221122323311122131121132332322222321213223131211322122311113331331222212121313131121212322112122212323321311231113213233312223111132133321123211122222213321223332322123131333322121223233122311222211311133331123122122331232313131221113</span></span><br><span class="line">q = <span class="number">57577765666565565655657656576766776756666756575575655557577765666657666756565556567577677665557556655765767767655556677756576555657667566766667676566655656776775755756775755667657675665677575667656666776656677656575665766556767757667556655755567556776556675656666757767667757657665757566667776555777667667675756767666767666557555757566576666656676677575575577567765566577557756566766557765676756756557667655756575677676567766776665777656776577676577576757576665777555555575575656555655657776566765775556575765677</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p*q==n)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">n = <span class="number">697906506747097082736076931509594586899561519277373830451275402914416296858960649459482027106166486723487162428522597262774248272216088755005277069446993003521270487750989061229071167729138628583207229945902389632065500739730301375338674342457656803764567184544685006193130563116558641331897204457729877920989968662546183628637193220770495938729301979912328865798266631957128761871326655572836258178871966196973138373358029531478246243442559418904559585334351259080578222274926069834941166567112522869638854253933559832822899069320370733424453856240903784235604251466010104012061821038897933884352804297256364409157501116832788696434711523621632436970698827611375698724661553712549209133526623456888111161142213830821361143023186927163314212097199831985368310770663850851571934739809387798422381702174820982531508641022827776262236373967579266271031713520262606203067411268482553539580686495739014567368858613520107678565628269250835478345171330669316220473129104495659093134763261751546990704365966783697780787341963138501</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p = <span class="number">12121111312111223223122131311333233122132311113333112131132223222322113121112211311111122233111221112223111221331112322222333332331231122322123321123123133323213331321113332333332231113221231213322231322132311333132111221123111323112322131123322323331121233332123131222321123312221122323311122131121132332322222321213223131211322122311113331331222212121313131121212322112122212323321311231113213233312223111132133321123211122222213321223332322123131333322121223233122311222211311133331123122122331232313131221113</span></span><br><span class="line">q = <span class="number">57577765666565565655657656576766776756666756575575655557577765666657666756565556567577677665557556655765767767655556677756576555657667566766667676566655656776775755756775755667657675665677575667656666776656677656575665766556767757667556655755567556776556675656666757767667757657665757566667776555777667667675756767666767666557555757566576666656676677575575577567765566577557756566766557765676756756557667655756575677676567766776665777656776577676577576757576665777555555575575656555655657776566765775556575765677</span></span><br><span class="line"></span><br><span class="line">c = <span class="number">153383826085102296581238539677668696644156148059026868813759015106139131297135097831661048493079405226972222492151356105759235749502324303047037349410709021152255315429280760639113724345836532087970918453353723090554450581657930847674930226113840172368662838756446364482977092478979838209396761279326533419699056209983721842484996150025403009644653678928025861445324715419893797015875541525590135843027312322236085581571452084477262582966972702577136904385741443870527205640874446616413917231260133364227248928492574610248881137364204914001412269740461851747883355414968499272944590071623223603501698004227753335552646715567802825755799597955409228004284739743749531270833084850113574712041224896044525292591264637452797151098802604186311724597450780520140413704697374209653369969451501627583467893160412780732575085846467289134920886789952338174193202234175299652687560232593212131693456966318670843605238958724126368185289703563591477049105538528244632434869965333722691837462591128379816582723367039674028619947057144546</span></span><br><span class="line"></span><br><span class="line">Srsa(p,q,e,c)<span class="comment"># 自己写的解密函数</span></span><br><span class="line"><span class="comment"># b&#x27;XYCTF&#123;7f4b2241951976ce5ef6df44503209059997e5085d1bc21f6bef4d9effb29fd0&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="MISC">MISC</h2><h3 id="week1-3">week1</h3><h4 id="TCPL">TCPL</h4><p>拖入ida分析，，发现只是异或了i，得到没有替换的flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">b = [<span class="number">0x46</span>, <span class="number">0x4D</span>, <span class="number">0x43</span>, <span class="number">0x44</span>, <span class="number">0x7F</span>, <span class="number">0x55</span>, <span class="number">0x4A</span>, <span class="number">0x44</span>, <span class="number">0x5C</span>, <span class="number">0x56</span>, <span class="number">0x4B</span>, <span class="number">0x65</span>, <span class="number">0x38</span>, <span class="number">0x52</span>, <span class="number">0x7C</span>, <span class="number">0x3E</span>, <span class="number">0x43</span>, <span class="number">0x52</span>, <span class="number">0x64</span>, <span class="number">0x4C</span>, <span class="number">0x6C</span>, <span class="number">0x24</span>, <span class="number">0x7E</span>, <span class="number">0x62</span>, <span class="number">0x79</span>, <span class="number">0x77</span>, <span class="number">0x74</span>, <span class="number">0x2A</span>, <span class="number">0x61</span>]</span><br><span class="line">pxor(b)</span><br><span class="line"><span class="comment"># FLAG&#123;PLCT_An4_r1SCv_x1huann1&#125;</span></span><br></pre></td></tr></table></figure><p>把1换成其它值，多试一下</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FLAG&#123;PLCT_A<span class="symbol">n4</span>_r<span class="number">0</span>SCv_x<span class="number">0</span>hua<span class="symbol">nn0</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="ez-隐写">ez_隐写</h4><p>开头一个伪加密，改好了之后有一个hint.png和一个watermark.jpg的文件,但是water.jpg要解压,修改hint.png的长宽获得密码xyctf0401，然后解压watermark.jpg，用盲水印工具打开可得flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">XYCTF</span>&#123;<span class="number">758</span>-W5X-IJN-<span class="number">852</span>&#125;</span><br></pre></td></tr></table></figure><h4 id="修仙传">修仙传</h4><h5 id="4元婴">4元婴</h5><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">都<span class="number">2024</span>年了不会还有人解不出U<span class="number">2</span>FsdGVkX<span class="number">1</span>+y<span class="number">2</span>rlJZlJCM<span class="symbol">nvyDwHwzkgHvNsG2</span>TF<span class="number">6</span>sFlBlxBs<span class="number">0</span>w<span class="number">4</span>EmyXdDe<span class="number">6</span>s<span class="number">7</span>viL吧</span><br></pre></td></tr></table></figure><p>key: 2024 TripleDes解密得密码</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The<span class="number">_f</span>ourth<span class="number">_f</span>loor<span class="number">_</span><span class="keyword">is</span><span class="number">_</span>okay</span><br></pre></td></tr></table></figure><p>打开文件得到一个微信数据库文件和一个</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wqk：<span class="number">1</span><span class="name">m813</span>o<span class="symbol">nn17</span><span class="meta">o040358</span>p<span class="number">772</span>q<span class="number">37</span>r<span class="name">m137</span>qp<span class="symbol">nqppqpn38</span><span class="symbol">nr704</span><span class="name">m56</span><span class="symbol">n2</span><span class="name">m9</span>q<span class="number">22</span>p<span class="meta">o7</span>r<span class="number">05</span>r<span class="number">77</span></span><br></pre></td></tr></table></figure><p>修改其中的字符</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1A813CBB17C040358D772E37FA137EDBEDDEDB38BF704A56B2A9E22DC7F05F77</span><br></pre></td></tr></table></figure><p>直接用脚本解密aes即可</p><p><img src="https://s2.loli.net/2024/04/09/O4jcnmRQfHrpzWU.png" alt="image-20240409192304734"></p><h5 id="7合体">7合体</h5><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">密文：Tig+AF8-viakubq+AF8-vphrz+AF8-xi+AF8-uayzdyrjs</span><br><span class="line"></span><br><span class="line">听说维吉尼亚<span class="built_in">key</span>大残</span><br></pre></td></tr></table></figure><p>放到维吉尼亚解密里面，AF8指密钥和密文长度一样</p><p>假设密钥是ABCDEFGHIJKLMNOPQRST</p><p>得到密码</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The<span class="number">_</span>seventh<span class="number">_</span>level<span class="number">_</span><span class="keyword">is</span><span class="number">_</span>difficult</span><br></pre></td></tr></table></figure><p>得到一张颜色图片，8进制转换即可</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">they_were_thr0ugh!</span><br></pre></td></tr></table></figure><h5 id="8大乘">8大乘</h5><p>开头是密码，直接用网上的异或加合脚本爆出来pq</p><p>然后rsa求密码</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">pruning_algorithm</span></span><br></pre></td></tr></table></figure><p>出来是一个yesno文件</p><p>根据压缩包的提示把yes改成1，no改成0生成图片</p><p>内容是原神的文字，转换</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">S<span class="name">m3</span>rt_y<span class="number">0</span>u_ca<span class="symbol">n_do</span></span><br></pre></td></tr></table></figure><h3 id="week3-2">week3</h3><h4 id="我的二维码为啥扫不出来？">我的二维码为啥扫不出来？</h4><p>根据定位点和时序图案还原</p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">from PIL import Image</span><br><span class="line">import <span class="built_in">random</span></span><br><span class="line"></span><br><span class="line">def reverse_color(x):</span><br><span class="line">    <span class="built_in">return</span> <span class="number">0</span> <span class="keyword">if</span> x == <span class="number">255</span> <span class="keyword">else</span> <span class="number">255</span></span><br><span class="line"></span><br><span class="line">def reverse_row_colors(pixels, <span class="built_in">row</span>, <span class="built_in">width</span>, block_size=<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> x_block <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">width</span> // block_size):</span><br><span class="line">        x = x_block * block_size</span><br><span class="line">        y = <span class="built_in">row</span> * block_size</span><br><span class="line">        <span class="keyword">for</span> x_small <span class="keyword">in</span> <span class="built_in">range</span>(x, x + block_size):</span><br><span class="line">            <span class="keyword">for</span> y_small <span class="keyword">in</span> <span class="built_in">range</span>(y, y + block_size):</span><br><span class="line">                pixel = pixels[x_small, y_small]</span><br><span class="line">                pixels[x_small, y_small] = reverse_color(pixel)</span><br><span class="line"></span><br><span class="line">def reverse_col_colors(pixels, <span class="built_in">col</span>, <span class="built_in">height</span>, block_size=<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> y_block <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">height</span> // block_size):</span><br><span class="line">        x = <span class="built_in">col</span> * block_size</span><br><span class="line">        y = y_block * block_size</span><br><span class="line">        <span class="keyword">for</span> x_small <span class="keyword">in</span> <span class="built_in">range</span>(x, x + block_size):</span><br><span class="line">            <span class="keyword">for</span> y_small <span class="keyword">in</span> <span class="built_in">range</span>(y, y + block_size):</span><br><span class="line">                pixel = pixels[x_small, y_small]</span><br><span class="line">                pixels[x_small, y_small] = reverse_color(pixel)</span><br><span class="line"></span><br><span class="line">encrypted_img = Image.open(<span class="string">&quot;new.png&quot;</span>)</span><br><span class="line"></span><br><span class="line">decrypted_img = encrypted_img.<span class="built_in">copy</span>()</span><br><span class="line"></span><br><span class="line"><span class="built_in">width</span>, <span class="built_in">height</span> = decrypted_img.size</span><br><span class="line">pixels = decrypted_img.<span class="built_in">load</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reverse_row_colors(pixels, <span class="number">1</span>, <span class="built_in">width</span>)</span><br><span class="line">reverse_row_colors(pixels, <span class="number">12</span>, <span class="built_in">width</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">reverse_col_colors(pixels, <span class="number">2</span>, <span class="built_in">height</span>)</span><br><span class="line">reverse_col_colors(pixels, <span class="number">0</span>, <span class="built_in">height</span>)</span><br><span class="line">reverse_col_colors(pixels, <span class="number">5</span>, <span class="built_in">height</span>)</span><br><span class="line">reverse_col_colors(pixels, <span class="number">10</span>, <span class="built_in">height</span>)</span><br><span class="line">reverse_col_colors(pixels, <span class="number">11</span>, <span class="built_in">height</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">decrypted_img.<span class="built_in">save</span>(<span class="string">&quot;decrypted.png&quot;</span>)</span><br><span class="line"># flag&#123;qR_c0d3_1s_s0_fun&#125;</span><br></pre></td></tr></table></figure><h4 id="Rosk-Paper-Scissors">Rosk,Paper,Scissors!</h4><p>根据看ai的逻辑，发现是检索我出的最多的那个来判断这一次出什么，那就反制这个，写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">alist = [] </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_most_count</span>(<span class="params">alist</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        data = Counter(alist)</span><br><span class="line">        <span class="keyword">return</span> data.most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = Counter(alist)</span><br><span class="line">            <span class="keyword">return</span> data.most_common(<span class="number">1</span>)[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&#x27;Scissors&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">back</span>(<span class="params"><span class="built_in">str</span></span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span> ==<span class="string">&#x27;Rock&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Paper&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span> ==<span class="string">&#x27;Paper&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Scissors&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">str</span> == <span class="string">&#x27;Scissors&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Rock&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Rock&#x27;</span></span><br><span class="line"><span class="comment"># 创建一个socket对象</span></span><br><span class="line">client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到服务器</span></span><br><span class="line">client_socket.connect((<span class="string">&#x27;localhost&#x27;</span>, <span class="number">2137</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化上一次的选择为None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取并打印服务器的欢迎消息</span></span><br><span class="line">data = client_socket.recv(<span class="number">1024</span>).decode()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;接收到的数据: <span class="subst">&#123;data&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="comment"># 游戏循环</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    this_choice = back(get_most_count(alist))</span><br><span class="line">    <span class="comment"># 发送选择</span></span><br><span class="line">    client_socket.send((this_choice + <span class="string">&#x27;\n&#x27;</span>).encode())</span><br><span class="line">    <span class="built_in">print</span>(this_choice)</span><br><span class="line">    <span class="comment"># 等待一段时间以便服务器处理我们的输入</span></span><br><span class="line">    time.sleep(<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 读取并打印服务器的响应</span></span><br><span class="line">    data = client_socket.recv(<span class="number">1024</span>).decode()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;接收到的数据: <span class="subst">&#123;data&#125;</span>&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 根据游戏的结果来更新上一次的选择或结束游戏</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;win&#x27;</span> <span class="keyword">in</span> data:</span><br><span class="line">        alist.append(this_choice)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        client_socket.close()</span><br><span class="line">        <span class="keyword">break</span>  <span class="comment"># 结束游戏循环</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">client_socket.close()</span><br><span class="line"><span class="comment"># XYCTF&#123;6e6e643f-8bf5-4d67-a0d7-be3a6d7cbedc&#125;</span></span><br><span class="line"><span class="comment"># 记不得了，大概是这个flag</span></span><br></pre></td></tr></table></figure><h4 id="美妙的歌声">美妙的歌声</h4><p>用audacity打开，以频谱图模式观察，发现字符串：XYCTF_1s_w3ll</p><p>这个看起来不是flag，但是可能是其它东西，用deepsound打开，把这个当密码，得到flag.txt</p><p>内容是</p><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">XYCTF&#123;T0uch_y0ur_he3rt_d55ply!!&#125;</span><br></pre></td></tr></table></figure><hr><p>总结：</p><p>re部分还是比较简单，基本没有什么问题<br>大部分是基础内容，没有ollvm和复杂的花也没有强的壳，<br>就直接分析逻辑或者动调就可以解，re还是偏简单的</p><p>类型：</p><p>两道flag不是输入的题：龙芯和白月光</p><p>其它都是直接逆向的题：</p><p>自定义逻辑</p><p>asm</p><p>伪vm</p><p>…</p><p>baby unity里面的工具在使用后会直接还原csharp方法名，在dumpdll文件夹中</p><p>cry部分会不了一点，不过密码✌要带我，太好了<br>之后问一下rsa的部分，还有复数域的内容</p><p>misc部分还是做的少了，要多练，不然好多没见过的<br>这次学到了音频，二维码和水印<br>以及总结一下nc题的做法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"></span><br><span class="line">client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">client_socket.connect((<span class="string">&#x27;localhost&#x27;</span>, <span class="number">2137</span>))</span><br><span class="line"><span class="comment"># 连接的方式</span></span><br><span class="line"></span><br><span class="line">data = client_socket.recv(<span class="number">1024</span>).decode()</span><br><span class="line"><span class="comment"># 接受数据的方式</span></span><br><span class="line"></span><br><span class="line">client_socket.send((<span class="string">&quot;xxx&quot;</span>).encode())</span><br><span class="line"><span class="comment"># 上传的方式</span></span><br><span class="line"></span><br><span class="line">client_socket.close()</span><br><span class="line"><span class="comment"># 关闭的方式</span></span><br></pre></td></tr></table></figure><p>通过这个方法上传和解析服务器的数据并提交内容</p>]]></content>
    
    
    <summary type="html">打了一个月，终于打完了</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>花指令</title>
    <link href="https://www.pri87.vip/posts/9ffaa92b.html"/>
    <id>https://www.pri87.vip/posts/9ffaa92b.html</id>
    <published>2024-03-26T16:02:20.000Z</published>
    <updated>2024-04-28T14:26:59.701Z</updated>
    
    <content type="html"><![CDATA[<p>那天，我遇到了destination那道题，然后遇到了seh和花指令。<br>然后，我苦思冥想，还是不会，遂问出题人，出题人曰：菜就多练。于是本篇博客就出现了。</p><p>参考：[<a href="https://bbs.kanxue.com/thread-279604.htm#msg_header_h2_10">原创][花指令]由易到难全面解析CTF中的花指令-软件逆向-看雪-安全社区|安全招聘|kanxue.com</a></p><p>先了解一下花指令：</p><p>花指令是专门针对静态分析的。且不在意逆向工程师可不可以看出来，关键在于让工程师逆不出来。对于动态调试，就要看情况了，有的可以直接出来，有的又搞不出来。</p><hr><p>反编译器的编译方法：</p><p>递归下降+线性扫描：</p><ul><li>从入口开始依次解析指令+遇到分支指令会递归进入分支进行反编译</li></ul><p>错误原理：</p><ul><li>机器码长度不固定，插入一个有指令作用的数据会导致其被解析成指令随后的n个字节会被解释为操作数，这样之后的内容就无法反编译了</li></ul><hr><p>花指令分为两种：</p><p>被执行的花指令和不被执行的花指令</p><p>不被执行的花指令如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__asm&#123;</span><br><span class="line">jmp Label1</span><br><span class="line">db junkcode</span><br><span class="line">Label1:</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这种jmp的可以直接nop掉（不过这个会被直接识别出来）</p><p>可以这样：</p><p>jmp:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">asm</span><br><span class="line">&#123;</span><br><span class="line">  Jz Label</span><br><span class="line">  Jnz Label</span><br><span class="line">  Db thunkcode;垃圾数据</span><br><span class="line">Label:</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>永恒跳转，但是ida无法识别</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">__asm&#123;</span><br><span class="line">    <span class="keyword">push</span> <span class="built_in">ebx</span></span><br><span class="line">    <span class="keyword">xor</span> <span class="built_in">ebx</span>,<span class="built_in">ebx</span></span><br><span class="line">    <span class="keyword">test</span> <span class="built_in">ebx</span>,<span class="built_in">ebx</span></span><br><span class="line"><span class="symbol">    jnz label</span>1</span><br><span class="line"><span class="symbol">    jz label</span>2</span><br><span class="line"><span class="symbol">label1:</span></span><br><span class="line">    _emit junkcode</span><br><span class="line"><span class="symbol">label2:</span></span><br><span class="line">   <span class="keyword">pop</span> <span class="built_in">ebx</span>//需要恢复<span class="built_in">ebx</span>寄存器   </span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">__asm&#123;</span><br><span class="line">    <span class="keyword">clc</span></span><br><span class="line"><span class="symbol">    jnz label</span>1:</span><br><span class="line">    _emit junkcode</span><br><span class="line"><span class="symbol">label1:</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同永恒跳转，不过使用test强制转换标志位</p><p>call&amp;ret:</p><blockquote><p>call指令的本质：push eip，然后jmp 函数地址</p><p>ret指令的本质：pop eip</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">__asm &#123;</span><br><span class="line">call LABEL9;</span><br><span class="line">_emit 0x83;</span><br><span class="line">LABEL9:</span><br><span class="line">add dword ptr ss : [esp] , 8;给栈中的eip加8，直接跳过这几条语句</span><br><span class="line">ret;</span><br><span class="line">__emit 0xF3;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么来详细了解一下call</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">call near xxx;默认为near，可省，相对下一条指令位置调用函数（段不变）</span><br><span class="line">E8 xx xx;</span><br><span class="line"></span><br><span class="line">call ax;间接绝对近距离调用</span><br><span class="line">call [addr];间接绝对近距离调用</span><br><span class="line">ff xx;</span><br><span class="line"></span><br><span class="line">call far 段基址:段内偏移;直接绝对远距离调用,可以不加far,返回必须用retf</span><br><span class="line">0x9a xx xx xx xx;前2字节是段内偏移，后2字节是段基址,这种情况下，CS和ip均要压栈</span><br><span class="line"></span><br><span class="line">call far [addr];间接绝对远距离调用</span><br><span class="line">ff1e xx xx xx xx;前2字节是段内偏移，后2字节是段基址</span><br></pre></td></tr></table></figure><h3 id="几个题目">几个题目</h3><h4 id="ctf2017-Fpc">ctf2017_Fpc</h4><p>这个题不知道为什么，不能反编译main函数</p><p>提示：401005: call analysis failed</p><p>说明这个是因为不能正确识别函数的参数</p><p>根据网上提示，查看401005处是什么函数，然后填写正确的参数信息，然后就可以反编译了</p><p>[施工中]</p>]]></content>
    
    
    <summary type="html">那是一个晚上</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>base64实现</title>
    <link href="https://www.pri87.vip/posts/2c2fa1f6.html"/>
    <id>https://www.pri87.vip/posts/2c2fa1f6.html</id>
    <published>2024-03-22T10:51:36.000Z</published>
    <updated>2024-03-22T11:03:47.665Z</updated>
    
    <content type="html"><![CDATA[<p>最近在复习，把写的base64发在这里</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;String&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">en</span><span class="params">(std::string str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> string table = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span>;</span><br><span class="line">std::vector&lt;<span class="type">uint8_t</span>&gt; input;</span><br><span class="line">std::vector&lt;<span class="type">uint8_t</span>&gt; output;</span><br><span class="line"><span class="comment">//初始化input</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> c : str) &#123;</span><br><span class="line">input.<span class="built_in">push_back</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//长度检查</span></span><br><span class="line"><span class="type">const</span> <span class="type">uint8_t</span> len_before = str.<span class="built_in">length</span>();</span><br><span class="line"><span class="type">uint8_t</span> fix_num = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">switch</span> (len_before % <span class="number">3</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">fix_num++;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">fix_num++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; fix_num; i++) &#123;</span><br><span class="line">input.<span class="built_in">push_back</span>(<span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//执行编码</span></span><br><span class="line"><span class="type">uint8_t</span> save[<span class="number">4</span>] = &#123;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; len_before; i += <span class="number">3</span>) &#123;</span><br><span class="line">save[<span class="number">0</span>] = input[i] &gt;&gt; <span class="number">2</span>;</span><br><span class="line">output.<span class="built_in">push_back</span>(table[save[<span class="number">0</span>]]);</span><br><span class="line">save[<span class="number">1</span>] = (input[i] &amp; <span class="number">0b00000011</span>) &lt;&lt; <span class="number">4</span> | input[i + <span class="number">1</span>] &gt;&gt; <span class="number">4</span>;</span><br><span class="line">output.<span class="built_in">push_back</span>(table[save[<span class="number">1</span>]]);</span><br><span class="line">save[<span class="number">2</span>] = (input[i + <span class="number">1</span>] &amp; <span class="number">0b00001111</span>) &lt;&lt; <span class="number">2</span> | input[i + <span class="number">2</span>] &gt;&gt; <span class="number">6</span>;</span><br><span class="line">save[<span class="number">3</span>] = input[i + <span class="number">2</span>] &amp; <span class="number">0b00111111</span>;</span><br><span class="line">output.<span class="built_in">push_back</span>(table[save[<span class="number">2</span>]]);</span><br><span class="line">output.<span class="built_in">push_back</span>(table[save[<span class="number">3</span>]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//处理末尾数据</span></span><br><span class="line"><span class="keyword">if</span> (output.<span class="built_in">back</span>() == table[<span class="number">0</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; fix_num; i++) &#123;</span><br><span class="line">output.<span class="built_in">pop_back</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; fix_num; i++) &#123;</span><br><span class="line">output.<span class="built_in">push_back</span>(table[<span class="number">64</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//组合字符串并返回</span></span><br><span class="line"><span class="function">string <span class="title">res</span><span class="params">(output.begin(), output.end())</span></span>;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">std::string <span class="title">de</span><span class="params">(std::string str)</span> </span>&#123;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> string table = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span>;</span><br><span class="line">vector&lt;<span class="type">uint8_t</span>&gt; input;</span><br><span class="line">vector&lt;<span class="type">uint8_t</span>&gt; output;</span><br><span class="line"><span class="comment">// 初始化input</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> c : str) &#123;</span><br><span class="line">input.<span class="built_in">push_back</span>(table.<span class="built_in">find</span>(c));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 执行解码</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; input.<span class="built_in">size</span>(); i += <span class="number">4</span>) &#123;</span><br><span class="line">output.<span class="built_in">push_back</span>((input[i] &lt;&lt; <span class="number">2</span>) | (input[i + <span class="number">1</span>] &gt;&gt; <span class="number">4</span>));</span><br><span class="line"><span class="keyword">if</span> (input[i + <span class="number">2</span>] != <span class="number">64</span>) &#123;</span><br><span class="line">output.<span class="built_in">push_back</span>((input[i + <span class="number">1</span>] &lt;&lt; <span class="number">4</span>) | (input[i + <span class="number">2</span>] &gt;&gt; <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (input[i + <span class="number">3</span>] != <span class="number">64</span>) &#123;</span><br><span class="line">output.<span class="built_in">push_back</span>((input[i + <span class="number">2</span>] &lt;&lt; <span class="number">6</span>) | input[i + <span class="number">3</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 组合字符串并返回</span></span><br><span class="line"><span class="function">string <span class="title">res</span><span class="params">(output.begin(), output.end())</span></span>;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please use Ctrl+Z to quit\n&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;please input your string:\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">string str;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">getline</span>(cin, str))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="built_in">en</span>(str) &lt;&lt; endl &lt;&lt; <span class="built_in">de</span>(<span class="built_in">en</span>(str)) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\nplease input your string:\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">复习一下base64</summary>
    
    
    
    
    <category term="算法" scheme="https://www.pri87.vip/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="base64" scheme="https://www.pri87.vip/tags/base64/"/>
    
  </entry>
  
  <entry>
    <title>收录文章</title>
    <link href="https://www.pri87.vip/posts/6fa4e3c4.html"/>
    <id>https://www.pri87.vip/posts/6fa4e3c4.html</id>
    <published>2024-03-19T13:54:22.000Z</published>
    <updated>2024-04-10T11:32:53.193Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RE">RE</h2><p>[<a href="https://bbs.kanxue.com/thread-279604.htm#msg_header_h2_10">原创][花指令]由易到难全面解析CTF中的花指令-软件逆向-看雪-安全社区|安全招聘|kanxue.com</a></p><p><a href="https://www.52pojie.cn/thread-326995-1-1.html">UPX防脱壳机脱壳、去除特征码、添加花指令小探 - 『脱壳破解区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p><p><a href="https://www.cnblogs.com/bEngi1/p/12173719.html">「学习笔记」对实模式/保护模式的三种访问内存机制的理解 - 幼麟 - 博客园 (cnblogs.com)</a></p><p><a href="https://www.cnblogs.com/chenwb89/p/operating_system_003.html#commentform">操作系统篇-分段机制与GDT|LDT - 卫卐 - 博客园 (cnblogs.com)</a></p><h2 id="CRYPTO">CRYPTO</h2><p><a href="https://lazzzaro.github.io/2020/05/06/crypto-RSA/index.html">RSA | Lazzaro (lazzzaro.github.io)</a></p>]]></content>
    
    
    <summary type="html">收录其它人写的好文</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>刷题记录(3)</title>
    <link href="https://www.pri87.vip/posts/e5147fe.html"/>
    <id>https://www.pri87.vip/posts/e5147fe.html</id>
    <published>2024-03-18T00:59:27.000Z</published>
    <updated>2024-04-26T15:36:42.599Z</updated>
    
    <content type="html"><![CDATA[<h1>RE（CPP）</h1><p>之前做的cpp的题还是太少了，一遇到这种抽象的就看都看不懂，遂决定要多做一下这些题。写这一篇文章的目的在于想要提高自己对cpp中反编译的代码的理解程度。然后笔者感觉之前的文章好像都很省略，这次准备多写一点文字和图，来讲解清楚。</p><hr><p>那先用一道题引入吧。这道题是moectf2023年的</p><h2 id="GUI">GUI</h2><p>先通过查找字符串找到主函数</p><p><img src="https://s2.loli.net/2024/03/11/y978CE6XWNuKbjZ.png" alt="image-20240311180850575"></p><p>主函数大致就是这样了</p><p>静态加动调两步法：</p><ol><li>静态分析发现：在<code>MessageBoxW(hWndParent, Text, L&quot;hint&quot;, 0);</code>的位置是正确位置，然后上面的比较是一个函数的返回值，传入了v7和v6，</li><li>不能通过直接的观察发现v7和v6的生成，但是通过动态调试可以发现v7在<code>sub_B00A0A((int)v7, (int)v8);</code>生成，v6在<code>same_op(a91);</code>生成，以及flag是在<code>GetWindowTextW(DlgItem, flag, 1024);</code>位置生成</li><li>通过观察函数名，发现flag传入了same_op,a91也传入了。</li></ol><p>那么看看a91，它是一个字符串，可以先提取出来，之后可能有用。</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0x000F</span>, <span class="number">0x003E</span>, <span class="number">0x0030</span>, <span class="number">0x0027</span>, <span class="number">0x0013</span>, <span class="number">0x0001</span>, <span class="number">0x007D</span>, <span class="number">0x0070</span>, <span class="number">0x0070</span>, <span class="number">0x0003</span>, <span class="number">0x007D</span>, <span class="number">0x0038</span>, <span class="number">0x000E</span>, <span class="number">0x007A</span>, <span class="number">0x0023</span>, <span class="number">0x007C</span>, <span class="number">0x000B</span>, <span class="number">0x001A</span>, <span class="number">0x003C</span>, <span class="number">0x007D</span>, <span class="number">0x0039</span>, <span class="number">0x007F</span>, <span class="number">0x003C</span>, <span class="number">0x004D</span>, <span class="number">0x004D</span>, <span class="number">0x004D</span>, <span class="number">0x0029</span>]</span><br></pre></td></tr></table></figure><p>然后程序肯定会读取flag，所以动态调试在same_op(flag)的位置下断点。</p><p>打开位置看一下，发现这个是在stack中。再尝试下断点。</p><p>[read and write]</p><p>然后放开程序，继续跑。</p><blockquote><p>如果断到断点了，不小心切出去了，可以在reg窗口eip的位置点箭头就会跳转回去。</p></blockquote><p>第一次断：</p><p><img src="https://s2.loli.net/2024/03/11/wMl21Gk4dS73icN.png" alt="image-20240311182131729"></p><p>根据这个函数名，很明显是在取len，第二次断到memmove函数，又是内部函数，然后再跑一次，出错了QAQ，这说明什么呢？</p><p>我猜想下面两种可能：</p><p>一个是用的二级指针，一个是copy的之后就没用了</p><p>所以就走不通了，那么这里就补充一手奇怪的cpp知识：</p><p>每个类实例化的时候都有一个构造函数/赋值函数对其赋值，所以如果遇到两个本来是一样类型的值进了同一个函数，可以大胆假设它们变成了一个类型，而这个题a91和flag都是这样，同时a91经过函数后v6就被赋值了，可以猜测v6就是a91变成类之后的地址，而flag之后还进行了一次加密，最后的值应该是从v8到v7，只有进入这个函数查看的时候，会发现v4和v3的值的含义</p><p><img src="https://s2.loli.net/2024/03/13/gcHhy3RzL1DXMk4.png" alt="image-20240313203446714"></p><p>虽然不知道a2是什么，但是动调之后都会发现v4和v3是指针，v4指向字符串第一个，v3指向最后一个，那么后面的循环就是加密了。</p><p>具体加密语句是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">start = sub_180956(a2);</span><br><span class="line">end = sub_18017C(a2);</span><br><span class="line"><span class="keyword">while</span> ( start != end )</span><br><span class="line">  sub_1816B7((*start++ - <span class="number">5</span>) ^ <span class="number">0x51</span>);</span><br></pre></td></tr></table></figure><p>而最后翻看源代码就知道：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">std::wstring <span class="title">EncryptFlag</span><span class="params">(<span class="type">const</span> std::wstring&amp; input)</span> </span>&#123;</span><br><span class="line">    std::wstring encrypted;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">wchar_t</span> c : input) &#123;</span><br><span class="line">        <span class="type">wchar_t</span> encryptedChar = (c - <span class="number">5</span>) ^ <span class="number">0x51</span>;  <span class="comment">// 加一操作</span></span><br><span class="line">        encrypted += encryptedChar;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> encrypted;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这表明了确实input是一个特殊类型，而源代码里的遍历被解释成两个指针的操作。</p><p>那么也可以确定最后的值就是a91，把它逆运算一下得到flag：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">b&#x27;\x39\x3b\x31\x0f\x3e\x30\x27\x13\x01\x7d\x70\x70\x03\x7d\x38\x0e\x7a\x23\x7c\x0b\x1a\x3c\x7d\x39\x7f\x3c\x4d\x4d\x4d\x29&#x27;</span></span><br><span class="line">decoded_s = s.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">ord_list = [<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> decoded_s]</span><br><span class="line">after = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> ord_list:</span><br><span class="line">    this_one = <span class="built_in">chr</span>((c^<span class="number">0x51</span>)+<span class="number">5</span>)</span><br><span class="line">    after += this_one</span><br><span class="line"><span class="built_in">print</span>(after)</span><br><span class="line"><span class="comment"># moectf&#123;GU1&amp;&amp;W1nd0w2_Pr1m3r!!!&#125;</span></span><br></pre></td></tr></table></figure><p>再次观察源代码：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">    <span class="keyword">switch</span> (<span class="built_in">LOWORD</span>(wParam)) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        TCHAR buffer[<span class="number">512</span>];</span><br><span class="line">        <span class="built_in">GetWindowText</span>(<span class="built_in">GetDlgItem</span>(hWnd, <span class="number">2</span>), buffer, <span class="built_in">sizeof</span>(buffer));</span><br><span class="line">        std::wstring input = buffer;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 对输入进行加密操作</span></span><br><span class="line">        std::wstring encryptedInput = <span class="built_in">EncryptFlag</span>(input);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 正确加密后的 flag</span></span><br><span class="line">        std::wstring correctEncryptedFlag = <span class="string">L&quot;\x39\x3b\x31\xf\x3e\x30\x27\x13\x1\x7d\x70\x70\x3\x7d\x38\xe\x7a\x23\x7c\xb\x1a\x3c\x7d\x39\x7f\x3c\x4d\x4d\x4d\x29&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (encryptedInput == correctEncryptedFlag) &#123;</span><br><span class="line">            <span class="built_in">MessageBox</span>(hWnd, <span class="built_in">TEXT</span>(<span class="string">&quot;Congratulations! flag is correct！&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;hint&quot;</span>), MB_OK);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">MessageBox</span>(hWnd, <span class="built_in">TEXT</span>(<span class="string">&quot;Sorry, flag error.&quot;</span>), <span class="built_in">TEXT</span>(<span class="string">&quot;hint&quot;</span>), MB_OK);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里的==由于类型不是原始类型，所以运算符被重载了</p><p>用ida进入这个函数查看：</p><p><img src="https://s2.loli.net/2024/03/13/qr52hv9nFy1udDI.png" alt="image-20240313204606697"></p><p>在第一个v6等于a2[5]的位置，进入a2看第6位是什么</p><p><img src="https://s2.loli.net/2024/03/13/OTvlDcA926toKIM.png" alt="image-20240313204701212"></p><p>进入分析后发现，第五个就是我们输入的字符串</p><p>而v5的位置是</p><p><img src="https://s2.loli.net/2024/03/13/jSg3KdxCYT4VXFR.png" alt="image-20240313204929328"></p><p>正确的加密之后的值，这里也能看出和a91一样</p><p>而v4我没有确定，v2是我输入的值的加密，那么最后的return就很明显是比较函数了，(函数名不一样是因为中间有跳转)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">bool</span> __cdecl <span class="title function_">sub_18A7B0</span><span class="params">(<span class="type">int</span> a1, <span class="type">int</span> a2, <span class="type">int</span> a3, <span class="type">int</span> a4)</span></span><br><span class="line">&#123;</span><br><span class="line">  __CheckForDebuggerJustMyCode(&amp;unk_258024);</span><br><span class="line">  <span class="keyword">return</span> a2 == a4 &amp;&amp; !sub_180654(a1, a3, a2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> __cdecl <span class="title function_">sub_18E010</span><span class="params">(<span class="type">unsigned</span> __int16 *a1, <span class="type">unsigned</span> __int16 *a2, <span class="type">int</span> a3)</span></span><br><span class="line">&#123;</span><br><span class="line">  __CheckForDebuggerJustMyCode(&amp;unk_25801A);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !a3 )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> ( *a1 != *a2 )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    ++a1;</span><br><span class="line">    ++a2;</span><br><span class="line">    --a3;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( *a1 &gt;= (<span class="type">int</span>)*a2 )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么大概这个题的逻辑就是这样。</p><hr><p>搞完上面这个题，3天已经过去了QAQ，但是差不多理解的就是，cpp里面函数特别抽象，所以要是没有符号表，硬推超级难搞，还是猜吧…</p><h2 id="simpleCPP">simpleCPP</h2><p>这道题有符号表，太好了，根据符号表就可以直接看出函数的作用</p><p>比如</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">v4 = <span class="built_in">sub_1400019C0</span>(std::cout, <span class="string">&quot;I&#x27;m a first timer of Logic algebra , how about you?&quot;</span>, envp);</span><br><span class="line">std::ostream::<span class="keyword">operator</span>&lt;&lt;(v4, sub_140001B90);</span><br><span class="line"><span class="comment">//就是</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;I&#x27;m a first timer of Logic algebra , how about you?&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="built_in">sub_1400019C0</span>(std::cout, <span class="string">&quot;Let&#x27;s start our game,Please input your flag:&quot;</span>, v5);</span><br><span class="line"><span class="built_in">sub_140001DE0</span>(std::cin, Block);</span><br><span class="line"><span class="comment">//就是</span></span><br><span class="line"><span class="comment">//cout &quot;Let&#x27;s start our game,Please input your flag:&quot;&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">// cin &lt;&lt; Block;</span></span><br></pre></td></tr></table></figure><p>十分方便</p><p>这种题就可以直接分析了。</p><p>mop好像会堆栈不平衡，于是用改标志位跳过。</p><p>分析一下：</p><p>先是对输入异或，然后每8位顺序读取合成一个变量，最后对4个变量执行方程上的操作</p><p>所以直接逆向，先z3，然后得结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">r1 = BitVec(<span class="string">&#x27;r1&#x27;</span>, <span class="number">64</span>)</span><br><span class="line">r2 = BitVec(<span class="string">&#x27;r2&#x27;</span>, <span class="number">64</span>)</span><br><span class="line">r3 = BitVec(<span class="string">&#x27;r3&#x27;</span>, <span class="number">64</span>)</span><br><span class="line">j = BitVec(<span class="string">&#x27;j&#x27;</span>, <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line">v22 = r2 &amp; r1</span><br><span class="line">v23 = r3 &amp; ~r1</span><br><span class="line">v24 = ~r2</span><br><span class="line">v25 = r3 &amp; v24</span><br><span class="line">v26 = r1 &amp; v24</span><br><span class="line">v28 = r2</span><br><span class="line">v29 = r3</span><br><span class="line">flag = r3 &amp; v24 &amp; r1 | r3 &amp; (r2 &amp; r1 | r2 &amp; ~r1 | ~(r2 | r1))</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line"></span><br><span class="line">s.add(r3 &amp; ~r1 == <span class="number">0x11204161012</span>)</span><br><span class="line">s.add(flag == <span class="number">0x8020717153E3013</span>)</span><br><span class="line">s.add(r3 &amp; ~r1 | r2 &amp; r1 | r3 &amp; v24 | r1 &amp; v24 == <span class="number">0x3E3A4717373E7F1F</span>)</span><br><span class="line">s.add(((r3 &amp; ~r1 | r2 &amp; r1 | r3 &amp; v24 | r1 &amp; ~r2) ^ j) == <span class="number">0x3E3A4717050F791F</span>)</span><br><span class="line">s.add((r3 &amp; ~r1 | r2 &amp; r1 | r2 &amp; r3) == (~r1 &amp; r3 | <span class="number">0xC00020130082C0C</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> s.check() == sat:</span><br><span class="line">    m = s.model()</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Solution found:&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;r1 = &quot;</span>, m[r1])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;r2 = &quot;</span>, m[r2])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;r3 = &quot;</span>, m[r3])</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;j = &quot;</span>, m[j])</span><br><span class="line">    <span class="comment"># 添加新的约束条件来排除当前的解，一定要是Or,可能出现有一个值不完全约束的情况</span></span><br><span class="line">    s.add(Or(r1 != m[r1], r2 != m[r2], r3 != m[r3], j != m[j]))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一开始我写的是s.add(And(r1 != m[r1], r2 != m[r2], r3 != m[r3], j != m[j]))，只有一个解但是怎么都出不来，最后发现原来是用Or,但是最后还是出不来，因为r2的情况太多了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">key = [<span class="number">0x69</span>, <span class="number">0x5F</span>, <span class="number">0x77</span>, <span class="number">0x69</span>, <span class="number">0x6C</span>, <span class="number">0x6C</span>, <span class="number">0x5F</span>, <span class="number">0x63</span>, <span class="number">0x68</span>, <span class="number">0x65</span>, <span class="number">0x63</span>, <span class="number">0x6B</span>, <span class="number">0x5F</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x5F</span>, <span class="number">0x64</span>, <span class="number">0x65</span>, <span class="number">0x62</span>, <span class="number">0x75</span>, <span class="number">0x67</span>, <span class="number">0x5F</span>, <span class="number">0x6F</span>, <span class="number">0x72</span>, <span class="number">0x5F</span>, <span class="number">0x6E</span>, <span class="number">0x6F</span>, <span class="number">0x74</span>]</span><br><span class="line"></span><br><span class="line">last = [<span class="number">0x3e3a460533286f0d</span>,<span class="number">0x0c00020130082c0c</span>,<span class="number">0x08020717153e3013</span>,<span class="number">0x32310600</span>]</span><br><span class="line">tryi = hextbyte(last,<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">pl(pxor(tryi,key),<span class="string">&quot;NSSCTF&quot;</span>)</span><br><span class="line"><span class="comment"># NSSCTF&#123;We1l_D0ndeajoa_Slgebra_am_i&#125;</span></span><br></pre></td></tr></table></figure><p>这个还是不对，看了wp发现比赛中间给了hint把中间修改即可<code>e!P0or_a</code></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSSCTF&#123;We<span class="number">1</span>l_D<span class="number">0</span><span class="keyword">ne</span><span class="title">!P0or_algebra_am_i</span>&#125;</span><br></pre></td></tr></table></figure><hr><p>写了两道cpp，其实内核还是分析函数作用，然后进行算法逆向，下一周尝试写一点cpp代码然后看看反编译后的样子</p><h1>RE其它内容</h1><h2 id="EZ加密器">EZ加密器</h2><p>这题超抽象，全是混淆，可以说根本不知道在干什么，但是由于输入的长度很少，基本上爆破就可以解决。</p><p>主函数是一个检查函数+base64加密函数+DES加密函数+最后的转hex字符</p><p>一个一个分析</p><p><img src="https://s2.loli.net/2024/03/13/dVw5meqJz9fX42a.png" alt="image-20240313215958869"></p><p>怕是分析不出来什么。。所以就进入了每个函数把所有逻辑复制下来然后爆破</p><p>第一个函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main() &#123;</span></span><br><span class="line"><span class="comment">//int len; // eax</span></span><br><span class="line"><span class="comment">//unsigned int v3; // r11d</span></span><br><span class="line"><span class="comment">//int v4; // edx</span></span><br><span class="line"><span class="comment">//int v5; // r8d</span></span><br><span class="line"><span class="comment">//int v6; // ecx</span></span><br><span class="line"><span class="comment">//int v7; // r8d</span></span><br><span class="line"><span class="comment">//int v8; // r9d</span></span><br><span class="line"><span class="comment">//int v9; // ecx</span></span><br><span class="line"><span class="comment">//char* p_code; // rcx</span></span><br><span class="line"><span class="comment">//unsigned int this_code; // r8d</span></span><br><span class="line"><span class="comment">//int v12; // eax</span></span><br><span class="line"><span class="comment">//int v13; // edx</span></span><br><span class="line"><span class="comment">//int v14; // r9d</span></span><br><span class="line"><span class="comment">//int v15; // edx</span></span><br><span class="line"><span class="comment">//int v16; // r10d</span></span><br><span class="line"><span class="comment">//unsigned int v17; // edx</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//// len = strlen(code);</span></span><br><span class="line"><span class="comment">//for (int q = 0; q &lt;= 30; q++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//len = q;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;this try: &quot; &lt;&lt; len;</span></span><br><span class="line"><span class="comment">//v4 = -7;</span></span><br><span class="line"><span class="comment">//v5 = 1;</span></span><br><span class="line"><span class="comment">//do</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//v6 = v5;</span></span><br><span class="line"><span class="comment">//v7 = v4 &amp; v5;</span></span><br><span class="line"><span class="comment">//v8 = v4;</span></span><br><span class="line"><span class="comment">//v4 ^= v6;</span></span><br><span class="line"><span class="comment">//v5 = 2 * v7;</span></span><br><span class="line"><span class="comment">//&#125; while (v5);</span></span><br><span class="line"><span class="comment">//if (v6 != v8)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//do</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//v9 = len;</span></span><br><span class="line"><span class="comment">//len ^= v4;</span></span><br><span class="line"><span class="comment">//v4 = 2 * (v4 &amp; v9);</span></span><br><span class="line"><span class="comment">//&#125; while (v4);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">///*code[6] = 0;</span></span><br><span class="line"><span class="comment">//p_code = code;*/</span></span><br><span class="line"><span class="comment">//v3 = len == 0;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;and result &quot; &lt;&lt; v3 &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>验证码是6位</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void find_password() &#123;</span></span><br><span class="line"><span class="comment">//std::string chars = &quot;0123456789&quot;;</span></span><br><span class="line"><span class="comment">//int v12, v13, v14, v15, v16, v17;</span></span><br><span class="line"><span class="comment">//bool v3;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; chars.size(); ++i) &#123;</span></span><br><span class="line"><span class="comment">//for (int j = 0; j &lt; chars.size(); ++j) &#123;</span></span><br><span class="line"><span class="comment">//for (int k = 0; k &lt; chars.size(); ++k) &#123;</span></span><br><span class="line"><span class="comment">//for (int l = 0; l &lt; chars.size(); ++l) &#123;</span></span><br><span class="line"><span class="comment">//for (int m = 0; m &lt; chars.size(); ++m) &#123;</span></span><br><span class="line"><span class="comment">//for (int n = 0; n &lt; chars.size(); ++n) &#123;</span></span><br><span class="line"><span class="comment">//std::string password = &#123; chars[i], chars[j], chars[k], chars[l], chars[m], chars[n] &#125;;</span></span><br><span class="line"><span class="comment">//const char* p_code = password.c_str();</span></span><br><span class="line"><span class="comment">//v3 = true;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//do &#123;</span></span><br><span class="line"><span class="comment">//int this_code = *p_code;</span></span><br><span class="line"><span class="comment">//v12 = -49;</span></span><br><span class="line"><span class="comment">//v13 = 1;</span></span><br><span class="line"><span class="comment">//do &#123;</span></span><br><span class="line"><span class="comment">//v14 = v13;</span></span><br><span class="line"><span class="comment">//v15 = v12 &amp; v13;</span></span><br><span class="line"><span class="comment">//v16 = v12;</span></span><br><span class="line"><span class="comment">//v12 ^= v14;</span></span><br><span class="line"><span class="comment">//v13 = 2 * v15;</span></span><br><span class="line"><span class="comment">//&#125; while (v13);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (v14 != v16) &#123;</span></span><br><span class="line"><span class="comment">//do &#123;</span></span><br><span class="line"><span class="comment">//v17 = this_code;</span></span><br><span class="line"><span class="comment">//this_code ^= v12;</span></span><br><span class="line"><span class="comment">//v12 = 2 * (v12 &amp; v17);</span></span><br><span class="line"><span class="comment">//&#125; while (v12);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (this_code &gt;= 0xA) &#123;</span></span><br><span class="line"><span class="comment">//v3 = false;</span></span><br><span class="line"><span class="comment">//break;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//++p_code;</span></span><br><span class="line"><span class="comment">//&#125; while (*p_code);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//if (v3) &#123;</span></span><br><span class="line"><span class="comment">//std::cout &lt;&lt; &quot;Found a password: &quot; &lt;&lt; password &lt;&lt; std::endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main() &#123;</span></span><br><span class="line"><span class="comment">//find_password();</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><p>验证码是数字</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//int main(void) &#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int len; // eax</span></span><br><span class="line"><span class="comment">//int v3; // edx</span></span><br><span class="line"><span class="comment">//int v4; // r8d</span></span><br><span class="line"><span class="comment">//int v5; // r9d</span></span><br><span class="line"><span class="comment">//int v6; // r8d</span></span><br><span class="line"><span class="comment">//int v7; // r10d</span></span><br><span class="line"><span class="comment">//int v8; // r8d</span></span><br><span class="line"><span class="comment">//unsigned int ans; // r11d</span></span><br><span class="line"><span class="comment">//__int64 v10; // r10</span></span><br><span class="line"><span class="comment">//int v11; // ecx</span></span><br><span class="line"><span class="comment">//int v12; // edx</span></span><br><span class="line"><span class="comment">//int v13; // eax</span></span><br><span class="line"><span class="comment">//int v14; // r8d</span></span><br><span class="line"><span class="comment">//int v15; // edx</span></span><br><span class="line"><span class="comment">//int v16; // r9d</span></span><br><span class="line"><span class="comment">//int v17; // edx</span></span><br><span class="line"><span class="comment">//char v19[42]; // [rsp+2Eh] [rbp-2Ah] BYREF</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//for (int p = 1; p &lt;= 100; p++)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//len = p;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;this try: &quot; &lt;&lt; len;</span></span><br><span class="line"><span class="comment">//v3 = -41;</span></span><br><span class="line"><span class="comment">//v4 = 1;</span></span><br><span class="line"><span class="comment">//do</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//v5 = v4;</span></span><br><span class="line"><span class="comment">//v6 = v3 &amp; v4;</span></span><br><span class="line"><span class="comment">//v7 = v3;</span></span><br><span class="line"><span class="comment">//v3 ^= v5;</span></span><br><span class="line"><span class="comment">//v4 = 2 * v6;</span></span><br><span class="line"><span class="comment">//&#125; while (v4);</span></span><br><span class="line"><span class="comment">//if (v5 != v7)</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//do</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">//v8 = len;</span></span><br><span class="line"><span class="comment">//len ^= v3;</span></span><br><span class="line"><span class="comment">//v3 = 2 * (v3 &amp; v8);</span></span><br><span class="line"><span class="comment">//&#125; while (v3);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//ans = 0;</span></span><br><span class="line"><span class="comment">//cout &lt;&lt; &quot;and result: &quot; &lt;&lt; len &lt;&lt; endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;string&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;cstring&gt;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//__int64 check(__int64 a1) &#123;</span></span><br><span class="line"><span class="comment">//// Your function here</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//void find_flag() &#123;</span></span><br><span class="line"><span class="comment">//std::string flag(40, &#x27;0&#x27;);  // Initialize a flag string of length 40 with &#x27;0&#x27;</span></span><br><span class="line"><span class="comment">//int v12, v13, v14, v15, v16, v17;</span></span><br><span class="line"><span class="comment">//bool ans;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//// Set the specific positions to &quot;DASCTF&#123;&#125;&quot;</span></span><br><span class="line"><span class="comment">//std::string initial = &quot;DASCTF&#123;&#125;&quot;;</span></span><br><span class="line"><span class="comment">//for (int i = 0; i &lt; 8; ++i) &#123;</span></span><br><span class="line"><span class="comment">//flag[i] = initial[i];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//// Check the flag</span></span><br><span class="line"><span class="comment">//if (check((__int64)flag.c_str())) &#123;</span></span><br><span class="line"><span class="comment">//std::cout &lt;&lt; &quot;The flag: &quot; &lt;&lt; flag &lt;&lt; &quot; satisfies the condition.&quot; &lt;&lt; std::endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//else &#123;</span></span><br><span class="line"><span class="comment">//std::cout &lt;&lt; &quot;The flag: &quot; &lt;&lt; flag &lt;&lt; &quot; does not satisfy the condition.&quot; &lt;&lt; std::endl;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//int main() &#123;</span></span><br><span class="line"><span class="comment">//find_flag();</span></span><br><span class="line"><span class="comment">//return 0;</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag的长度40和开头结尾要求</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bitset&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="type">char</span>* p_lastflag; <span class="comment">// r8</span></span><br><span class="line"><span class="type">char</span>* p_str2; <span class="comment">// rcx</span></span><br><span class="line"><span class="type">char</span>* end; <span class="comment">// r9</span></span><br><span class="line"><span class="type">char</span> v6; <span class="comment">// si</span></span><br><span class="line"><span class="type">unsigned</span> __int8 left; <span class="comment">// di</span></span><br><span class="line"><span class="type">int</span> v8; <span class="comment">// eax</span></span><br><span class="line"><span class="type">int</span> v9; <span class="comment">// edx</span></span><br><span class="line"><span class="type">int</span> v10; <span class="comment">// edi</span></span><br><span class="line"><span class="type">int</span> v11; <span class="comment">// eax</span></span><br><span class="line"><span class="type">int</span> v12; <span class="comment">// edi</span></span><br><span class="line"><span class="type">int</span> v13; <span class="comment">// ebp</span></span><br><span class="line"><span class="type">int</span> v14; <span class="comment">// edi</span></span><br><span class="line"><span class="type">int</span> v15; <span class="comment">// r12d</span></span><br><span class="line"><span class="type">int</span> v16; <span class="comment">// edi</span></span><br><span class="line"><span class="type">char</span> v17; <span class="comment">// di</span></span><br><span class="line"><span class="type">int</span> v18; <span class="comment">// eax</span></span><br><span class="line"><span class="type">int</span> v19; <span class="comment">// edx</span></span><br><span class="line"><span class="type">int</span> v21; <span class="comment">// esi</span></span><br><span class="line"><span class="type">int</span> v22; <span class="comment">// eax</span></span><br><span class="line"><span class="type">int</span> v23; <span class="comment">// esi</span></span><br><span class="line"><span class="type">int</span> v24; <span class="comment">// edi</span></span><br><span class="line"><span class="type">int</span> v25; <span class="comment">// esi</span></span><br><span class="line"><span class="type">int</span> v26; <span class="comment">// ebp</span></span><br><span class="line"><span class="type">int</span> v27; <span class="comment">// esi</span></span><br><span class="line"><span class="type">char</span>* saved_flag; <span class="comment">// [rsp+20h] [rbp-D8h] BYREF</span></span><br><span class="line">__int64 slen; <span class="comment">// [rsp+28h] [rbp-D0h]</span></span><br><span class="line"><span class="type">char</span> afterbase[<span class="number">8</span>]; <span class="comment">// [rsp+38h] [rbp-C0h] BYREF</span></span><br><span class="line"><span class="type">char</span> Str2[<span class="number">184</span>]; <span class="comment">// [rsp+40h] [rbp-B8h] BYREF</span></span><br><span class="line">slen = <span class="number">1</span>;</span><br><span class="line">p_lastflag = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">char</span> k = <span class="number">0</span>; k &lt; <span class="number">256</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line">*p_lastflag = k;</span><br><span class="line"><span class="keyword">if</span> ((<span class="type">int</span>)slen &lt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">end = Str2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">p_str2 = Str2;</span><br><span class="line">end = &amp;Str2[<span class="number">2</span> * (<span class="type">int</span>)slen];</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">v6 = *p_lastflag;</span><br><span class="line">left = (<span class="type">unsigned</span> __int8)*p_lastflag &gt;&gt; <span class="number">4</span>;</span><br><span class="line">v8 = left;</span><br><span class="line"><span class="keyword">if</span> (left &lt;= <span class="number">9u</span>)</span><br><span class="line">&#123;</span><br><span class="line">v9 = left ^ <span class="number">0x30</span>;</span><br><span class="line"><span class="keyword">if</span> (!left)</span><br><span class="line">v9 = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">v9 = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">v10 = v9 &amp; v8;</span><br><span class="line">v9 ^= v8;</span><br><span class="line">v8 = <span class="number">2</span> * v10;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">2</span> * v10);</span><br><span class="line">v11 = <span class="number">-11</span>;</span><br><span class="line">v12 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">v13 = v12;</span><br><span class="line">v14 = v11 &amp; v12;</span><br><span class="line">v15 = v11;</span><br><span class="line">v11 ^= v13;</span><br><span class="line">v12 = <span class="number">2</span> * v14;</span><br><span class="line">&#125; <span class="keyword">while</span> (v12);</span><br><span class="line"><span class="keyword">if</span> (v13 != v15)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">v16 = v9 &amp; v11;</span><br><span class="line">v9 ^= v11;</span><br><span class="line">v11 = <span class="number">2</span> * v16;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">2</span> * v16);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">*p_str2 = v9;</span><br><span class="line">p_str2 += <span class="number">2</span>;</span><br><span class="line">v17 = v6 &amp; <span class="number">0xF</span>;</span><br><span class="line">v18 = v6 &amp; <span class="number">0xF</span>;</span><br><span class="line"><span class="keyword">if</span> ((v6 &amp; <span class="number">0xF</span>u) &gt; <span class="number">9</span>)</span><br><span class="line">&#123;</span><br><span class="line">v19 = <span class="number">65</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">v21 = v19 &amp; v18;</span><br><span class="line">v19 ^= v18;</span><br><span class="line">v18 = <span class="number">2</span> * v21;</span><br><span class="line">&#125; <span class="keyword">while</span> (<span class="number">2</span> * v21);</span><br><span class="line">v22 = <span class="number">-11</span>;</span><br><span class="line">v23 = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">v24 = v23;</span><br><span class="line">v25 = v22 &amp; v23;</span><br><span class="line">v26 = v22;</span><br><span class="line">v22 ^= v24;</span><br><span class="line">v23 = <span class="number">2</span> * v25;</span><br><span class="line">&#125; <span class="keyword">while</span> (v23);</span><br><span class="line"><span class="keyword">if</span> (v24 != v26)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">v27 = v19;</span><br><span class="line">v19 ^= v22;</span><br><span class="line">v22 = <span class="number">2</span> * (v22 &amp; v27);</span><br><span class="line">&#125; <span class="keyword">while</span> (v22);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">v19 = v17 ^ <span class="number">0x30</span>;</span><br><span class="line"><span class="keyword">if</span> (!v17)</span><br><span class="line">v19 = <span class="number">48</span>;</span><br><span class="line">&#125;</span><br><span class="line">*(p_str2 - <span class="number">1</span>) = v19;</span><br><span class="line">++p_lastflag;</span><br><span class="line">&#125; <span class="keyword">while</span> (p_str2 != end);</span><br><span class="line">&#125;</span><br><span class="line">*end = <span class="number">0</span>;</span><br><span class="line">std::cout &lt;&lt; std::hex &lt;&lt; k &lt;&lt; <span class="string">&quot;: &quot;</span> &lt;&lt; Str2[<span class="number">0</span>] &lt;&lt; <span class="string">&quot; , &quot;</span> &lt;&lt; Str2[<span class="number">1</span>] &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后的逻辑是一位值转换为2位的hex字符串</p><p>然后base64那部分算是一眼叮，然后后面那个des没见过全靠signsrch直接分析出来，然后直接解：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> DES</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line">raw_table = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&#x27;</span></span><br><span class="line">new_table = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ+/=&#x27;</span></span><br><span class="line">dictionary_decode = <span class="built_in">str</span>.maketrans(new_table, raw_table)</span><br><span class="line">dictionary_encode = <span class="built_in">dict</span>(<span class="built_in">zip</span>(dictionary_decode.values(),dictionary_decode.keys()))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 已知的 DES 加密结果</span></span><br><span class="line">encrypted_text = <span class="built_in">bytes</span>.fromhex(<span class="string">&#x27;0723105D5C12217DCDC3601F5ECB54DA9CCEC2279F1684A13A0D716D17217F4C9EA85FF1A42795731CA3C55D3A4D7BEA&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试所有可能的 6 位数字组合</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> itertools.product(<span class="built_in">range</span>(<span class="number">10</span>), repeat=<span class="number">6</span>):</span><br><span class="line">    key = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">str</span>, i))  </span><br><span class="line">    <span class="comment"># print(key)</span></span><br><span class="line">    keyt = base64.b64encode(key.encode()).decode() <span class="comment"># MTIzMTIzMTIz base64encode(v) 正常的123123进行base64以后的值</span></span><br><span class="line">    keytt = keyt.translate(dictionary_encode)</span><br><span class="line">    key = keytt.encode()</span><br><span class="line">    <span class="comment"># print(key)</span></span><br><span class="line">    <span class="comment"># 创建 DES 对象</span></span><br><span class="line">    des = DES.new(key, DES.MODE_ECB)</span><br><span class="line">    <span class="comment"># 尝试解密</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        decrypted_text = des.decrypt(encrypted_text)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="string">b&quot;DASCTF&quot;</span> <span class="keyword">in</span> decrypted_text):</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;找到了！密钥是：&#x27;</span>, key)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;明文是：&#x27;</span>, decrypted_text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span>  <span class="comment"># 如果解密失败，就尝试下一个密钥</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1>CRYPTO</h1><p>先从简单的练起吧。</p><h2 id="bigRSA">bigRSA</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n1 = <span class="number">103835296409081751860770535514746586815395898427260334325680313648369132661057840680823295512236948953370895568419721331170834557812541468309298819497267746892814583806423027167382825479157951365823085639078738847647634406841331307035593810712914545347201619004253602692127370265833092082543067153606828049061</span></span><br><span class="line">n2 = <span class="number">115383198584677147487556014336448310721853841168758012445634182814180314480501828927160071015197089456042472185850893847370481817325868824076245290735749717384769661698895000176441497242371873981353689607711146852891551491168528799814311992471449640014501858763495472267168224015665906627382490565507927272073</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">c = <span class="built_in">pow</span>(m, e, n1)</span><br><span class="line">c = <span class="built_in">pow</span>(c, e, n2)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c = %d&quot;</span> % c)</span><br></pre></td></tr></table></figure><p>它用了两个n，尝试莫不互素：gcd一下，出来了最大公倍数，那就直接解了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">a = GCD(n1,n2)</span><br><span class="line"><span class="comment"># print(a)</span></span><br><span class="line"></span><br><span class="line">n1_ = n1 //a</span><br><span class="line">n2_ = n2 // a</span><br><span class="line"><span class="comment"># print(n1_)</span></span><br><span class="line"><span class="comment"># print(n2_)</span></span><br><span class="line"></span><br><span class="line">d1 = <span class="built_in">pow</span>(e,-<span class="number">1</span>,(a-<span class="number">1</span>)*(n2_-<span class="number">1</span>))</span><br><span class="line">c1 = <span class="built_in">pow</span>(c,d1,n2)</span><br><span class="line">d2 = <span class="built_in">pow</span>(e,-<span class="number">1</span>,(a-<span class="number">1</span>)*(n1_-<span class="number">1</span>))</span><br><span class="line">c2 = <span class="built_in">pow</span>(c1,d2,n1)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(c2))</span><br><span class="line"><span class="comment"># b&#x27;SangFor&#123;qSccmm1WrgvIg2Uq_cZhmqNfEGTz2GV8&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="bad-e">bad_e</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(p) <span class="comment"># 6853495238262155391975011057929314523706159020478084061020122347902601182448091015650787022962180599741651597328364289413042032923330906135304995252477571</span></span><br><span class="line"><span class="built_in">print</span>(q) <span class="comment"># 11727544912613560398705401423145382428897876620077115390278679983274961030035884083100580422155496261311510530671232666801444557695190734596546855494472819</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;flag.txt&quot;</span>,<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> fs:</span><br><span class="line">    flag = fs.read().strip()</span><br><span class="line"></span><br><span class="line">m = bytes_to_long(flag.encode())</span><br><span class="line">c = <span class="built_in">pow</span>(m,e,p*q)</span><br><span class="line"><span class="built_in">print</span>(c) <span class="comment"># 63388263723813143290256836284084914544524440253054612802424934400854921660916379284754467427040180660945667733359330988361620691457570947823206385692232584893511398038141442606303536260023122774682805630913037113541880875125504376791939861734613177272270414287306054553288162010873808058776206524782351475805</span></span><br></pre></td></tr></table></figure><p>已知p，q，e，c，直接解</p><p>6,解不出来，说是e是phi的因子，不能得出m，那就分解一下phi</p><p>发现p-1是e的倍数，但是q-1不是，根据同余的消去律可消去两边的最大公因数</p><p>相当于mod((q-1)),就出来了</p><h2 id="baby-e">baby_e</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> getPrime,bytes_to_long</span><br><span class="line"></span><br><span class="line">p,q = getPrime(<span class="number">2048</span>),getPrime(<span class="number">2048</span>)</span><br><span class="line">e = <span class="number">7</span></span><br><span class="line">n = p*q</span><br><span class="line">m = bytes_to_long(<span class="built_in">open</span>(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>).read().strip())</span><br><span class="line">c = <span class="built_in">pow</span>(m,e,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;c = &quot;</span>,c)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;n = &quot;</span>,n)</span><br><span class="line"></span><br><span class="line"><span class="comment"># c =  147693154873835354725007152781732424355869776162377337823960431913672366269917723916891506269449726723757821517328874729037838600793748824028829185409932536014732765063216715033843955453706710187792772702199448156372644163429786386035008302836467605094954587157232829525150652611067567669525072625329634860065850520051628272535479197120008981979404760445193750864902244921407742155742716289495581989134730376783828846663464819337418977287363028738701414486788851136608957124505485242331701209645216580641917007780811842757125048746184068597664780265422321550909392419865169775282217442331295071069272774722564587602419768461231775480847018941840911357926330143045826277813722919121117172763493242590521245640828462665947672485094793188432098216701511715232654611338293295459889814699850788048985878279440740712956248569068077253790198036918598519191892836075254345518967666166925163908185663991353344555402397055977817370082929420443034626201745027965444069777059760865359310439815816749939498993014457995041394803598825093836045546578310632172636478575946653375857640993393714607308326474003446154152048840071034349831168612740218034679021240949747357214453636633636662650940968576792518622437627529244515229173</span></span><br><span class="line"><span class="comment"># n =  553409369582823237678532685244026647155180191225879439432235077135813123637186465008813830373646133388592395760175777499266561095087891764348044063111935877931069321764391883899483374576303169645488542398590564148654412004383012178107972880058460460806768779452529433458826925606225797078653905380530651390617109384086518728626571028089036812787671647095695947167204428442727185744172445701874820612799168887428075695751162763647868386879374037826876671079326544820609721731078985096813307183878793033824330869698508952853770794414757655681370862323768018291030331209143189638496644361618184164228294031490537429556439588954274708598530042700988138862000054458742762198052079867259365645914383561162796796952346445529346145323567650621600171442575319262718389389870407629339714751583360252884338116164466349449862781112019462555743429653595045695696967783338371470032332852204294900011651434678829104876529439166176589508898757122660322523937330848536715937381297551894198974459004139082562228022412335520195652419375915216074658463954339332593244483927157329404652516225481116614815221154229491846087288087715884363786672244655901308480290011237244562251084095684531716327141154558809471185132979704992609461470501119328696999713829</span></span><br></pre></td></tr></table></figure><p>e很小</p><p>$c = m^e + kn$</p><p>$m = (c - kn)**(1/7)$</p><p>尝试低加密指数攻击</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> iroot</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    res = iroot(c+k*n,e)</span><br><span class="line">    <span class="keyword">if</span>(res[<span class="number">1</span>] == <span class="literal">True</span>):</span><br><span class="line">        <span class="built_in">print</span>(libnum.n2s(<span class="built_in">int</span>(res[<span class="number">0</span>]))) <span class="comment">#转为字符串</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    k=k+<span class="number">1</span></span><br><span class="line">    <span class="comment"># b&#x27;moectf&#123;SMaLL_3xPon3nt_Mak3_rSa_w3ak!_!lP0iYlJf!M3rux9G9Vf!JoxiMl903lllA&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="狂飙">狂飙</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">flag = <span class="string">b&#x27;19209389120572313&#x27;</span></span><br><span class="line">m = <span class="number">88007513702424243702066490849596817304827839547007641526433597788800212065249</span></span><br><span class="line">key = os.urandom(<span class="number">24</span>)</span><br><span class="line">key = bytes_to_long(key)</span><br><span class="line">n=m % key</span><br><span class="line">flag += (<span class="number">16</span> - <span class="built_in">len</span>(flag) % <span class="number">16</span>) * <span class="string">b&#x27;\x00&#x27;</span></span><br><span class="line">iv = os.urandom(<span class="number">16</span>)</span><br><span class="line">aes = AES.new(key,AES.MODE_CBC,iv)</span><br><span class="line">enc_flag = aes.encrypt(flag)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(enc_flag)</span><br><span class="line"><span class="built_in">print</span>(iv)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#103560843006078708944833658339172896192389513625588</span></span><br><span class="line"><span class="comment">#b&#x27;\xfc\x87\xcb\x8e\x9d\x1a\x17\x86\xd9~\x16)\xbfU\x98D\xfe\x8f\xde\x9c\xb0\xd1\x9e\xe7\xa7\xefiY\x95C\x14\x13C@j1\x9d\x08\xd9\xe7W&gt;F2\x96cm\xeb&#x27;</span></span><br><span class="line"><span class="comment">#b&#x27;UN\x1d\xe2r&lt;\x1db\x00\xdb\x9a\x84\x1e\x82\xf0\x86&#x27;</span></span><br></pre></td></tr></table></figure><p>通过n = m % key来求key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> combinations</span><br><span class="line"></span><br><span class="line"><span class="comment"># 已知的值</span></span><br><span class="line">enc_flag = <span class="string">b&#x27;\xfc\x87\xcb\x8e\x9d\x1a\x17\x86\xd9~\x16)\xbfU\x98D\xfe\x8f\xde\x9c\xb0\xd1\x9e\xe7\xa7\xefiY\x95C\x14\x13C@j1\x9d\x08\xd9\xe7W&gt;F2\x96cm\xeb&#x27;</span></span><br><span class="line">iv = <span class="string">b&#x27;UN\x1d\xe2r&lt;\x1db\x00\xdb\x9a\x84\x1e\x82\xf0\x86&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 已知的因子</span></span><br><span class="line">factors = [<span class="number">3</span>,<span class="number">37</span>,<span class="number">439</span>,<span class="number">3939851</span>, <span class="number">265898280367</span>,<span class="number">5036645362649</span>,<span class="number">342291058100503482469327892079792475478873</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历所有可能的组合</span></span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(factors) + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> subset <span class="keyword">in</span> combinations(factors, r):</span><br><span class="line">        <span class="comment"># 计算可能的 key</span></span><br><span class="line">        possible_key = reduce(<span class="keyword">lambda</span> x, y: x*y, subset)</span><br><span class="line">        <span class="comment"># 检查 key 的长度是否为 24 字节</span></span><br><span class="line">        <span class="comment"># 使用找到的 key、iv 和 enc_flag 解密 flag</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            aes = AES.new(long_to_bytes(possible_key), AES.MODE_CBC, iv)</span><br><span class="line">            flag = aes.decrypt(enc_flag)</span><br><span class="line">            <span class="keyword">if</span> flag.startswith(<span class="string">b&#x27;flag&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Found possible flag:&#x27;</span>, flag)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">果然还是要以周为单位记录学习啊</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="密码学" scheme="https://www.pri87.vip/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>RE中的反调试</title>
    <link href="https://www.pri87.vip/posts/2af5212f.html"/>
    <id>https://www.pri87.vip/posts/2af5212f.html</id>
    <published>2024-03-17T10:16:30.000Z</published>
    <updated>2024-03-19T11:18:48.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SEH">SEH</h2><p>在python中，你是否见过以下语法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(factors) + <span class="number">1</span>):</span><br><span class="line">    <span class="keyword">for</span> subset <span class="keyword">in</span> combinations(factors, r):</span><br><span class="line">        possible_key = reduce(<span class="keyword">lambda</span> x, y: x*y, subset)</span><br><span class="line">        <span class="keyword">try</span>:<span class="comment">#防止key的长度不对</span></span><br><span class="line">            aes = AES.new(long_to_bytes(possible_key), AES.MODE_CBC, iv)</span><br><span class="line">            flag = aes.decrypt(enc_flag)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Found possible flag:&#x27;</span>, flag)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><p>即</p><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span></span><br><span class="line"><span class="keyword">except</span></span><br></pre></td></tr></table></figure><p>它的作用是尝试执行try块中的内容，如果出现异常，就执行except的内容。</p><p>在Windows中，也有类似的保护程序正常执行的机制，叫做SEH（Structured Exception Handling）</p><p>通过在源代码使用__try,__except,__finally来实现</p><p>使用时，except()中的值用来表示异常处理方法</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">__except()括号中表达式的取值范围:</span></span><br><span class="line"><span class="section">1:处理异常</span></span><br><span class="line"><span class="section">0:不处理异常交给下一个异常节点去处理</span></span><br><span class="line"><span class="section">-1:继续执行（程序直接寄掉）</span></span><br></pre></td></tr></table></figure><p>在程序中，可能故意使用SEH，刻意引发错误跳过执行一些指令</p><hr><p>施工中</p>]]></content>
    
    
    <summary type="html">收集反调试！</summary>
    
    
    
    <category term="知识集" scheme="https://www.pri87.vip/categories/%E7%9F%A5%E8%AF%86%E9%9B%86/"/>
    
    
    <category term="RE" scheme="https://www.pri87.vip/tags/RE/"/>
    
    <category term="动调" scheme="https://www.pri87.vip/tags/%E5%8A%A8%E8%B0%83/"/>
    
  </entry>
  
  <entry>
    <title>加密03:AES</title>
    <link href="https://www.pri87.vip/posts/ca6bad6.html"/>
    <id>https://www.pri87.vip/posts/ca6bad6.html</id>
    <published>2024-03-16T14:29:16.000Z</published>
    <updated>2024-03-19T11:43:27.887Z</updated>
    
    <content type="html"><![CDATA[<h1>Advanced Encryption Standard</h1><p>(高级加密标准)</p><h2 id="性质">性质</h2><p>对称加密，块加密，流加密<br>密钥长度固定为：128，192，256bit<br>加密模式分为：CBC,CFB,OFB,CTR,GCM,ECB</p><ul><li>对称加密：加密密钥和解密密钥相同</li></ul><blockquote><h2 id="分组密码和流密码">分组密码和流密码</h2><p>分组密码是每次只能处理特定长度的一块数据的一类密码算法，这里的“一块”就称为分组。一个分组的比特数就称为分组长度。<br>流密码是对数据流进行连续处理的一类密码算法。流密码一般以1比特、8比特或32比特等为单位进行加密和解密。<br>分组密码算法只能加密固定长度的分组，但需要加密的明文长度可能会超过分组密码的分组长度，这就需要对分组密码算法进行迭代，以便将一段很长的明文全部加密。迭代的方法就被称为分组密码的模式。</p></blockquote><blockquote><ul><li>ECB模式：Electronic CodeBook mode（电子密码本模式）</li><li>CBC模式：Cipher Block Chaining mode（密码分组链接模式）</li><li>CFB模式：Cipher FeedBack mode（密文反馈模式）</li><li>OFB模式：Output FeedBack mode（输出反馈模式）</li><li>CTR模式：CounTeR mode（计数器模式）</li></ul></blockquote><table><thead><tr><th>模式</th><th>名称</th><th>优点</th><th>缺点</th><th>备注</th></tr></thead><tbody><tr><td>ECB模式</td><td>Electronic CodeBook mode（电子密码本模式）</td><td>简单、快速、支持并行运算（加密、解密）</td><td>明文中的重复排列会反映在密文中；通过删除、替换密文分组可以对明文进行操作；对包含某些比特错误的密文进行解密时，对应的分组会出错；不能低于重放攻击。</td><td>不应使用</td></tr><tr><td>CBC模式</td><td>Cipher Block Chaining mode（密码分组链接模式）</td><td>明文的重复排列不会反映在密文中；支持并行计算（仅解密）；能够解密任何密文分组</td><td>对包含某些错误比特的密文进行解密时，第一个分组的全部比特以及后一个分组的相应比特会出错；加密不支持并行计算</td><td>CRYPTREC推荐；《实用密码学》推荐</td></tr><tr><td>CFB模式</td><td>Cipher FeedBack mode（密文反馈模式）</td><td>不需要填充（padding）；支持并行计算（仅解密）；能够解密任意密文分组</td><td>加密不支持并行计算；对包含某些错误比特的密文进行解密时，第一个分组的全部比特以及后一个分组的相应比特会出错；不能低于重放攻击</td><td>CRYPTREC推荐</td></tr><tr><td>OFB模式</td><td>Output FeedBack mode（输出反馈模式）</td><td>不需要填充（padding）；可实现进行加密、解密的准备；解密解密使用相同结构；对包含某些错误比特密文解密时，只有明文中相应的比特会出错</td><td>不支持并行计算；主动攻击者反转密文分组中的某些比特时，明文分组中相应的比特也会被反转</td><td>CRYPTREC推荐</td></tr><tr><td>CTR模式</td><td>CounTeR mode（计数器模式）</td><td>不需要填充（padding）；可实现进行加密、解密的准备；解密解密使用相同结构；对包含某些错误比特密文解密时，只有明文中相应的比特会出错；支持并行计算（加密、解密)</td><td>主动攻击者反转密文分组中的某些比特时，明文分组中相应的比特也会被反转</td><td>CRYPTREC推荐；《实用密码学》推荐</td></tr></tbody></table><p>以上内容来自(<a href="https://blog.csdn.net/weixin_43946212/article/details/108116251">分组密码的模式——ECB、CBC、CFB、OFB、CTR_ofb是指分组密码的哪种工作模式-CSDN博客</a>)</p><hr><h2 id="过程">过程</h2><h3 id="明文分块">明文分块</h3><p>把所有明文分为n块，每块128bit。如果最后不足，需要填充：</p><ul><li><code>NoPadding</code>： 不做任何填充，但是要求明文必须是16字节的整数倍。<br><code>PKCS5Padding</code>（默认）： 如果明文块少于16个字节（<code>128bit</code>），在明文块末尾补足相应数量的字符，且每个字节的值等于缺少的字符数。 比如明文：{1,2,3,4,5,a,b,c,d,e},缺少6个字节，则补全为{1,2,3,4,5,a,b,c,d,e,6,6,6,6,6,6 }<br><code>ISO10126Padding</code>：如果明文块少于16个字节（<code>128bit</code>），在明文块末尾补足相应数量的字节，最后一个字符值等于缺少的字符数，其他字符填充随机数。比如明文：{1,2,3,4,5,a,b,c,d,e},缺少6个字节，则可能补全为{1,2,3,4,5,a,b,c,d,e,5,c,3,G,$,6}<br><code>PKCS7Padding</code>原理与<code>PKCS5Padding</code>相似，区别是<code>PKCS5Padding</code>的<code>blocksize</code>为8字节，而<code>PKCS7Padding</code>的<code>blocksize</code>可以为1到255字节</li><li>需要注意的是，如果在<code>AES</code>加密的时候使用了某一种填充方式，解密的时候也必须采用同样的填充方式。</li></ul><p>然后每一块按序排列成4x4矩阵</p><h3 id="S盒生成">S盒生成</h3><p><img src="https://pic1.zhimg.com/80/v2-9c648584654f34c8eaddf0f57dde2ec3_1440w.webp?source=1def8aca" alt="img"></p><p>这个表是S盒，生成方法如下：</p><ol><li>对S盒初始化为00，01，02，03，…，FE，FF</li><li>用每一格的乘法逆元代替这一格，域是$GF(2^8)$</li><li>对每一格的bit位进行运算，令$b_i^，=b_i\oplus b_{i+4 mod 8}\oplus b_{i+5 mod 8}\oplus b_{i+6 mod 8}\oplus b_{i+7 mod 8}\oplus c_i$，其中$c = {01100011}$</li></ol><p>逆S盒：用于解密</p><h3 id="字节替代">字节替代</h3><p>通过每一字节前4位和后四位分别作为S盒的行标和列标，替换为对应位置的值</p><h3 id="行移位">行移位</h3><p>把上面已经分为4x4的矩阵中，第i行左移i位</p><h3 id="列混淆">列混淆</h3><p>最矩阵经行矩阵乘法：<br>$$<br>\begin{bmatrix}<br>2 &amp; 3 &amp; 1 &amp; 1 \\<br>1 &amp; 2 &amp; 3 &amp; 1 \\<br>1 &amp; 1 &amp; 2 &amp; 3 \\<br>3 &amp; 1 &amp; 1 &amp; 2<br>\end{bmatrix} \tag{1}<br>*<br>before = after<br>$$</p><h3 id="轮密钥加">轮密钥加</h3><p>每一轮输入与轮密钥进行异或，该项一定出现在加密的首尾，保证安全性</p><p>轮密钥的生成是初始密钥和该轮子密钥异或的结果</p><h4 id="密钥扩展">密钥扩展</h4><p>密钥扩展用于生成子密钥</p><p>现在假设已经有初始密钥的4x4矩阵</p><p>对它分列（以列为单位分成4个）为$W_0，W_1,W_2,W_3$。那么扩展密钥就是扩展出$W_4，W_5,W_6…$</p><p>具体公式是：<br>$$<br>\begin{equation}<br>\left{<br>\begin{aligned}<br>W_i &amp; = W_{i-4} \oplus W_{i-1} \\<br>W_i &amp; = W_{i-4} \oplus T({W_{i-1}})<br>\end{aligned}<br>\right.<br>\end{equation}<br>$$<br>其中T是函数其作用是：</p><ol><li>假设输入的是$W_i$</li><li>对这一列循环左移一位（列移位），对于$W_i$这一列，就是上移一位</li><li>用S盒对2之后的$W_i$进行字节替代，规则同加密的字节替代</li><li>与给定的矩阵进行异或，矩阵是[RC[j],0,0,0]轮常量是RC = {01, 02, 04, 08, 10, 20, 40, 80, 1B, 36}.j是该轮轮数</li></ol><p>然后每4列作为一组成为轮密钥</p><h4 id="补充">补充</h4><blockquote><p><strong>1）为什么需要密钥扩展：</strong></p><p>不论密钥长度为多少，我们的明文分组始终为16字节（4字）。上文提到，在轮密钥加部分，我们需要为每一轮提供一个长度为4字的轮密钥。</p><p>对于AES-128（4字密钥），需要迭代10轮，加上第0轮，共需要进行11次轮密钥加，而每一次轮密钥加都需要一个长度为4字的轮密钥，因此所需要的扩展密钥长度为 次字字11次×4字=44字 。</p><p>对于AES-192（6字密钥），需要迭代12轮，加上第0轮，共需要进行13次轮密钥加，所需要的扩展密钥长度为 次字字13次×4字=52字 。</p><p>对于AES-256（8字密钥），需要迭代14轮，加上第0轮，共需要进行15次轮密钥加，所需要的扩展密钥长度为 次字字15次×4字=60字 。</p><p>因此我们需要一定的方法用来将密钥扩展到一定的长度。</p></blockquote><blockquote><p><strong>（2）AES-192的密钥扩展方法：</strong></p><p>AES-192的密钥有6个字，其密钥扩展方法与AES-128完全类似。第一个for循环的填充变成了6个字；之后的判断整除条件变为了能否整除6。</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只是伪代码，不能运行</span></span><br><span class="line"><span class="title function_">KeyExpansion</span>(<span class="type">byte</span> <span class="built_in">key</span>[<span class="number">24</span>], word w[<span class="number">52</span>])</span><br><span class="line">&#123;</span><br><span class="line">    word temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)<span class="comment">//第一个for循环，填充w的前6个字</span></span><br><span class="line">        w[i] = &#123;<span class="built_in">key</span>[<span class="number">4</span>*i], <span class="built_in">key</span>[<span class="number">4</span>*i+<span class="number">1</span>], </span><br><span class="line">                <span class="built_in">key</span>[<span class="number">4</span>*i+<span class="number">2</span>], <span class="built_in">key</span>[<span class="number">4</span>*i+<span class="number">3</span>]&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">6</span>; i &lt; <span class="number">52</span>; i++)<span class="comment">//第二个for循环，填充后面的内容</span></span><br><span class="line">    &#123;</span><br><span class="line">        temp = w[i<span class="number">-1</span>];<span class="comment">//保存上一个字</span></span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">6</span> == <span class="number">0</span>)<span class="comment">//如果整除6</span></span><br><span class="line">            temp = <span class="title function_">SubWord</span> (<span class="title function_">RotWord</span> (temp))</span><br><span class="line">                    xor Rcon[i/<span class="number">6</span>];<span class="comment">//对保存的上一个字进行复杂的处理</span></span><br><span class="line">        w[i] = w[i<span class="number">-6</span>] xor temp;<span class="comment">/*将上一个字（处理或没处理过）</span></span><br><span class="line"><span class="comment">                               与6个字之前的字进行异或，得到当前的字*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>（3）AES-256的密钥扩展方法：</strong></p><p>AES-256的密钥长度为8字。其密钥扩展与AES-128也基本相同，只是修改了填充的字数，值得注意的是：AES-256在第二个for循环里添加了判断条件，当i%==4时，要对temp进行一次字代替。</p><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//只是伪代码，不能运行</span></span><br><span class="line"><span class="title function_">KeyExpansion</span>(<span class="type">byte</span> <span class="built_in">key</span>[<span class="number">32</span>], word w[<span class="number">60</span>])</span><br><span class="line">&#123;</span><br><span class="line">    word temp;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)<span class="comment">//第一个for循环，填充w的前8个字</span></span><br><span class="line">        w[i] = &#123;<span class="built_in">key</span>[<span class="number">4</span>*i], <span class="built_in">key</span>[<span class="number">4</span>*i+<span class="number">1</span>], </span><br><span class="line">                <span class="built_in">key</span>[<span class="number">4</span>*i+<span class="number">2</span>], <span class="built_in">key</span>[<span class="number">4</span>*i+<span class="number">3</span>]&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">8</span>; i &lt; <span class="number">60</span>; i++)<span class="comment">//第二个for循环，填充后面的内容</span></span><br><span class="line">    &#123;</span><br><span class="line">        temp = w[i<span class="number">-1</span>];<span class="comment">//保存上一个字</span></span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">8</span> == <span class="number">0</span>)<span class="comment">//如果整除8</span></span><br><span class="line">            temp = <span class="title function_">SubWord</span> (<span class="title function_">RotWord</span> (temp))</span><br><span class="line">                    xor Rcon[i/<span class="number">8</span>];<span class="comment">//对保存的上一个字进行复杂的处理</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(i % <span class="number">8</span> == <span class="number">4</span>)<span class="comment">//如果除8余4</span></span><br><span class="line">            temp = <span class="title function_">SubWord</span> (temp);</span><br><span class="line">        w[i] = w[i<span class="number">-8</span>] xor temp;<span class="comment">/*将上一个字（处理或没处理过）</span></span><br><span class="line"><span class="comment">                               与6个字之前的字进行异或，得到当前的字*/</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://xn--zhuanlan-u11qx77cqzag36q.zhihu.com/p/360393988">此段摘自zhuanlan.zhihu.com/p/360393988</a></p></blockquote><h3 id="总过程">总过程</h3><p>加密时，执行：</p><ul><li>轮密钥加</li><li>（字节替代+行位移+列混淆+轮密钥加）*9</li><li>字节替代+行位移+轮密钥加</li></ul><p>以上过程是对于16字节密钥的</p>]]></content>
    
    
    <summary type="html">AES的算法解释</summary>
    
    
    
    <category term="密码学" scheme="https://www.pri87.vip/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    
    <category term="密码" scheme="https://www.pri87.vip/tags/%E5%AF%86%E7%A0%81/"/>
    
    <category term="加密方法" scheme="https://www.pri87.vip/tags/%E5%8A%A0%E5%AF%86%E6%96%B9%E6%B3%95/"/>
    
    <category term="对称加密" scheme="https://www.pri87.vip/tags/%E5%AF%B9%E7%A7%B0%E5%8A%A0%E5%AF%86/"/>
    
    <category term="流加密" scheme="https://www.pri87.vip/tags/%E6%B5%81%E5%8A%A0%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>CTF-VM(2)</title>
    <link href="https://www.pri87.vip/posts/b22e135.html"/>
    <id>https://www.pri87.vip/posts/b22e135.html</id>
    <published>2024-03-08T18:18:12.000Z</published>
    <updated>2024-03-09T04:08:47.149Z</updated>
    
    <content type="html"><![CDATA[<p>尝试对虚拟机保护有更深的理解。</p><p>由于之前做vm题感觉完全不会，所以找了几道题试一试</p><p>由之前的vm简要介绍看到vm题总是给出opcode的运行方式，然后通过opcode还原出运行逻辑，最后求出flag</p><h2 id="EzADVM">EzADVM</h2><p>这个是个安卓vm，jadx打开，然后打开main_activity,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">CheckClick</span><span class="params">(View a)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> <span class="built_in">this</span>.binding.sampleText;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">flagText</span> <span class="operator">=</span> <span class="built_in">this</span>.binding.flagtext;</span><br><span class="line">        <span class="type">String</span> <span class="variable">flagstring</span> <span class="operator">=</span> flagText.getText().toString();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;Right!&quot;</span>.equals(stringFromJNI(flagstring))) &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;Right!&quot;</span>);</span><br><span class="line">            tv.setTextColor(-<span class="number">16711936</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>看到有stringFromJNI(flagstring)，去找函数原型，没找到，应该在库里。</p><p>用apktool反编译出源代码。打开so文件</p><p>重点是这些：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">now_num = <span class="number">0</span>;</span><br><span class="line">  i = <span class="number">1</span>;</span><br><span class="line">  used_char = _JNIEnv::GetStringUTFChars(in, a3, <span class="number">0LL</span>);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( !i++ )</span><br><span class="line">      &#123;</span><br><span class="line">LABEL_29:</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span>::basic_string&lt;decltype(nullptr)&gt;(v14, <span class="string">&quot;Error!&quot;</span>);</span><br><span class="line">        v7 = (<span class="type">const</span> <span class="type">char</span> *)sub_20F50(v14);</span><br><span class="line">        v13 = _JNIEnv::NewStringUTF(in, v7);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>(v14);</span><br><span class="line">        <span class="keyword">return</span> v13;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ( code[i] != <span class="number">0x21</span> )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      __strcpy_chk(input, used_char, <span class="number">1024LL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( code[i] == <span class="number">0xFF</span> )</span><br><span class="line">      <span class="keyword">goto</span> LABEL_29;</span><br><span class="line">    <span class="keyword">if</span> ( code[i] == <span class="number">0x88</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">switch</span> ( code[i] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xA1</span>u:</span><br><span class="line">        s[now_num - <span class="number">1</span>] = or_not_num &amp; or_num;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xC3</span>u:</span><br><span class="line">        or_num = b1 | b2;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xB2</span>u:</span><br><span class="line">        not_1 = ~b1;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xE5</span>u:</span><br><span class="line">        not_2 = ~b2;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xF1</span>u:</span><br><span class="line">        b1 = input[now_num];</span><br><span class="line">        b2 = input[++now_num];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xD4</span>u:</span><br><span class="line">        or_not_num = not_2 | not_1;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xBF</span>u:</span><br><span class="line">        i_form = now_num++;</span><br><span class="line">        save[<span class="number">0</span>] = s[i_form];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x99</span>u:</span><br><span class="line">        now_num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xBB</span>u:</span><br><span class="line">        s[now_num - <span class="number">1</span>] = now_num + save[<span class="number">0</span>] - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">memcmp</span>(&amp;last, s, <span class="number">0x20</span>uLL) )</span><br></pre></td></tr></table></figure><p>输入用来初始化input了，所以相当于是用指令码对input加密，最后得到last</p><p>以及一开始有一个循环只有当code[i]==0先1时才会执行初始化，所以只需要匹配合理的指令即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">opcode = [<span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, </span><br><span class="line">        <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, </span><br><span class="line">        <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, </span><br><span class="line">        <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, </span><br><span class="line">        <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, </span><br><span class="line">        <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, </span><br><span class="line">        <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, </span><br><span class="line">        <span class="number">0x6C</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, </span><br><span class="line">        <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, </span><br><span class="line">        <span class="number">0x75</span>, <span class="number">0x6C</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x53</span>, </span><br><span class="line">        <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, </span><br><span class="line">        <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, </span><br><span class="line">        <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, </span><br><span class="line">        <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x99</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, </span><br><span class="line">        <span class="number">0x6C</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0x99</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x53</span>, </span><br><span class="line">        <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x88</span>, <span class="number">0xFF</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, </span><br><span class="line">        <span class="number">0x44</span>, <span class="number">0x00</span>, <span class="number">0x00</span>]</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> code <span class="keyword">in</span> opcode:</span><br><span class="line">    <span class="keyword">match</span> code:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xa1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;last[now_num - 1] = or_not_num &amp; or_num&quot;</span> )</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xc3</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;or_num = b1 | b2&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xb2</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;not_1 = ~b1&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xe5</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;not_2 = ~b2&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xf1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;b1 = input[now_num]&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;now_num += 1&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;b2 = input[now_num]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xd4</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;or_not_num = not_2 | not_1&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xbf</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;save = last[now_num]&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;now_num+=1&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0x99</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;now_num = 0&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xbb</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;last[now_num-1] = now_num + save - 1&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大致是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line">last = [<span class="number">0</span>]*<span class="number">100</span></span><br><span class="line">now_num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line"></span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">now_num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">now_num = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>然后化简逆向：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line">last = [<span class="number">0x1D</span>, <span class="number">0x01</span>, <span class="number">0x12</span>, <span class="number">0x1A</span>, <span class="number">0x16</span>, <span class="number">0x42</span>, <span class="number">0x39</span>, <span class="number">0x0F</span>, </span><br><span class="line">        <span class="number">0x38</span>, <span class="number">0x09</span>, <span class="number">0x13</span>, <span class="number">0x31</span>, <span class="number">0x28</span>, <span class="number">0x38</span>, <span class="number">0x67</span>, <span class="number">0x6E</span>, </span><br><span class="line">        <span class="number">0x1B</span>, <span class="number">0x61</span>, <span class="number">0x7C</span>, <span class="number">0x24</span>, <span class="number">0x1F</span>, <span class="number">0x47</span>, <span class="number">0x44</span>, <span class="number">0x81</span>, </span><br><span class="line">        <span class="number">0x6A</span>, <span class="number">0x2C</span>, <span class="number">0x6D</span>, <span class="number">0x2B</span>, <span class="number">0x2C</span>, <span class="number">0x2D</span>, <span class="number">0x6A</span>, <span class="number">0x9C</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># last = [0]*100</span></span><br><span class="line"><span class="comment"># now_num = 0</span></span><br><span class="line"><span class="comment"># for i in range(32):</span></span><br><span class="line"><span class="comment">#     b1 = input[now_num]</span></span><br><span class="line"><span class="comment">#     now_num += 1</span></span><br><span class="line"><span class="comment">#     b2 = input[now_num]</span></span><br><span class="line"><span class="comment">#     or_num = b1 | b2</span></span><br><span class="line"><span class="comment">#     not_1 = ~b1</span></span><br><span class="line"><span class="comment">#     not_2 = ~b2</span></span><br><span class="line"><span class="comment">#     or_not_num = not_2 | not_1</span></span><br><span class="line"><span class="comment">#     last[now_num - 1] = or_not_num &amp; or_num</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># now_num = 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in range(32):</span></span><br><span class="line"><span class="comment">#     save = last[now_num]</span></span><br><span class="line"><span class="comment">#     now_num+=1</span></span><br><span class="line"><span class="comment">#     last[now_num-1] = now_num + save - 1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">    last[i]-=i</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">    last[i]^=last[i+<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">pl(last)</span><br><span class="line"><span class="comment">#NSSCTF&#123;H@ppy_Ch1ne5_NEwY3ar!1!1&#125;</span></span><br></pre></td></tr></table></figure><p>小结：这个题和之前遇到的jvm那道题一样，都要解析指令，还原流程</p><h2 id="羊城杯2021-babyvm">羊城杯2021 babyvm</h2><p>这个题一样，只是在前面加了一个动态调试</p><p>指令码大概是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> __cdecl <span class="title function_">sub_80487A8</span><span class="params">(_DWORD *reg)</span></span><br><span class="line">&#123;</span><br><span class="line">  _BYTE *v1; <span class="comment">// [esp+18h] [ebp-20h]</span></span><br><span class="line"><span class="type">int</span> reg[<span class="number">999</span>];</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">113</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">6</span>] -= <span class="number">4</span>;</span><br><span class="line">      *(_DWORD *)reg[<span class="number">6</span>] = *(_DWORD *)(reg[<span class="number">8</span>] + <span class="number">1</span>);</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">65</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] += reg[<span class="number">2</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">66</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] -= reg[<span class="number">4</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">67</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] *= reg[<span class="number">3</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">55</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] = reg[<span class="number">5</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">56</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">57</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] ^= reg[<span class="number">5</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">53</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">5</span>] = reg[<span class="number">1</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xF7</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">9</span>] += reg[<span class="number">1</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">68</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] /= reg[<span class="number">5</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0x80</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[sub_804875F(reg, <span class="number">1</span>)] = *(_DWORD *)(reg[<span class="number">8</span>] + <span class="number">2</span>);</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">119</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">83</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">putchar</span>(*(<span class="type">char</span> *)reg[<span class="number">3</span>]);</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">34</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] &gt;&gt;= reg[<span class="number">2</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">35</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0x99</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">118</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">3</span>] = *(_DWORD *)reg[<span class="number">6</span>];</span><br><span class="line">      *(_DWORD *)reg[<span class="number">6</span>] = <span class="number">0</span>;</span><br><span class="line">      reg[<span class="number">6</span>] += <span class="number">4</span>;</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">84</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v1 = (_BYTE *)reg[<span class="number">3</span>];</span><br><span class="line">      *v1 = getchar();</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">48</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] |= reg[<span class="number">2</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">49</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] &amp;= reg[<span class="number">2</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">50</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">3</span>] = *(<span class="type">unsigned</span> __int8 *)(reg[<span class="number">8</span>] + <span class="number">1</span>);</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">9</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] = <span class="number">1877735783</span>;</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">16</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">9</span>] = reg[<span class="number">1</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">51</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">4</span>] = reg[<span class="number">1</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">52</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">2</span>] = *(<span class="type">unsigned</span> __int8 *)(reg[<span class="number">8</span>] + <span class="number">1</span>);</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xFE</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] = reg[<span class="number">9</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">17</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%x\n&quot;</span>, reg[<span class="number">1</span>]);</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xA0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( reg[<span class="number">1</span>] != <span class="number">1877735783</span> )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xA1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      read(<span class="number">0</span>, s, <span class="number">0x2C</span>u);</span><br><span class="line">      <span class="keyword">if</span> ( <span class="built_in">strlen</span>(s) != <span class="number">44</span> )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xB1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">9</span>] = fog[<span class="number">0</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xB2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">9</span>] = fog[<span class="number">1</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xA4</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      fog[*(<span class="type">unsigned</span> __int8 *)(reg[<span class="number">8</span>] + <span class="number">1</span>)] = reg[<span class="number">1</span>];</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xB3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">9</span>] = fog[<span class="number">2</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xB4</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">9</span>] = fog[<span class="number">3</span>];</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xC1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      reg[<span class="number">1</span>] = (<span class="type">unsigned</span> __int8)s[*(<span class="type">unsigned</span> __int8 *)(reg[<span class="number">8</span>] + <span class="number">1</span>)];</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xC7</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( exit_door[<span class="number">0</span>] != reg[<span class="number">1</span>] )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xC8</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( exit_door[<span class="number">1</span>] != reg[<span class="number">1</span>] )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      ++reg[<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( *(_BYTE *)reg[<span class="number">8</span>] == <span class="number">0xC2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( (<span class="type">unsigned</span> __int8)*(_DWORD *)(reg[<span class="number">8</span>] + <span class="number">1</span>) != reg[<span class="number">1</span>] )</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      reg[<span class="number">8</span>] += <span class="number">5</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后转换写出来就好</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line">flagafter = []</span><br><span class="line">fog = [<span class="number">0x0000007B</span>, <span class="number">0x0000002F</span>, <span class="number">0x00000037</span>, <span class="number">0x000000E8</span>]</span><br><span class="line"></span><br><span class="line">exit_door = [<span class="number">0xCF1304DC</span>, <span class="number">0x283B8E84</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">opcode = [<span class="number">0xA1</span>, <span class="number">0xC1</span>, <span class="number">0x00</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4A</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x01</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x02</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xDD</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x03</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x04</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x1B</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x05</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x89</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x06</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x07</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x54</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x08</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x09</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4E</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0A</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x55</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0B</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x56</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0C</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x8E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0D</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x49</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0E</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x0E</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x0F</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4B</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x10</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x06</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x11</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x54</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x12</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x1A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x13</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x42</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x14</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x53</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x15</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x1F</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x16</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x52</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x17</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xDB</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x18</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x19</span>, <span class="number">0xB4</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0xD9</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1A</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1B</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x55</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1C</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x19</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1D</span>, <span class="number">0xB3</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1E</span>, <span class="number">0xB1</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x4B</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x1F</span>, <span class="number">0xB2</span>, <span class="number">0x77</span>, <span class="number">0xC2</span>, <span class="number">0x1E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0x20</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x10</span>, <span class="number">0xC1</span>, <span class="number">0x21</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x22</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xFE</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0xF1</span>, <span class="number">0x98</span>, <span class="number">0x31</span>, <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x20</span>, <span class="number">0xB9</span>, <span class="number">0xE4</span>, <span class="number">0x35</span>, <span class="number">0x31</span>, <span class="number">0x77</span>, <span class="number">0x10</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x12</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x77</span>, <span class="number">0xA0</span>, <span class="number">0xC1</span>, <span class="number">0x24</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x10</span>, <span class="number">0xC1</span>, <span class="number">0x25</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x26</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x27</span>, <span class="number">0xF7</span>, <span class="number">0xFE</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x43</span>, <span class="number">0x33</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x10</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x43</span>, <span class="number">0x33</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0xC7</span>, <span class="number">0xC1</span>, <span class="number">0x28</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x10</span>, <span class="number">0xC1</span>, <span class="number">0x29</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x2A</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0xF7</span>, <span class="number">0xC1</span>, <span class="number">0x2B</span>, <span class="number">0xF7</span>, <span class="number">0xFE</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x43</span>, <span class="number">0x33</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0x10</span>, <span class="number">0x32</span>, <span class="number">0x20</span>, <span class="number">0x43</span>, <span class="number">0x33</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x11</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x22</span>, <span class="number">0x35</span>, <span class="number">0x37</span>, <span class="number">0x38</span>, <span class="number">0x77</span>, <span class="number">0x80</span>, <span class="number">0x02</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x23</span>, <span class="number">0x77</span>, <span class="number">0x38</span>, <span class="number">0x39</span>, <span class="number">0xC8</span>, <span class="number">0x99</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">print_asm</span>(<span class="params">reg</span>):<span class="comment"># 这里写成python语法方便爆破</span></span><br><span class="line">    now = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        opcode = reg[now]</span><br><span class="line">        <span class="keyword">if</span> opcode == <span class="number">113</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;push <span class="subst">&#123;reg[now+<span class="number">1</span>]&#125;</span>,<span class="subst">&#123;reg[now+<span class="number">2</span>]&#125;</span>,<span class="subst">&#123;reg[now+<span class="number">3</span>]&#125;</span>,<span class="subst">&#123;reg[now+<span class="number">4</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            now += <span class="number">5</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">65</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1+=reg2&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">66</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1-=reg4&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">67</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1*=reg3&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">55</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1=reg5&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">56</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1^=reg4&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">57</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1^=reg5&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">53</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg5=reg1&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xF7</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg9+=reg1&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">68</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1/=reg5&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x80</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;reg<span class="subst">&#123;reg[now+<span class="number">1</span>]&#125;</span>= <span class="subst">&#123;<span class="built_in">int</span>.from_bytes(<span class="built_in">bytes</span>(reg[now + <span class="number">2</span>:now + <span class="number">6</span>]), <span class="string">&#x27;little&#x27;</span>)&#125;</span>&quot;</span>)</span><br><span class="line">            now += <span class="number">6</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x77</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1^=reg9&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x53</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;pop [reg3]&quot;</span>)</span><br><span class="line">            now += <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x22</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1&gt;&gt;=reg2&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x23</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1&lt;&lt;=reg2&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x99</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x76</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;r3 = [r6]&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;[r6] = 0&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;r6 += 4&quot;</span>)</span><br><span class="line">            now += <span class="number">5</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x54</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;read [reg3]&quot;</span>)</span><br><span class="line">            now += <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x30</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1|=reg2&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x31</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1&amp;=reg2&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x32</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;r3 = <span class="subst">&#123;reg[now+<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            now += <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">9</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1=1877735783&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x10</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg9=reg1&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x33</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg4=reg1&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x34</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;reg2=<span class="subst">&#123;reg[now+<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            now += <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xFE</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg1=reg9&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0x11</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;printf &#x27;%x\\n&#x27;, reg1&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xA0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;cmp reg1=1877735783&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;jne exit&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xA1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;read 0, s, 0x2Cu&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;cmp strlen(s), 44&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;jne exit&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xB1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;reg9=<span class="subst">&#123;fog[<span class="number">0</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xB2</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;reg9=<span class="subst">&#123;fog[<span class="number">1</span>]&#125;</span>&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xA4</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;fog[<span class="subst">&#123;now&#125;</span>]=reg1&quot;</span>)</span><br><span class="line">            now += <span class="number">4</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xB3</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg9=fog[2]&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xB4</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;reg9=fog[3]&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xC1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;reg1=s[<span class="subst">&#123;reg[now+<span class="number">1</span>]&#125;</span>]&quot;</span>)</span><br><span class="line">            now += <span class="number">2</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xC7</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;cmp <span class="subst">&#123;exit_door[<span class="number">0</span>]&#125;</span>, reg1&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;jne exit&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xC8</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&quot;cmp <span class="subst">&#123;exit_door[<span class="number">1</span>]&#125;</span>, reg1&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;jne exit&quot;</span>)</span><br><span class="line">            now += <span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> opcode == <span class="number">0xC2</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;exit if now!=r1&quot;</span>)</span><br><span class="line">            now += <span class="number">5</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">print_asm(opcode)</span><br></pre></td></tr></table></figure><p>这个变量没有命好名。。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br></pre></td><td class="code"><pre><span class="line">read 0, s, 0x2Cu</span><br><span class="line">cmp strlen(s), 44</span><br><span class="line">jne exit</span><br><span class="line">reg1=s[0]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 74!=r1</span><br><span class="line">reg1=s[1]</span><br><span class="line">reg9=47</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 25!=r1</span><br><span class="line">reg1=s[2]</span><br><span class="line">reg9=fog[3]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 221!=r1</span><br><span class="line">reg1=s[3]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 15!=r1</span><br><span class="line">reg1=s[4]</span><br><span class="line">reg9=47</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 27!=r1</span><br><span class="line">reg1=s[5]</span><br><span class="line">reg9=fog[3]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 137!=r1</span><br><span class="line">reg1=s[6]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 25!=r1</span><br><span class="line">reg1=s[7]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 84!=r1</span><br><span class="line">reg1=s[8]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 79!=r1</span><br><span class="line">reg1=s[9]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 78!=r1</span><br><span class="line">reg1=s[10]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 85!=r1</span><br><span class="line">reg1=s[11]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 86!=r1</span><br><span class="line">reg1=s[12]</span><br><span class="line">reg9=fog[3]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 142!=r1</span><br><span class="line">reg1=s[13]</span><br><span class="line">reg9=47</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 73!=r1</span><br><span class="line">reg1=s[14]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 14!=r1</span><br><span class="line">reg1=s[15]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 75!=r1</span><br><span class="line">reg1=s[16]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 6!=r1</span><br><span class="line">reg1=s[17]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 84!=r1</span><br><span class="line">reg1=s[18]</span><br><span class="line">reg9=47</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 26!=r1</span><br><span class="line">reg1=s[19]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 66!=r1</span><br><span class="line">reg1=s[20]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 83!=r1</span><br><span class="line">reg1=s[21]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 31!=r1</span><br><span class="line">reg1=s[22]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 82!=r1</span><br><span class="line">reg1=s[23]</span><br><span class="line">reg9=fog[3]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 219!=r1</span><br><span class="line">reg1=s[24]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 25!=r1</span><br><span class="line">reg1=s[25]</span><br><span class="line">reg9=fog[3]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 217!=r1</span><br><span class="line">reg1=s[26]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 25!=r1</span><br><span class="line">reg1=s[27]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 85!=r1</span><br><span class="line">reg1=s[28]</span><br><span class="line">reg9=47</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 25!=r1</span><br><span class="line">reg1=s[29]</span><br><span class="line">reg9=fog[2]</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 0!=r1</span><br><span class="line">reg1=s[30]</span><br><span class="line">reg9=123</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 75!=r1</span><br><span class="line">reg1=s[31]</span><br><span class="line">reg9=47</span><br><span class="line">reg1^=reg9</span><br><span class="line">exit if 30!=r1</span><br><span class="line">reg1=s[32]</span><br><span class="line">reg2= 24</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9=reg1</span><br><span class="line">reg1=s[33]</span><br><span class="line">reg2= 16</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=s[34]</span><br><span class="line">reg2= 8</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=s[35]</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=reg9</span><br><span class="line">reg2= 5</span><br><span class="line">reg1&gt;&gt;=reg2</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg9=reg1</span><br><span class="line">reg2= 7</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg2= 2565961507</span><br><span class="line">reg1&amp;=reg2</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg9=reg1</span><br><span class="line">reg2= 24</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg2= 904182048</span><br><span class="line">reg1&amp;=reg2</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg9=reg1</span><br><span class="line">reg2= 18</span><br><span class="line">reg1&gt;&gt;=reg2</span><br><span class="line">reg1^=reg9</span><br><span class="line">cmp reg1=1877735783</span><br><span class="line">jne exit</span><br><span class="line">reg1=s[36]</span><br><span class="line">reg2= 24</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9=reg1</span><br><span class="line">reg1=s[37]</span><br><span class="line">reg2= 16</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=s[38]</span><br><span class="line">reg2= 8</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=s[39]</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=reg9</span><br><span class="line">r3 = 32</span><br><span class="line">reg1*=reg3</span><br><span class="line">reg4=reg1</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg2= 17</span><br><span class="line">reg1&gt;&gt;=reg2</span><br><span class="line">reg5=reg1</span><br><span class="line">reg1=reg5</span><br><span class="line">reg1^=reg4</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg2= 13</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg1^=reg4</span><br><span class="line">reg1^=reg5</span><br><span class="line">reg9=reg1</span><br><span class="line">r3 = 32</span><br><span class="line">reg1*=reg3</span><br><span class="line">reg4=reg1</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg2= 17</span><br><span class="line">reg1&gt;&gt;=reg2</span><br><span class="line">reg5=reg1</span><br><span class="line">reg1=reg5</span><br><span class="line">reg1^=reg4</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg2= 13</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg1^=reg4</span><br><span class="line">reg1^=reg5</span><br><span class="line">cmp 3474130140, reg1</span><br><span class="line">jne exit</span><br><span class="line">reg1=s[40]</span><br><span class="line">reg2= 24</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9=reg1</span><br><span class="line">reg1=s[41]</span><br><span class="line">reg2= 16</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=s[42]</span><br><span class="line">reg2= 8</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=s[43]</span><br><span class="line">reg9+=reg1</span><br><span class="line">reg1=reg9</span><br><span class="line">r3 = 32</span><br><span class="line">reg1*=reg3</span><br><span class="line">reg4=reg1</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg2= 17</span><br><span class="line">reg1&gt;&gt;=reg2</span><br><span class="line">reg5=reg1</span><br><span class="line">reg1=reg5</span><br><span class="line">reg1^=reg4</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg2= 13</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg1^=reg4</span><br><span class="line">reg1^=reg5</span><br><span class="line">reg9=reg1</span><br><span class="line">r3 = 32</span><br><span class="line">reg1*=reg3</span><br><span class="line">reg4=reg1</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg2= 17</span><br><span class="line">reg1&gt;&gt;=reg2</span><br><span class="line">reg5=reg1</span><br><span class="line">reg1=reg5</span><br><span class="line">reg1^=reg4</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg2= 13</span><br><span class="line">reg1&lt;&lt;=reg2</span><br><span class="line">reg1^=reg9</span><br><span class="line">reg1^=reg4</span><br><span class="line">reg1^=reg5</span><br><span class="line">cmp 674991748, reg1</span><br><span class="line">jne exit</span><br></pre></td></tr></table></figure><p>前面异或直接给ai破</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">fog = [<span class="number">0x0000007B</span>, <span class="number">0x0000002F</span>, <span class="number">0x00000037</span>, <span class="number">0x000000E8</span>]</span><br><span class="line">s = [<span class="literal">None</span>] * <span class="number">32</span>  <span class="comment"># 创建一个长度为 32 的列表来存储 s 的值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 对于每个 i，x 和 y 的值</span></span><br><span class="line"><span class="keyword">for</span> i, x, y <span class="keyword">in</span> [</span><br><span class="line">    (<span class="number">0</span>, fog[<span class="number">0</span>], <span class="number">74</span>), </span><br><span class="line">    (<span class="number">1</span>, fog[<span class="number">1</span>], <span class="number">25</span>), </span><br><span class="line">    (<span class="number">2</span>, fog[<span class="number">3</span>], <span class="number">221</span>), </span><br><span class="line">    (<span class="number">3</span>, fog[<span class="number">2</span>], <span class="number">15</span>), </span><br><span class="line">    (<span class="number">4</span>, fog[<span class="number">1</span>], <span class="number">27</span>), </span><br><span class="line">    (<span class="number">5</span>, fog[<span class="number">3</span>], <span class="number">137</span>), </span><br><span class="line">    (<span class="number">6</span>, fog[<span class="number">0</span>], <span class="number">25</span>), </span><br><span class="line">    (<span class="number">7</span>, fog[<span class="number">2</span>], <span class="number">84</span>), </span><br><span class="line">    (<span class="number">8</span>, fog[<span class="number">0</span>], <span class="number">79</span>), </span><br><span class="line">    (<span class="number">9</span>, fog[<span class="number">0</span>], <span class="number">78</span>), </span><br><span class="line">    (<span class="number">10</span>, fog[<span class="number">2</span>], <span class="number">85</span>), </span><br><span class="line">    (<span class="number">11</span>, fog[<span class="number">2</span>], <span class="number">86</span>), </span><br><span class="line">    (<span class="number">12</span>, fog[<span class="number">3</span>], <span class="number">142</span>), </span><br><span class="line">    (<span class="number">13</span>, fog[<span class="number">1</span>], <span class="number">73</span>), </span><br><span class="line">    (<span class="number">14</span>, fog[<span class="number">2</span>], <span class="number">14</span>), </span><br><span class="line">    (<span class="number">15</span>, fog[<span class="number">0</span>], <span class="number">75</span>), </span><br><span class="line">    (<span class="number">16</span>, fog[<span class="number">2</span>], <span class="number">6</span>), </span><br><span class="line">    (<span class="number">17</span>, fog[<span class="number">2</span>], <span class="number">84</span>), </span><br><span class="line">    (<span class="number">18</span>, fog[<span class="number">1</span>], <span class="number">26</span>), </span><br><span class="line">    (<span class="number">19</span>, fog[<span class="number">0</span>], <span class="number">66</span>), </span><br><span class="line">    (<span class="number">20</span>, fog[<span class="number">2</span>], <span class="number">83</span>), </span><br><span class="line">    (<span class="number">21</span>, fog[<span class="number">0</span>], <span class="number">31</span>), </span><br><span class="line">    (<span class="number">22</span>, fog[<span class="number">2</span>], <span class="number">82</span>), </span><br><span class="line">    (<span class="number">23</span>, fog[<span class="number">3</span>], <span class="number">219</span>), </span><br><span class="line">    (<span class="number">24</span>, fog[<span class="number">0</span>], <span class="number">25</span>), </span><br><span class="line">    (<span class="number">25</span>, fog[<span class="number">3</span>], <span class="number">217</span>), </span><br><span class="line">    (<span class="number">26</span>, fog[<span class="number">0</span>], <span class="number">25</span>), </span><br><span class="line">    (<span class="number">27</span>, fog[<span class="number">2</span>], <span class="number">85</span>), </span><br><span class="line">    (<span class="number">28</span>, fog[<span class="number">1</span>], <span class="number">25</span>), </span><br><span class="line">    (<span class="number">29</span>, fog[<span class="number">2</span>], <span class="number">0</span>), </span><br><span class="line">    (<span class="number">30</span>, fog[<span class="number">0</span>], <span class="number">75</span>), </span><br><span class="line">    (<span class="number">31</span>, fog[<span class="number">1</span>], <span class="number">30</span>)</span><br><span class="line">]:  </span><br><span class="line"></span><br><span class="line">    s[i] = <span class="built_in">chr</span>(y ^ x)</span><br><span class="line"><span class="built_in">print</span>(s)</span><br><span class="line"></span><br><span class="line"><span class="comment">#16584abc45baff901c59dde3b1bb6701</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">characters = string.ascii_letters + string.digits + string.punctuation + <span class="string">&#x27; &#x27;</span></span><br><span class="line">combinations = itertools.product(characters, repeat=<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">对每个组合执行给定的操作</span><br><span class="line"><span class="keyword">for</span> combination <span class="keyword">in</span> combinations:</span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span>.join(combination)</span><br><span class="line">    reg = [<span class="number">0</span>] * <span class="number">10</span>  </span><br><span class="line">    reg[<span class="number">9</span>] = <span class="built_in">int</span>.from_bytes(s.encode(), <span class="string">&#x27;big&#x27;</span>)  </span><br><span class="line">    <span class="comment"># 将字符串转换为整数,这里用big，存储就是正序，不然是小端序转换</span></span><br><span class="line"></span><br><span class="line">    reg[<span class="number">1</span>] = reg[<span class="number">9</span>]</span><br><span class="line">    reg[<span class="number">2</span>] = <span class="number">5</span></span><br><span class="line">    reg[<span class="number">1</span>] &gt;&gt;= reg[<span class="number">2</span>]</span><br><span class="line">    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">    reg[<span class="number">9</span>] = reg[<span class="number">1</span>]</span><br><span class="line">    reg[<span class="number">2</span>] = <span class="number">7</span></span><br><span class="line">    reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    reg[<span class="number">2</span>] = <span class="number">2565961507</span></span><br><span class="line">    reg[<span class="number">1</span>] &amp;= reg[<span class="number">2</span>]</span><br><span class="line">    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">    reg[<span class="number">9</span>] = reg[<span class="number">1</span>]</span><br><span class="line">    reg[<span class="number">2</span>] = <span class="number">24</span></span><br><span class="line">    reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    reg[<span class="number">2</span>] = <span class="number">904182048</span></span><br><span class="line">    reg[<span class="number">1</span>] &amp;= reg[<span class="number">2</span>]</span><br><span class="line">    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">    reg[<span class="number">9</span>] = reg[<span class="number">1</span>]</span><br><span class="line">    reg[<span class="number">2</span>] = <span class="number">18</span></span><br><span class="line">    reg[<span class="number">1</span>] &gt;&gt;= reg[<span class="number">2</span>]</span><br><span class="line">    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查结果是否等于 1877735783</span></span><br><span class="line">    <span class="keyword">if</span> reg[<span class="number">1</span>] == <span class="number">1877735783</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;找到了满足条件的字符串：<span class="subst">&#123;s&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="comment"># a245</span></span><br></pre></td></tr></table></figure><p>第二部分有与，不可能逆出来，干脆爆破</p><p>后面两次有左移，不好用python，就用c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line"><span class="comment">// 所有可能的字符</span></span><br><span class="line"><span class="type">char</span> characters[] = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!\&quot;#$%&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~ &quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化寄存器</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> reg[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对每一个组合进行检查</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(characters); i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">strlen</span>(characters); j++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="built_in">strlen</span>(characters); k++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="built_in">strlen</span>(characters); l++) &#123;</span><br><span class="line"><span class="type">char</span> s[<span class="number">40</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">s[<span class="number">36</span>] = characters[i];</span><br><span class="line">s[<span class="number">37</span>] = characters[j];</span><br><span class="line">s[<span class="number">38</span>] = characters[k];</span><br><span class="line">s[<span class="number">39</span>] = characters[l];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 执行给定的操作</span></span><br><span class="line">reg[<span class="number">1</span>] = s[<span class="number">36</span>];</span><br><span class="line">reg[<span class="number">2</span>] = <span class="number">24</span>;</span><br><span class="line">reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">reg[<span class="number">9</span>] = reg[<span class="number">1</span>];</span><br><span class="line">reg[<span class="number">1</span>] = s[<span class="number">37</span>];</span><br><span class="line">reg[<span class="number">2</span>] = <span class="number">16</span>;</span><br><span class="line">reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">reg[<span class="number">9</span>] += reg[<span class="number">1</span>];</span><br><span class="line">reg[<span class="number">1</span>] = s[<span class="number">38</span>];</span><br><span class="line">reg[<span class="number">2</span>] = <span class="number">8</span>;</span><br><span class="line">reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">reg[<span class="number">9</span>] += reg[<span class="number">1</span>];</span><br><span class="line">reg[<span class="number">1</span>] = s[<span class="number">39</span>];</span><br><span class="line">reg[<span class="number">9</span>] += reg[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">reg[<span class="number">1</span>] = reg[<span class="number">9</span>];</span><br><span class="line">reg[<span class="number">3</span>] = <span class="number">32</span>;</span><br><span class="line">reg[<span class="number">1</span>] *= reg[<span class="number">3</span>];</span><br><span class="line">reg[<span class="number">4</span>] = reg[<span class="number">1</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">reg[<span class="number">2</span>] = <span class="number">17</span>;</span><br><span class="line">reg[<span class="number">1</span>] &gt;&gt;= reg[<span class="number">2</span>];</span><br><span class="line">reg[<span class="number">5</span>] = reg[<span class="number">1</span>];</span><br><span class="line">reg[<span class="number">1</span>] = reg[<span class="number">5</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">reg[<span class="number">2</span>] = <span class="number">13</span>;</span><br><span class="line">reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">5</span>];</span><br><span class="line">reg[<span class="number">9</span>] = reg[<span class="number">1</span>];</span><br><span class="line">reg[<span class="number">3</span>] = <span class="number">32</span>;</span><br><span class="line">reg[<span class="number">1</span>] *= reg[<span class="number">3</span>];</span><br><span class="line">reg[<span class="number">4</span>] = reg[<span class="number">1</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">reg[<span class="number">2</span>] = <span class="number">17</span>;</span><br><span class="line">reg[<span class="number">1</span>] &gt;&gt;= reg[<span class="number">2</span>];</span><br><span class="line">reg[<span class="number">5</span>] = reg[<span class="number">1</span>];</span><br><span class="line">reg[<span class="number">1</span>] = reg[<span class="number">5</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">reg[<span class="number">2</span>] = <span class="number">13</span>;</span><br><span class="line">reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">reg[<span class="number">1</span>] ^= reg[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 检查结果</span></span><br><span class="line"><span class="keyword">if</span> (reg[<span class="number">1</span>] == <span class="number">3474130140</span>) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Found matching combination: %c%c%c%c\n&quot;</span>, s[<span class="number">36</span>], s[<span class="number">37</span>], s[<span class="number">38</span>], s[<span class="number">39</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;No matching combination found.\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//b06c</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="comment">// 所有可能的字符</span></span><br><span class="line">    <span class="type">char</span> characters[] = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!\&quot;#$%&amp;&#x27;()*+,-./:;&lt;=&gt;?@[\\]^_`&#123;|&#125;~ &quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化寄存器</span></span><br><span class="line">    <span class="type">unsigned</span> <span class="type">int</span> reg[<span class="number">10</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对每一个组合进行检查</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(characters); i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="built_in">strlen</span>(characters); j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="built_in">strlen</span>(characters); k++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> l = <span class="number">0</span>; l &lt; <span class="built_in">strlen</span>(characters); l++) &#123;</span><br><span class="line">                    <span class="type">char</span> s[<span class="number">44</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">                    s[<span class="number">40</span>] = characters[i];</span><br><span class="line">                    s[<span class="number">41</span>] = characters[j];</span><br><span class="line">                    s[<span class="number">42</span>] = characters[k];</span><br><span class="line">                    s[<span class="number">43</span>] = characters[l];</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 执行给定的操作</span></span><br><span class="line">                    reg[<span class="number">1</span>] = s[<span class="number">40</span>];</span><br><span class="line">                    reg[<span class="number">2</span>] = <span class="number">24</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">                    reg[<span class="number">9</span>] = reg[<span class="number">1</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] = s[<span class="number">41</span>];</span><br><span class="line">                    reg[<span class="number">2</span>] = <span class="number">16</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">                    reg[<span class="number">9</span>] += reg[<span class="number">1</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] = s[<span class="number">42</span>];</span><br><span class="line">                    reg[<span class="number">2</span>] = <span class="number">8</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">                    reg[<span class="number">9</span>] += reg[<span class="number">1</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] = s[<span class="number">43</span>];</span><br><span class="line">                    reg[<span class="number">9</span>] += reg[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                    reg[<span class="number">1</span>] = reg[<span class="number">9</span>];</span><br><span class="line">                    reg[<span class="number">3</span>] = <span class="number">32</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] *= reg[<span class="number">3</span>];</span><br><span class="line">                    reg[<span class="number">4</span>] = reg[<span class="number">1</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">                    reg[<span class="number">2</span>] = <span class="number">17</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] &gt;&gt;= reg[<span class="number">2</span>];</span><br><span class="line">                    reg[<span class="number">5</span>] = reg[<span class="number">1</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] = reg[<span class="number">5</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">                    reg[<span class="number">2</span>] = <span class="number">13</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">5</span>];</span><br><span class="line">                    reg[<span class="number">9</span>] = reg[<span class="number">1</span>];</span><br><span class="line">                    reg[<span class="number">3</span>] = <span class="number">32</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] *= reg[<span class="number">3</span>];</span><br><span class="line">                    reg[<span class="number">4</span>] = reg[<span class="number">1</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">                    reg[<span class="number">2</span>] = <span class="number">17</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] &gt;&gt;= reg[<span class="number">2</span>];</span><br><span class="line">                    reg[<span class="number">5</span>] = reg[<span class="number">1</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] = reg[<span class="number">5</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">                    reg[<span class="number">2</span>] = <span class="number">13</span>;</span><br><span class="line">                    reg[<span class="number">1</span>] &lt;&lt;= reg[<span class="number">2</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">9</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">4</span>];</span><br><span class="line">                    reg[<span class="number">1</span>] ^= reg[<span class="number">5</span>];</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// 检查结果</span></span><br><span class="line">                    <span class="keyword">if</span> (reg[<span class="number">1</span>] == <span class="number">674991748</span>) &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;Found matching combination: %c%c%c%c\n&quot;</span>, s[<span class="number">40</span>], s[<span class="number">41</span>], s[<span class="number">42</span>], s[<span class="number">43</span>]);</span><br><span class="line">                        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;No matching combination found.\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//dc23</span></span><br></pre></td></tr></table></figure><p>最后合并一下flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">NSSCTF</span>&#123;<span class="number">16584</span>abc45baff901c59dde3b1bb6701a254b06cdc23&#125;</span><br></pre></td></tr></table></figure><p>这个题最后很明显是不能直接逆向的，那就需要爆破，所以翻译opcode的时候写成python语法或者c语法就会更方便，然后注意一下爆破的时候的大端序和小端序就好了</p><h2 id="羊城杯2023-vm-wo">羊城杯2023 vm_wo</h2><p>这道题是我第一次遇见mac的题</p><p>一开始用ida 8.3打开，但是不能反编译，去网上看wp发现好像都能反编译，于是试了试7.7结果就可以了&gt;_&lt;</p><p>打开之后直接去主函数，直接拿到了last</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="number">0xDF</span>, <span class="number">0xD5</span>, <span class="number">0xF1</span>, <span class="number">0xD1</span>, <span class="number">0xFF</span>, <span class="number">0xDB</span>, <span class="number">0xA1</span>, <span class="number">0xA5</span>, <span class="number">0x89</span>, <span class="number">0xBD</span>, <span class="number">0xE9</span>, <span class="number">0x95</span>, <span class="number">0xB3</span>, <span class="number">0x9D</span>, <span class="number">0xE9</span>, <span class="number">0xB3</span>, <span class="number">0x85</span>, <span class="number">0x99</span>, <span class="number">0x87</span>, <span class="number">0xBF</span>, <span class="number">0xE9</span>, <span class="number">0xB1</span>, <span class="number">0x89</span>, <span class="number">0xE9</span>, <span class="number">0x91</span>, <span class="number">0x89</span>, <span class="number">0x89</span>, <span class="number">0x8F</span>, <span class="number">0xAD</span>]</span><br></pre></td></tr></table></figure><p>在之前进行了myoperate这个函数，应该是encode<br>然后就是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> __fastcall <span class="title function_">myoperate</span><span class="params">(<span class="type">char</span> *flag, <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 i; <span class="comment">// x20</span></span><br><span class="line">  <span class="type">char</span> v4[<span class="number">15</span>]; <span class="comment">// [xsp+8h] [xbp-98h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v5[<span class="number">15</span>]; <span class="comment">// [xsp+18h] [xbp-88h] BYREF</span></span><br><span class="line">  <span class="type">char</span> v6[<span class="number">15</span>]; <span class="comment">// [xsp+28h] [xbp-78h] BYREF</span></span><br><span class="line">  <span class="type">char</span> code[<span class="number">16</span>]; <span class="comment">// [xsp+38h] [xbp-68h] BYREF</span></span><br><span class="line">  __int64 v8; <span class="comment">// [xsp+48h] [xbp-58h]</span></span><br><span class="line"></span><br><span class="line">  LODWORD(i) = len;</span><br><span class="line">  v8 = <span class="number">0x100000CFEEDFA</span>LL;</span><br><span class="line">  dword_100008003 = <span class="number">0xBEEDBEEF</span>;</span><br><span class="line">  <span class="keyword">if</span> ( ptrace(<span class="number">0</span>, <span class="number">0</span>, (<span class="type">caddr_t</span>)<span class="number">1</span>, <span class="number">0</span>) == <span class="number">-1</span> )</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="type">int</span>)i &gt;= <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    i = (<span class="type">unsigned</span> <span class="type">int</span>)i;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">      *(_QWORD *)code = <span class="number">0x20D01011903001A</span>LL;</span><br><span class="line">      *(_QWORD *)&amp;code[<span class="number">7</span>] = <span class="number">0x300010201180702</span>LL;</span><br><span class="line">      code[<span class="number">2</span>] = *flag;</span><br><span class="line">      interpretBytecode(code, <span class="number">15</span>);</span><br><span class="line">      *(_QWORD *)v6 = <span class="number">0x20D02011903001A</span>LL;</span><br><span class="line">      *(_QWORD *)&amp;v6[<span class="number">7</span>] = <span class="number">0x400010201180602</span>LL;</span><br><span class="line">      v6[<span class="number">2</span>] = vm.body[<span class="number">0</span>];</span><br><span class="line">      interpretBytecode(v6, <span class="number">15</span>);</span><br><span class="line">      *(_QWORD *)v5 = <span class="number">0x20D03011903001A</span>LL;</span><br><span class="line">      *(_QWORD *)&amp;v5[<span class="number">7</span>] = <span class="number">0x500010201180502</span>LL;</span><br><span class="line">      v5[<span class="number">2</span>] = vm.body[<span class="number">0</span>];</span><br><span class="line">      interpretBytecode(v5, <span class="number">15</span>);</span><br><span class="line">      *(_QWORD *)v4 = <span class="number">0x20D04011903001A</span>LL;</span><br><span class="line">      *(_QWORD *)&amp;v4[<span class="number">7</span>] = <span class="number">0x600010201180402</span>LL;</span><br><span class="line">      v4[<span class="number">2</span>] = vm.body[<span class="number">0</span>];</span><br><span class="line">      interpretBytecode(v4, <span class="number">15</span>);</span><br><span class="line">      *flag++ = ((<span class="type">unsigned</span> __int8)vm.body[<span class="number">0</span>] &gt;&gt; <span class="number">5</span>) | (<span class="number">8</span> * vm.body[<span class="number">0</span>]);</span><br><span class="line">      --i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( i );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个是opcode生成的位置，注意一共有15位同时第二位被换成了flag的值<br>相当于每轮对一个字符加密<br>所以写解密函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">t = [[<span class="number">0x1a</span>,<span class="number">0x0</span>,<span class="number">0xff</span>,<span class="number">0x19</span>,<span class="number">0x1</span>,<span class="number">0x1</span>,<span class="number">0xd</span>,<span class="number">0x2</span>,<span class="number">0x7</span>,<span class="number">0x18</span>,<span class="number">0x1</span>,<span class="number">0x2</span>,<span class="number">0x1</span>,<span class="number">0x0</span>,<span class="number">0x3</span>],</span><br><span class="line">     [<span class="number">0x1a</span>,<span class="number">0x0</span>,<span class="number">0xff</span>,<span class="number">0x19</span>,<span class="number">0x1</span>,<span class="number">0x2</span>,<span class="number">0xd</span>,<span class="number">0x2</span>,<span class="number">0x6</span>,<span class="number">0x18</span>,<span class="number">0x1</span>,<span class="number">0x2</span>,<span class="number">0x1</span>,<span class="number">0x0</span>,<span class="number">0x4</span>],</span><br><span class="line">     [<span class="number">0x1a</span>,<span class="number">0x0</span>,<span class="number">0xff</span>,<span class="number">0x19</span>,<span class="number">0x1</span>,<span class="number">0x3</span>,<span class="number">0xd</span>,<span class="number">0x2</span>,<span class="number">0x5</span>,<span class="number">0x18</span>,<span class="number">0x1</span>,<span class="number">0x2</span>,<span class="number">0x1</span>,<span class="number">0x0</span>,<span class="number">0x5</span>],</span><br><span class="line">    [ <span class="number">0x1a</span>,<span class="number">0x0</span>,<span class="number">0xff</span>,<span class="number">0x19</span>,<span class="number">0x1</span>,<span class="number">0x4</span>,<span class="number">0xd</span>,<span class="number">0x2</span>,<span class="number">0x4</span>,<span class="number">0x18</span>,<span class="number">0x1</span>,<span class="number">0x2</span>,<span class="number">0x1</span>,<span class="number">0x0</span>,<span class="number">0x6</span>]]</span><br><span class="line"><span class="comment"># 0xff用作标志,表明这里使用了上一次加密后的这一位flag</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> t:</span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> i &lt; <span class="number">15</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            <span class="comment"># this_code = b[i]</span></span><br><span class="line">            code0 = b[i]</span><br><span class="line">            code1 = b[i+<span class="number">1</span>]</span><br><span class="line">            code2 = b[i+<span class="number">2</span>]</span><br><span class="line">            <span class="keyword">if</span> code0 == <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>], s[<span class="subst">&#123;code2&#125;</span>] = s[<span class="subst">&#123;code2&#125;</span>], s[<span class="subst">&#123;code1&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">1</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] ^= s[<span class="subst">&#123;code2&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">2</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] += <span class="subst">&#123;code2&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">3</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] += s[<span class="subst">&#123;code2&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">4</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] -= <span class="subst">&#123;code2&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">5</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] -= s[<span class="subst">&#123;code2&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">6</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] *= <span class="subst">&#123;code2&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">7</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] *= s[<span class="subst">&#123;code2&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">8</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] //= <span class="subst">&#123;code2&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">9</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] //= s[<span class="subst">&#123;code2&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">10</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] -= s[<span class="subst">&#123;code1&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">11</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] -= s[<span class="subst">&#123;code1&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">12</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] = s[<span class="subst">&#123;code1&#125;</span>] &lt;&lt; <span class="subst">&#123;code2&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">13</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] = s[0] &lt;&lt; <span class="subst">&#123;code2&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">14</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] = s[<span class="subst">&#123;code1&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">15</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;print(s[<span class="subst">&#123;code1&#125;</span>])&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">16</span>:</span><br><span class="line">                i -= <span class="number">1</span></span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;i -= 1&quot;</span>)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;print(s[<span class="subst">&#123;i + <span class="number">16</span>&#125;</span>])&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">17</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;i = <span class="subst">&#123;code2&#125;</span> if not s[<span class="subst">&#123;code1&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">18</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;i = <span class="subst">&#123;code2&#125;</span> if s[<span class="subst">&#123;code1&#125;</span>]&quot;</span>)</span><br><span class="line">            <span class="comment"># elif code0 == 19:</span></span><br><span class="line">            <span class="comment">#     # i = code1</span></span><br><span class="line">            <span class="comment"># elif code0 == 20:</span></span><br><span class="line">            <span class="comment">#     # s[code1] = s[code1]</span></span><br><span class="line">            <span class="comment"># elif code0 == 21:</span></span><br><span class="line">            <span class="comment">#     # i -= 1</span></span><br><span class="line">            <span class="comment">#     # s[0] = s[i + 16]</span></span><br><span class="line">            <span class="comment"># elif code0 == 22:</span></span><br><span class="line">            <span class="comment">#     # s[i + 16] = code1</span></span><br><span class="line">            <span class="comment"># elif code0 == 23:</span></span><br><span class="line">            <span class="comment">#     break</span></span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">24</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[0] = byte_100008002 | byte_100008001&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">25</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] = s[0] &gt;&gt; <span class="subst">&#123;code2&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">elif</span> code0 == <span class="number">26</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;s[<span class="subst">&#123;code1&#125;</span>] = <span class="subst">&#123;code2&#125;</span>&quot;</span>)</span><br><span class="line">            i += <span class="number">3</span></span><br><span class="line">            <span class="keyword">if</span> i &gt;= <span class="built_in">len</span>(b):</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">s[<span class="number">0</span>] = flag[i]</span><br><span class="line">s[<span class="number">1</span>] = s[<span class="number">0</span>] &gt;&gt; <span class="number">1</span></span><br><span class="line">s[<span class="number">2</span>] = s[<span class="number">0</span>] &lt;&lt; <span class="number">7</span></span><br><span class="line">s[<span class="number">0</span>] = byte_100008002 | byte_100008001</span><br><span class="line">s[<span class="number">0</span>] ^= s[<span class="number">3</span>]</span><br><span class="line"><span class="comment"># s[0] = 255</span></span><br><span class="line">s[<span class="number">1</span>] = s[<span class="number">0</span>] &gt;&gt; <span class="number">2</span></span><br><span class="line">s[<span class="number">2</span>] = s[<span class="number">0</span>] &lt;&lt; <span class="number">6</span></span><br><span class="line">s[<span class="number">0</span>] = byte_100008002 | byte_100008001</span><br><span class="line">s[<span class="number">0</span>] ^= s[<span class="number">4</span>]</span><br><span class="line"><span class="comment"># s[0] = 255</span></span><br><span class="line">s[<span class="number">1</span>] = s[<span class="number">0</span>] &gt;&gt; <span class="number">3</span></span><br><span class="line">s[<span class="number">2</span>] = s[<span class="number">0</span>] &lt;&lt; <span class="number">5</span></span><br><span class="line">s[<span class="number">0</span>] = byte_100008002 | byte_100008001</span><br><span class="line">s[<span class="number">0</span>] ^= s[<span class="number">5</span>]</span><br><span class="line"><span class="comment"># s[0] = 255</span></span><br><span class="line">s[<span class="number">1</span>] = s[<span class="number">0</span>] &gt;&gt; <span class="number">4</span></span><br><span class="line">s[<span class="number">2</span>] = s[<span class="number">0</span>] &lt;&lt; <span class="number">4</span></span><br><span class="line">s[<span class="number">0</span>] = byte_100008002 | byte_100008001</span><br><span class="line">s[<span class="number">0</span>] ^= s[<span class="number">6</span>]</span><br></pre></td></tr></table></figure><p>但是我不理解的是byte_100008002和byte_100008001的值，不然没法或。。<br>去网上看了wp,看到了它们的dword_100008003和这两个值是一样的<br>（然后才发现那四个值在一起是个数组，前面还有3个寄存器，就是上面代码的s0,s1,s2）<br>就是</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">arr</span> = <span class="number">0</span>xDEEDBEEF.to_bytes(<span class="number">4</span>,<span class="string">&#x27;little&#x27;</span>)</span><br></pre></td></tr></table></figure><p>相当于这个dword是s = [0,0,0xEF,0xBE,0xED,0xDE]放在这四个位置上,因为deadbeef是第四个上面放着<br>写一下解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line">last = [<span class="number">0xDF</span>, <span class="number">0xD5</span>, <span class="number">0xF1</span>, <span class="number">0xD1</span>, <span class="number">0xFF</span>, <span class="number">0xDB</span>, <span class="number">0xA1</span>, <span class="number">0xA5</span>, </span><br><span class="line">        <span class="number">0x89</span>, <span class="number">0xBD</span>, <span class="number">0xE9</span>, <span class="number">0x95</span>, <span class="number">0xB3</span>, <span class="number">0x9D</span>, <span class="number">0xE9</span>, <span class="number">0xB3</span>, </span><br><span class="line">        <span class="number">0x85</span>, <span class="number">0x99</span>, <span class="number">0x87</span>, <span class="number">0xBF</span>, <span class="number">0xE9</span>, <span class="number">0xB1</span>, <span class="number">0x89</span>, <span class="number">0xE9</span>, </span><br><span class="line">        <span class="number">0x91</span>, <span class="number">0x89</span>, <span class="number">0x89</span>, <span class="number">0x8F</span>, <span class="number">0xAD</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">back</span>(<span class="params">k</span>):</span><br><span class="line">    q = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(k)):</span><br><span class="line">        <span class="keyword">for</span> s <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">128</span>):</span><br><span class="line">            t = (s &gt;&gt; <span class="number">1</span> | (s &lt;&lt; <span class="number">7</span>)&amp;<span class="number">0xff</span>)^<span class="number">0xef</span></span><br><span class="line">            t = (t &gt;&gt; <span class="number">2</span> | (t &lt;&lt; <span class="number">6</span>)&amp;<span class="number">0xff</span>)^<span class="number">0xbe</span></span><br><span class="line">            t = (t &gt;&gt; <span class="number">3</span> | (t &lt;&lt; <span class="number">5</span>)&amp;<span class="number">0xff</span>)^<span class="number">0xed</span></span><br><span class="line">            t = (t &gt;&gt; <span class="number">4</span> | (t &lt;&lt; <span class="number">4</span>)&amp;<span class="number">0xff</span>)^<span class="number">0xde</span></span><br><span class="line">            t = (t &gt;&gt; <span class="number">5</span> | (t &lt;&lt; <span class="number">3</span>)&amp;<span class="number">0xff</span>)</span><br><span class="line">            <span class="keyword">if</span> (t == k[i]):</span><br><span class="line">                q.append(s)</span><br><span class="line">    <span class="keyword">return</span> q</span><br><span class="line"></span><br><span class="line">pl(back(last))</span><br></pre></td></tr></table></figure><p>?为什么出不来，好好好，不是deadbeef是beedbeef是吧,6,改好之后</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">DASCTF</span><span class="template-variable">&#123;you_are_right_so_cool&#125;</span></span><br></pre></td></tr></table></figure><hr><p>做完这几道题，感觉vm主要考把opcode转汇编，再把汇编转可读代码的静态分析能力，这里要分析出reg，stack的实现是哪些代码，如果能拿到opcode，就能分析出其中可能不用的case，省去一些时间</p><p>而且一般是用单字节加密，所以后面可以爆破答案，</p><p>如果用python写脚本，要注意左移时要限定范围不然会得不到正确结果</p><p>最后在第三道题，ida版本能直接影响到反编译的结果，最后用7.5版本才能正确反编译出来</p>]]></content>
    
    
    <summary type="html">上次介绍完之后，再次根据题目来练习</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="VM" scheme="https://www.pri87.vip/tags/VM/"/>
    
  </entry>
  
  <entry>
    <title>polar_re部分wp</title>
    <link href="https://www.pri87.vip/posts/5a6db6c8.html"/>
    <id>https://www.pri87.vip/posts/5a6db6c8.html</id>
    <published>2024-03-05T13:52:24.000Z</published>
    <updated>2024-03-05T13:54:59.086Z</updated>
    
    <content type="html"><![CDATA[<p>这个polar的re感觉质量好低，不是太简单就是太恶心，写了5道不想写了QAQ</p><h3 id="test">test</h3><p>用apktool解包，在assets文件中把zip文件名改成png得到flag</p><figure class="highlight ceylon"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;money<span class="number">_</span><span class="keyword">is</span><span class="number">_n</span>othing&#125;</span><br></pre></td></tr></table></figure><p>这题被坑了一个晚上，因为一开始尝试静态分析一关一关过，结果解包之后flag在图片里面，之后看到这种可以逆出资源的可以先尝试把资源找出来，说不定就是flag，<s>建议把这道题放到misc</s></p><h3 id="老八小冒险">老八小冒险</h3><p>这个题挺简单的，甚至都是原始工程文件，没有打包也不用解包</p><p>直接用rpgmaker vx ace打开，直接看事件就好了</p><p>jbkjckjsdsfdsfjbkjckj的md5</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;<span class="number">60</span>b<span class="number">6</span>cd<span class="number">0848639100</span><span class="keyword">c</span><span class="number">68</span><span class="keyword">c</span><span class="number">04</span>d<span class="number">4884</span>db<span class="number">1e8</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="逢七必变">逢七必变</h3><p>第一次见到aspack壳，尝试搜索工具脱壳,找到了，那么就直接使用，结果工具有问题，看来还是要一步一步调</p><p>打开之后，里面的代码好像很奇怪，代码看不懂，一开始call然后又返回，不理解，esp定律一开始也不好使/</p><p>好吧，因为这个特征不一样，这个aspack壳的特点是一开始popad，然后call，最后popad，然后ret，在popad完对esp下断点然后点击运行，可以直接到ret的位置，之后f7一下，应该可以到一个call加jmp的位置，这里就是oep</p><p><img src="https://s2.loli.net/2024/03/04/6QyLedptHSumvg7.png" alt="image-20240304193949183"></p><p>在这个位置dump，然后打开dump的文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __cdecl <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> len; <span class="comment">// kr00_4</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> i; <span class="comment">// [esp+14h] [ebp-110h]</span></span><br><span class="line">  <span class="type">char</span> v6[<span class="number">256</span>]; <span class="comment">// [esp+20h] [ebp-104h] BYREF</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">strcpy</span>(v6, <span class="string">&quot;akf`|7fda1005c?1b253bc17346b5c77bab?0z&quot;</span>);</span><br><span class="line">  <span class="built_in">memset</span>(&amp;v6[<span class="number">39</span>], <span class="number">0</span>, <span class="number">0xD9</span>u);</span><br><span class="line">  len = <span class="built_in">strlen</span>(v6);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; len; ++i )</span><br><span class="line">    v6[i] ^= <span class="number">7u</span>;</span><br><span class="line">  sub_5F1040(<span class="string">&quot;You got it!!!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后有手就行了</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flag</span>&#123;<span class="number">0</span>acf6772d86e524ed60431e2d00efe87&#125;</span><br></pre></td></tr></table></figure><h3 id="高卢战记">高卢战记</h3><p>直接ida打开obj文件，看main函数</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">6f759f8f7</span>:deg::<span class="number">796486</span>&lt;<span class="number">8</span>&lt;<span class="number">8</span>edf9:<span class="number">73</span></span><br></pre></td></tr></table></figure><p>只有一个这个然后就输出了这个</p><p>一开始看不懂</p><p>结果。。因为《高卢战记》是凯撒写的，书里面用的3的位移，所以要用-3</p><p>这样接出来就是flag</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;<span class="number">3</span><span class="keyword">c</span><span class="number">426</span><span class="keyword">c</span><span class="number">5</span><span class="keyword">c</span><span class="number">47</span>abd<span class="number">774631539595</span>bac<span class="number">6740</span>&#125;</span><br></pre></td></tr></table></figure><p>真恶心，为什么不是misc</p><h3 id="最短路">最短路</h3><p>直接得到最短26</p><p>画图或者ai（比ai还快）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">from</span> <span class="string">prism</span> <span class="string">import</span> <span class="string">*</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">import</span> <span class="string">heapq</span></span><br><span class="line"></span><br><span class="line"><span class="string">def</span> <span class="string">dijkstra(graph,</span> <span class="string">start,</span> <span class="string">end):</span></span><br><span class="line">    <span class="string">heap</span> <span class="string">=</span> [<span class="string">(0</span>, <span class="string">start)</span>]</span><br><span class="line">    <span class="string">distances</span> <span class="string">=</span> &#123;<span class="attr">node:</span> <span class="string">float(&#x27;infinity&#x27;)</span> <span class="string">for</span> <span class="string">node</span> <span class="string">in</span> <span class="string">graph</span>&#125;</span><br><span class="line">    <span class="string">distances[start]</span> <span class="string">=</span> <span class="number">0</span></span><br><span class="line">    <span class="string">paths</span> <span class="string">=</span> &#123;<span class="attr">start:</span> []&#125;</span><br><span class="line"></span><br><span class="line">    <span class="attr">while heap:</span></span><br><span class="line">        <span class="string">(dist,</span> <span class="string">current)</span> <span class="string">=</span> <span class="string">heapq.heappop(heap)</span></span><br><span class="line">        <span class="string">if</span> <span class="string">dist</span> <span class="string">&gt;</span> <span class="string">distances[current]:</span></span><br><span class="line">            <span class="string">continue</span></span><br><span class="line">        <span class="string">for</span> <span class="string">neighbor,</span> <span class="string">neighbor_dist</span> <span class="string">in</span> <span class="string">graph[current].items():</span></span><br><span class="line">            <span class="string">old_dist</span> <span class="string">=</span> <span class="string">distances[neighbor]</span></span><br><span class="line">            <span class="string">new_dist</span> <span class="string">=</span> <span class="string">dist</span> <span class="string">+</span> <span class="string">neighbor_dist</span></span><br><span class="line">            <span class="string">if</span> <span class="string">new_dist</span> <span class="string">&lt;</span> <span class="attr">old_dist:</span></span><br><span class="line">                <span class="string">distances[neighbor]</span> <span class="string">=</span> <span class="string">new_dist</span></span><br><span class="line">                <span class="string">paths[neighbor]</span> <span class="string">=</span> <span class="string">paths[current]</span> <span class="string">+</span> [<span class="string">neighbor</span>]</span><br><span class="line">                <span class="string">heapq.heappush(heap,</span> <span class="string">(new_dist,</span> <span class="string">neighbor))</span></span><br><span class="line">    <span class="string">return</span> <span class="string">distances[end],</span> <span class="string">paths[end]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义图的边和权重</span></span><br><span class="line"><span class="string">graph</span> <span class="string">=</span> &#123;</span><br><span class="line">    <span class="attr">1:</span> &#123;<span class="attr">2:</span> <span class="number">2</span>, <span class="attr">3:</span> <span class="number">3</span>&#125;,</span><br><span class="line">    <span class="attr">2:</span> &#123;<span class="attr">3:</span> <span class="number">5</span>, <span class="attr">4:</span> <span class="number">3</span>, <span class="attr">10:</span> <span class="number">20</span>&#125;,</span><br><span class="line">    <span class="attr">3:</span> &#123;<span class="attr">5:</span> <span class="number">6</span>, <span class="attr">8:</span> <span class="number">5</span>&#125;,</span><br><span class="line">    <span class="attr">4:</span> &#123;<span class="attr">5:</span> <span class="number">7</span>&#125;,</span><br><span class="line">    <span class="attr">5:</span> &#123;<span class="attr">9:</span> <span class="number">4</span>, <span class="attr">8:</span> <span class="number">1</span>&#125;,</span><br><span class="line">    <span class="attr">6:</span> &#123;<span class="attr">7:</span> <span class="number">3</span>&#125;,</span><br><span class="line">    <span class="attr">7:</span> &#123;<span class="attr">14:</span> <span class="number">6</span>&#125;,</span><br><span class="line">    <span class="attr">8:</span> &#123;<span class="attr">11:</span> <span class="number">5</span>, <span class="attr">15:</span> <span class="number">21</span>&#125;,</span><br><span class="line">    <span class="attr">9:</span> &#123;<span class="attr">12:</span> <span class="number">5</span>&#125;,</span><br><span class="line">    <span class="attr">10:</span> &#123;&#125;,</span><br><span class="line">    <span class="attr">11:</span> &#123;<span class="attr">15:</span> <span class="number">13</span>&#125;,</span><br><span class="line">    <span class="attr">12:</span> &#123;<span class="attr">15:</span> <span class="number">9</span>&#125;,</span><br><span class="line">    <span class="attr">14:</span> &#123;<span class="attr">15:</span> <span class="number">7</span>&#125;,</span><br><span class="line">    <span class="attr">15:</span> &#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行Dijkstra算法</span></span><br><span class="line"><span class="string">distance,</span> <span class="string">path</span> <span class="string">=</span> <span class="string">dijkstra(graph,</span> <span class="number">1</span><span class="string">,</span> <span class="number">15</span><span class="string">)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="string">print(f&quot;最短距离:</span> &#123;<span class="string">distance</span>&#125;<span class="string">&quot;)</span></span><br><span class="line"><span class="string">print(f&quot;</span><span class="string">路径:</span> &#123;<span class="string">&#x27; -&gt; &#x27;</span><span class="string">.join(map(str</span>, <span class="string">path))</span>&#125;<span class="string">&quot;)</span></span><br><span class="line"><span class="string">pmd5(&quot;</span><span class="number">1381115</span><span class="string">&quot;)</span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">flag</span>&#123;<span class="number">4991</span>ce1781b53409a7a84e2baf9431d6&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">真的感觉质量低，没写的别写QAQ</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>青少年ctf#1 wp</title>
    <link href="https://www.pri87.vip/posts/c4803d60.html"/>
    <id>https://www.pri87.vip/posts/c4803d60.html</id>
    <published>2024-03-02T16:29:55.000Z</published>
    <updated>2024-03-06T05:16:31.437Z</updated>
    
    <content type="html"><![CDATA[<p>不知为何，密码比逆向做的多，但是不会密码也不会逆向</p><h2 id="crypto">crypto</h2><h3 id="解个方程">解个方程</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line">p = <span class="number">88405749077010121197972538332505989817</span></span><br><span class="line">q = <span class="number">314336612126421969080144444342415739457</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">d = invert(e, (p-<span class="number">1</span>)*(q-<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(d)</span><br></pre></td></tr></table></figure><p>这个是动态flag</p><h3 id="ez-log">ez_log</h3><p>这个题是求离散对数，g=3，直接用函数求</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> sympy.ntheory <span class="keyword">import</span> discrete_log</span><br><span class="line">p=<span class="number">3006156660704242356836102321001016782090189571028526298055526061772989406357037170723984497344618257575827271367883545096587962708266010793826346841303043716776726799898939374985320242033037</span></span><br><span class="line">g = <span class="number">3</span></span><br><span class="line">c=<span class="number">2637361207438328172880452774725735558448205624296999428196250415451022718950315626464793126507500112508727744681450551541566511482157902377105193512791814667446983536196889757495426692091900</span></span><br><span class="line"></span><br><span class="line">m = discrete_log(p, c, g)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br></pre></td></tr></table></figure><p>也是动态flag</p><h3 id="四重加密">四重加密</h3><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">base32:</span></span><br><span class="line"><span class="language-xml">qsnctf</span></span><br><span class="line"><span class="language-xml">ascii code:</span></span><br><span class="line"><span class="language-xml">zcye</span><span class="template-variable">&#123;mxmemtxrzt_lzbha_kwmqzec&#125;</span><span class="language-xml">|key=hello</span></span><br><span class="line"><span class="language-xml">维吉尼亚：</span></span><br><span class="line"><span class="language-xml">synt</span><span class="template-variable">&#123;yqitbfqnoi_xsxwp_wpifoqv&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">凯撒:</span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;ldvgosdabv_kfkjc_jcvsbdi&#125;</span></span><br></pre></td></tr></table></figure><p>把flag改成qsnctf就好</p><h3 id="ez-rsa">ez_rsa</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">flag = <span class="string">b&#x27;qsnctf&#123;xxx-xxxx-xxxx-xxxx-xxxxxxxxx&#125;&#x27;</span></span><br><span class="line">m = bytes_to_long(flag)</span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">r = getPrime(<span class="number">512</span>)</span><br><span class="line">n = p * q * r</span><br><span class="line">leak = p * q</span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">c = <span class="built_in">pow</span>(m, e, n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;c = <span class="subst">&#123;c&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;n = <span class="subst">&#123;n&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;leak = <span class="subst">&#123;leak&#125;</span>&#x27;</span>)</span><br></pre></td></tr></table></figure><p>相当于已知r,e,c求m</p><p>我们知道<br>$$<br>c = m^e \mod pqr\iff\<br>c = m^e + kpqr\iff\<br>c = m^e + (kpq)r\iff\<br>c = m^e \mod r<br>$$<br>那么就可以解出来了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2 <span class="keyword">as</span> gy</span><br><span class="line"></span><br><span class="line">c = <span class="number">173595148273920891298949441727054328036798235134009407863895058729356993814829340513336567479145746034781201823694596731886346933549577879568197521436900228804336056005940048086898794965549472641334237175801757569154295743915744875800647234151498117718087319013271748204766997008772782882813572814296213516343420236873651060868227487925491016675461540894535563805130406391144077296854410932791530755245514034242725719196949258860635915202993968073392778882692892</span></span><br><span class="line">n = <span class="number">1396260492498511956349135417172451037537784979103780135274615061278987700332528182553755818089525730969834188061440258058608031560916760566772742776224528590152873339613356858551518007022519033843622680128062108378429621960808412913676262141139805667510615660359775475558729686515755127570976326233255349428771437052206564497930971797497510539724340471032433502724390526210100979700467607197448780324427953582222885828678441579349835574787605145514115368144031247</span></span><br><span class="line">leak = <span class="number">152254254502019783796170793516692965417859793325424454902983763285830332059600151137162944897787532369961875766745853731769162511788354655291037150251085942093411304833287510644995339391240164033052417935316876168953838783742499485868268986832640692657031861629721225482114382472324320636566226653243762620647</span></span><br><span class="line">r = n // leak</span><br><span class="line">phi = r-<span class="number">1</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">d = gy.invert(e,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c,d,r)</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"><span class="comment">#qsnctf&#123;12ff81e0-7646-4a96-a7eb-6a509ec01c9e&#125;</span></span><br></pre></td></tr></table></figure><p>根据这道题可以知道：已知c,e,和n的任意一个因子（如果这个因子可以求phi）那就可以直接解</p><h3 id="factor1">factor1</h3><p>这个题是第一次见</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">p = getPrime(<span class="number">512</span>)</span><br><span class="line">q = getPrime(<span class="number">512</span>)</span><br><span class="line">d = getPrime(<span class="number">256</span>)</span><br><span class="line">e = gmpy2.invert(d, (p**<span class="number">2</span> - <span class="number">1</span>) * (q**<span class="number">2</span> - <span class="number">1</span>))</span><br><span class="line">flag = <span class="string">&quot;qsnctf&#123;&quot;</span> + hashlib.md5(<span class="built_in">str</span>(p+q).encode()).hexdigest() + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line"><span class="built_in">print</span>(flag)</span><br><span class="line"><span class="comment"># 4602579741478096718172697218991734057017874575484294836043557658035277770732473025335441717904100009903832353915404911860888652406859201203199117870443451616457858224082143505393843596092945634675849883286107358454466242110831071552006337406116884147391687266536283395576632885877802269157970812862013700574069981471342712011889330292259696760297157958521276388120468220050600419562910879539594831789625596079773163447643235584124521162320450208920533174722239029506505492660271016917768383199286913178821124229554263149007237679675898370759082438533535303763664408320263258144488534391712835778283152436277295861859</span></span><br><span class="line"><span class="comment"># 78665180675705390001452176028555030916759695827388719494705803822699938653475348982551790040292552032924503104351703419136483078949363470430486531014134503794074329285351511023863461560882297331218446027873891885693166833003633460113924956936552466354566559741886902240131031116897293107970411780310764816053</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到这个题很神奇的地方在于(p**2 - 1) * (q**2 - 1),所以我去搜了一下，就搜到攻击脚本了</p><p><a href="https://www.cnblogs.com/tr0uble/p/17106202.html#/c/subject/p/17106202.html">Cryptanalysis of RSA Variants with Primes Sharing Most Significant Bits - tr0uble - 博客园 (cnblogs.com)</a></p><p>好像叫LUC，用连分数方法攻击，但是看不懂，有机会之后看看</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sage.<span class="built_in">all</span> <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> isqrt</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">attack</span>(<span class="params">N, e</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Recovers the prime factors of a modulus and the private exponent if two prime factors share most significant bits</span></span><br><span class="line"><span class="string">    :param N: the modulus</span></span><br><span class="line"><span class="string">    :param e: the public exponent</span></span><br><span class="line"><span class="string">    :return: a tuple containing the prime factors and the private exponent, or None if the private exponent was not found</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    PR = PolynomialRing(ZZ, <span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">    x = PR.gen()</span><br><span class="line">    convergents = continued_fraction(ZZ(e) / ZZ((N-<span class="number">1</span>)**<span class="number">2</span>)).convergents()</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> convergents:</span><br><span class="line">        k = c.numerator()</span><br><span class="line">        d = c.denominator()</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            f = x**<span class="number">2</span> - x*(N**<span class="number">2</span> + <span class="number">1</span> - <span class="built_in">int</span>((e*d-<span class="number">1</span>)/k)) + N**<span class="number">2</span></span><br><span class="line">            <span class="keyword">if</span> f.discriminant() &gt; <span class="number">0</span>:</span><br><span class="line">                root = f.roots()</span><br><span class="line">                p2 = root[<span class="number">0</span>][<span class="number">0</span>]; q2 = root[<span class="number">1</span>][<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">if</span> is_square(p2) <span class="keyword">and</span> is_square(q2):</span><br><span class="line">                    p = isqrt(p2); q = isqrt(q2)</span><br><span class="line">                    <span class="keyword">if</span> p*q == N:</span><br><span class="line">                        <span class="keyword">return</span> p, q, d</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">e = <span class="number">4602579741478096718172697218991734057017874575484294836043557658035277770732473025335441717904100009903832353915404911860888652406859201203199117870443451616457858224082143505393843596092945634675849883286107358454466242110831071552006337406116884147391687266536283395576632885877802269157970812862013700574069981471342712011889330292259696760297157958521276388120468220050600419562910879539594831789625596079773163447643235584124521162320450208920533174722239029506505492660271016917768383199286913178821124229554263149007237679675898370759082438533535303763664408320263258144488534391712835778283152436277295861859</span></span><br><span class="line">n = <span class="number">78665180675705390001452176028555030916759695827388719494705803822699938653475348982551790040292552032924503104351703419136483078949363470430486531014134503794074329285351511023863461560882297331218446027873891885693166833003633460113924956936552466354566559741886902240131031116897293107970411780310764816053</span></span><br><span class="line">p=q=d=<span class="number">0</span></span><br><span class="line">p,q,d = attack(n,e)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">str</span>(p + q))</span><br></pre></td></tr></table></figure><p>这个是sage</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">17842948407837550252915901438494310860377505026658598797918460167146832545038336985103505761787935094014130901091944301325113646047622033244783641463109866</span>\</span><br><span class="line"><span class="attribute">qsnctf</span>&#123;<span class="number">8072</span>e8b2982bc729cc74ef58f1abc862&#125;</span><br></pre></td></tr></table></figure><h2 id="misc">misc</h2><p>那个txt一打开，好像看不出来是什么，到最后发现504d0304那就是压缩包了，写个脚本生成文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">hex_to_bin</span>(<span class="params">input_file, output_file</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f_in, <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f_out:</span><br><span class="line">        <span class="keyword">for</span> i, line <span class="keyword">in</span> <span class="built_in">enumerate</span>(f_in):</span><br><span class="line">            <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:  <span class="comment"># 每隔一行处理一次</span></span><br><span class="line">                hex_str = line[<span class="number">10</span>:<span class="number">57</span>].replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>)  <span class="comment"># 从第11个字符开始，读取到第57个字符</span></span><br><span class="line">                bin_data = <span class="built_in">bytes</span>.fromhex(hex_str)</span><br><span class="line">                f_out.write(bin_data)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hex_to_bin(<span class="string">&#x27;a.txt&#x27;</span>, <span class="string">&#x27;output.zip&#x27;</span>)</span><br><span class="line"><span class="comment">#这边事先处理成正的了</span></span><br></pre></td></tr></table></figure><p>output.zip直接爆破，因为说了是小写和数字</p><p>z12345，得到flag图片拼接即可</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">qsnctf</span><span class="template-variable">&#123;b414e3e3a6449ddba0997db259203eb7&#125;</span></span><br></pre></td></tr></table></figure><h2 id="RE">RE</h2><h3 id="来打cs咯">来打cs咯</h3><p>文件描述不要在实体机打开</p><p>于是在win10虚拟机中sandboxie中尝试用ida调试</p><p>但是打开后函数很杂，看不出来在干什么</p><p>网上查查这种题该怎么做，看到要放到在线沙箱中分析一下</p><p>直接拿到</p><p>10.0.80.253:8118</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">qsnctf</span>&#123;<span class="number">10.0.80.253:8118</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">学废了，学废了</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="re" scheme="https://www.pri87.vip/tags/re/"/>
    
    <category term="crypto" scheme="https://www.pri87.vip/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>HGAME 2024 week4 RE wp</title>
    <link href="https://www.pri87.vip/posts/f5113ec1.html"/>
    <id>https://www.pri87.vip/posts/f5113ec1.html</id>
    <published>2024-02-28T13:47:51.000Z</published>
    <updated>2024-02-28T13:51:23.816Z</updated>
    
    <content type="html"><![CDATA[<p>这次re至少能看懂</p><h2 id="RE">RE</h2><h3 id="again">again!</h3><p>打开后发现一个py打包的exe和bin2.pyc</p><p>反编译一下第一个文件,说是要用这个文件去解密bin2,但是看不懂QAQ</p><p>但是二进制形式打开bin2，观察可以发现出现大量一样的</p><p>a405b5d321e446459d8f9169d027bd92</p><p>怀疑是异或，所以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">xor_with_key</span>(<span class="params">input_file, key, output_file</span>):</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(input_file, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> fin, <span class="built_in">open</span>(output_file, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> fout:</span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            chunk = fin.read(<span class="number">32</span>)  </span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">len</span>(chunk) == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            data = <span class="built_in">bytearray</span>(<span class="built_in">len</span>(chunk))</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(chunk)):</span><br><span class="line">                data[i] = chunk[i] ^ <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])  </span><br><span class="line">            fout.write(data)  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;a405b5d321e446459d8f9169d027bd92&quot;</span>  </span><br><span class="line">xor_with_key(<span class="string">&#x27;bin2&#x27;</span>, key, <span class="string">&#x27;output.bin&#x27;</span>)</span><br></pre></td></tr></table></figure><p>然后得到的文件再二进制打开一下，是winPE，就ida打开</p><p>主函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  __int64 v3; <span class="comment">// rax</span></span><br><span class="line">  <span class="type">int</span> key[<span class="number">6</span>]; <span class="comment">// [rsp+20h] [rbp-18h] BYREF</span></span><br><span class="line"></span><br><span class="line">  sub_140001020(<span class="string">&quot;plz input your flag:&quot;</span>);</span><br><span class="line">  sub_140001080(<span class="string">&quot;%32s&quot;</span>,flag);</span><br><span class="line">  key[<span class="number">0</span>] = <span class="number">0x1234</span>;</span><br><span class="line">  key[<span class="number">1</span>] = <span class="number">0x2341</span>;</span><br><span class="line">  key[<span class="number">2</span>] = <span class="number">0x3412</span>;</span><br><span class="line">  key[<span class="number">3</span>] = <span class="number">0x4123</span>;</span><br><span class="line">  encode(key);</span><br><span class="line">  i = <span class="number">0</span>i64;</span><br><span class="line">  <span class="keyword">while</span> ( flag[i] == *(_DWORD *)((<span class="type">char</span> *)&amp;check + i * <span class="number">4</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( ++v3 &gt;= <span class="number">8</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_140001020(<span class="string">&quot;Congratulations!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_140001020(<span class="string">&quot;Wrong!try again...&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看起来就是flag以dword来加密然后比较,encode里面是一个TEA变体，直接逆就好了</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> s6;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> delta;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> s5;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> s4; <span class="comment">// r15d</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> s3; <span class="comment">// r14d</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> s2; <span class="comment">// ebp</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> s1; <span class="comment">// esi</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> s0; <span class="comment">// r11d</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> v11; <span class="comment">// ebx</span></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> s7; <span class="comment">// [rsp+40h] [rbp+8h]</span></span><br><span class="line"></span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> flag[<span class="number">8</span>] = &#123; <span class="number">0x506FB5C3</span>, <span class="number">0xB9358F45</span>, <span class="number">0xC91AE8C7</span>, <span class="number">0x3820E280</span>, <span class="number">0xD13ABA83</span>, <span class="number">0x975CF554</span>, <span class="number">0x4352036B</span>, <span class="number">0x1CD20447</span> &#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> key[<span class="number">4</span>] = &#123;</span><br><span class="line"><span class="number">0x00001234</span>, <span class="number">0x00002341</span>, <span class="number">0x00003412</span>, <span class="number">0x00004123</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">int</span> key_[<span class="number">4</span>] = &#123;</span><br><span class="line"><span class="number">0x00001234</span>, <span class="number">0x00002341</span>, <span class="number">0x00003412</span>, <span class="number">0x00004123</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">s7 = flag[<span class="number">7</span>];</span><br><span class="line">s1 = flag[<span class="number">1</span>];</span><br><span class="line">s2 = flag[<span class="number">2</span>];</span><br><span class="line">s3 = flag[<span class="number">3</span>];</span><br><span class="line">s4 = flag[<span class="number">4</span>];</span><br><span class="line">s5 = flag[<span class="number">5</span>];</span><br><span class="line">s6 = flag[<span class="number">6</span>];</span><br><span class="line">s0 = flag[<span class="number">0</span>];</span><br><span class="line">delta = <span class="number">0</span>;</span><br><span class="line">delta += <span class="number">0x7937B99E</span> * <span class="number">12</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++) &#123;</span><br><span class="line">v11 = key[(delta &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">s7 -= (((s6 ^ key[(delta &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span> ^ <span class="number">3</span>]) + (delta ^ flag[<span class="number">0</span>])) ^ (((<span class="number">16</span> * s6) ^ (flag[<span class="number">0</span>] &gt;&gt; <span class="number">3</span>)) + ((s6 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * flag[<span class="number">0</span>]))));</span><br><span class="line">s6 -= ((s5 ^ key[(delta &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span> ^ <span class="number">2</span>]) + (delta ^ s7)) ^ (((<span class="number">16</span> * s5) ^ (s7 &gt;&gt; <span class="number">3</span>)) + ((s5 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * s7)));</span><br><span class="line">s5 -= ((delta ^ s6) + (s4 ^ key[(delta &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span> ^ <span class="number">1</span>])) ^ (((<span class="number">16</span> * s4) ^ (s6 &gt;&gt; <span class="number">3</span>)) + ((s4 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * s6)));</span><br><span class="line"><span class="comment">//flag[0] = s0;</span></span><br><span class="line">s4 -= ((delta ^ s5) + (s3 ^ v11)) ^ (((<span class="number">16</span> * s3) ^ (s5 &gt;&gt; <span class="number">3</span>)) + ((s3 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * s5)));</span><br><span class="line">s3 -= ((delta ^ s4) + (s2 ^ key[(delta &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span> ^ <span class="number">3</span>])) ^ (((<span class="number">16</span> * s2) ^ (s4 &gt;&gt; <span class="number">3</span>)) + ((s2 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * s4)));</span><br><span class="line">s2 -= ((delta ^ s3) + (s1 ^ key[(delta &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span> ^ <span class="number">2</span>])) ^ (((<span class="number">16</span> * s1) ^ (s3 &gt;&gt; <span class="number">3</span>)) + ((s1 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * s3)));</span><br><span class="line">s1 -= ((delta ^ s2) + (flag[<span class="number">0</span>] ^ key[(delta &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span> ^ <span class="number">1</span>])) ^ (((<span class="number">16</span> * flag[<span class="number">0</span>]) ^ (s2 &gt;&gt; <span class="number">3</span>)) + ((flag[<span class="number">0</span>] &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * s2)));</span><br><span class="line"><span class="comment">//s0 = flag[0] - (((delta ^ s1) + (s7 ^ v11)) ^ (((16 * s7) ^ (s1 &gt;&gt; 3)) + ((s7 &gt;&gt; 5) ^ (4 * s1))));</span></span><br><span class="line">flag[<span class="number">0</span>] -= (((delta ^ s1) + (s7 ^ v11)) ^ (((<span class="number">16</span> * s7) ^ (s1 &gt;&gt; <span class="number">3</span>)) + ((s7 &gt;&gt; <span class="number">5</span>) ^ (<span class="number">4</span> * s1))));</span><br><span class="line">delta -= <span class="number">0x7937B99E</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//flag[0] = s0;</span></span><br><span class="line">flag[<span class="number">7</span>] = s7;</span><br><span class="line">flag[<span class="number">1</span>] = s1;</span><br><span class="line">flag[<span class="number">2</span>] = s2;</span><br><span class="line">flag[<span class="number">3</span>] = s3;</span><br><span class="line">flag[<span class="number">4</span>] = s4;</span><br><span class="line">flag[<span class="number">5</span>] = s5;</span><br><span class="line">flag[<span class="number">6</span>] = s6;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">cout &lt;&lt; hex &lt;&lt; flag[i] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//6d616768</span></span><br><span class="line"><span class="comment">//74627b65</span></span><br><span class="line"><span class="comment">//695f6165</span></span><br><span class="line"><span class="comment">//5f615f73</span></span><br><span class="line"><span class="comment">//64726168</span></span><br><span class="line"><span class="comment">//636e655f</span></span><br><span class="line"><span class="comment">//74707972</span></span><br><span class="line"><span class="comment">//7d6e6f69</span></span><br><span class="line"><span class="comment">//hgame&#123;btea_is_a_hard_encryption&#125;</span></span><br></pre></td></tr></table></figure><h3 id="change">change</h3><p>直接ida打开<br>主函数如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">sub_7FF787FD21E0(v10, <span class="string">&quot;am2qasl&quot;</span>, envp);</span><br><span class="line">  v6 = <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;__ExceptionPtr&gt;::operator=((__int64)v7, v10);</span><br><span class="line">  sub_7FF787FD2280(a, v6);</span><br><span class="line">  sub_7FF787FD1410(<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">&quot;plz input your flag:&quot;</span>);</span><br><span class="line">  sub_7FF787FD10F0(<span class="built_in">std</span>::<span class="built_in">cin</span>, &amp;flag);</span><br><span class="line">  sub_7FF787FD29A0((__int64)a, (__int64)b, (__int64)&amp;flag);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">24</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    last = byte_7FF787FD8000[i];</span><br><span class="line">    <span class="keyword">if</span> ( last != *(<span class="type">char</span> *)sub_7FF787FD2960((__int64)b, i) )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_7FF787FD1410(<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">&quot;sry,try again...&quot;</span>);</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>(b);</span><br><span class="line">      sub_7FF787FD2780(a);</span><br><span class="line">      <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>(v10);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_7FF787FD1410(<span class="built_in">std</span>::<span class="built_in">cout</span>, <span class="string">&quot;Congratulations!&quot;</span>);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>(b);</span><br><span class="line">  sub_7FF787FD2780(a);</span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>(v10);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>化简一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sub_7FF787FD10F0(<span class="built_in">std</span>::<span class="built_in">cin</span>, &amp;flag);</span><br><span class="line">  sub_7FF787FD29A0((__int64)a, (__int64)b, (__int64)&amp;flag);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">24</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    last = byte_7FF787FD8000[i];</span><br><span class="line">    <span class="keyword">if</span> ( last != *(<span class="type">char</span> *)sub_7FF787FD2960((__int64)b, i) )</span><br></pre></td></tr></table></figure><p>那就完了，sub_7FF787FD29A0肯定是加密</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">_QWORD *__fastcall <span class="title function_">sub_7FF787FD29A0</span><span class="params">(_QWORD *a, _QWORD *b, _QWORD *flag)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">char</span> *v3; <span class="comment">// rax</span></span><br><span class="line">  <span class="type">char</span> v4; <span class="comment">// al</span></span><br><span class="line">  <span class="type">char</span> *v5; <span class="comment">// rax</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+20h] [rbp-58h]</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> Duration; <span class="comment">// [rsp+28h] [rbp-50h]</span></span><br><span class="line">  <span class="type">unsigned</span> <span class="type">int</span> v9; <span class="comment">// [rsp+30h] [rbp-48h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v10; <span class="comment">// [rsp+48h] [rbp-30h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v11; <span class="comment">// [rsp+58h] [rbp-20h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">std</span>::<span class="built_in">shared_ptr</span>&lt;__ExceptionPtr&gt;::operator=((__int64)b, flag);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; (<span class="type">unsigned</span> __int64)unknown_libname_20(b); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( i % <span class="number">2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_7FF787FD2D20(sub_7FF787FD3670);</span><br><span class="line">      v11 = unknown_libname_20(a);</span><br><span class="line">      v9 = *(<span class="type">char</span> *)sub_7FF787FD2960(a, i % v11);</span><br><span class="line">      v5 = (<span class="type">char</span> *)sub_7FF787FD2960(b, i);</span><br><span class="line">      beep(*v5, v9);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      sub_7FF787FD2D20(sub_7FF787FD3650);</span><br><span class="line">      v10 = unknown_libname_20(a);</span><br><span class="line">      Duration = *(<span class="type">char</span> *)sub_7FF787FD2960(a, i % v10);</span><br><span class="line">      v3 = (<span class="type">char</span> *)sub_7FF787FD2960(b, i);</span><br><span class="line">      beep(*v3, Duration);</span><br><span class="line">    &#125;</span><br><span class="line">    *(_BYTE *)sub_7FF787FD2960(b, i) = v4;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据奇数位和偶数位来分别加密：</p><p>奇数位直接和key异或<br>偶数位异或完加10</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">last = cal([<span class="number">0x13</span>, <span class="number">0x0A</span>, <span class="number">0x5D</span>, <span class="number">0x1C</span>, <span class="number">0x0E</span>, <span class="number">0x08</span>, <span class="number">0x23</span>, <span class="number">0x06</span>, </span><br><span class="line">        <span class="number">0x0B</span>, <span class="number">0x4B</span>, <span class="number">0x38</span>, <span class="number">0x22</span>, <span class="number">0x0D</span>, <span class="number">0x1C</span>, <span class="number">0x48</span>, <span class="number">0x0C</span>, </span><br><span class="line">        <span class="number">0x66</span>, <span class="number">0x15</span>, <span class="number">0x48</span>, <span class="number">0x1B</span>, <span class="number">0x0D</span>, <span class="number">0x0E</span>, <span class="number">0x10</span>, <span class="number">0x4F</span>, </span><br><span class="line">        ])</span><br><span class="line">a = cal([<span class="number">0x61</span>, <span class="number">0x6D</span>, <span class="number">0x32</span>, <span class="number">0x71</span>, <span class="number">0x61</span>, <span class="number">0x73</span>, <span class="number">0x6C</span>])</span><br><span class="line">c = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(last)):</span><br><span class="line">        <span class="keyword">if</span> (i%<span class="number">2</span>):</span><br><span class="line">                c += <span class="built_in">chr</span>(last[i])</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">                c += <span class="built_in">chr</span>(last[i]-<span class="number">10</span>)</span><br><span class="line">pxor(c,a)</span><br><span class="line"><span class="comment">#hgame&#123;ugly_Cpp_and_hook&#125;</span></span><br></pre></td></tr></table></figure><h3 id="crackme2">crackme2</h3><p>这个题把我坑惨了…</p><p>ida打开之后反编译有标红，对应位置的指令是：mov     byte ptr ds:0, 1<br>于是准备先不管，去看主体逻辑</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">sub_1400035C4(<span class="string">&quot;%50s&quot;</span>, v6);</span><br><span class="line">MEMORY[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">v3 = sub_14000105C(v6);</span><br><span class="line">v4 = <span class="string">&quot;right flag!&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> ( !v3 )</span><br><span class="line">  v4 = <span class="string">&quot;wrong flag!&quot;</span>;</span><br><span class="line"><span class="built_in">puts</span>(v4);</span><br></pre></td></tr></table></figure><p>很明显v6是flag，v3是最后的校验信息1或0</p><p>sub_14000105C打开后是换表base64</p><p>解密后发现是hgame{th1s_i5_fake_fl4g}假的，那哪里有问题呢</p><p>既然不能正确反编译主函数，那就尝试直接读汇编指令</p><p><img src="https://s2.loli.net/2024/02/26/uNo8mcwDzBqjpRF.png" alt="image-20240226194726601"></p><p>在这一段发现了virtalprotect函数，好家伙！原来是加密了。</p><p>阅读后可知，是把加密函数和一个位置异或加密了，运行解密脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">start = 0x14000105C</span><br><span class="line">loop = 0x246a</span><br><span class="line">j = 0</span><br><span class="line">for i in range(start,loop+start):</span><br><span class="line">    patch_byte(i,get_wide_byte(i)^get_wide_byte(0x140006000+j))</span><br><span class="line">    j += 1</span><br></pre></td></tr></table></figure><p>在用u+c+p组合拳然后tab反汇编后是多项式方程，用z3求解即可：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">a1 = [BitVec(<span class="string">&#x27;a1[%i]&#x27;</span> % i,<span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>)]</span><br><span class="line"></span><br><span class="line">v1 = a1[<span class="number">25</span>]</span><br><span class="line">v2 = a1[<span class="number">21</span>]</span><br><span class="line">v3 = a1[<span class="number">31</span>]</span><br><span class="line">v4 = a1[<span class="number">29</span>]</span><br><span class="line">v5 = a1[<span class="number">0</span>]</span><br><span class="line">v6 = a1[<span class="number">23</span>]</span><br><span class="line">v7 = a1[<span class="number">8</span>]</span><br><span class="line">v8 = a1[<span class="number">28</span>]</span><br><span class="line">v9 = a1[<span class="number">12</span>]</span><br><span class="line">v10 = a1[<span class="number">3</span>]</span><br><span class="line">v11 = a1[<span class="number">2</span>]</span><br><span class="line">v19 = a1[<span class="number">30</span>]</span><br><span class="line">v15 = a1[<span class="number">18</span>]</span><br><span class="line">v16 = a1[<span class="number">24</span>]</span><br><span class="line">v27 = a1[<span class="number">11</span>]</span><br><span class="line">v17 = a1[<span class="number">26</span>]</span><br><span class="line">v30 = a1[<span class="number">14</span>]</span><br><span class="line">v40 = a1[<span class="number">7</span>]</span><br><span class="line">v26 = a1[<span class="number">20</span>]</span><br><span class="line">v37 = <span class="number">2</span> * v26</span><br><span class="line">v42 = a1[<span class="number">22</span>]</span><br><span class="line">v28 = a1[<span class="number">1</span>]</span><br><span class="line">v25 = a1[<span class="number">27</span>]</span><br><span class="line">v21 = a1[<span class="number">19</span>]</span><br><span class="line">v23 = a1[<span class="number">16</span>]</span><br><span class="line">v31 = a1[<span class="number">13</span>]</span><br><span class="line">v29 = a1[<span class="number">10</span>]</span><br><span class="line">v41 = a1[<span class="number">5</span>]</span><br><span class="line">v24 = a1[<span class="number">4</span>]</span><br><span class="line">v20 = a1[<span class="number">15</span>]</span><br><span class="line">v39 = a1[<span class="number">17</span>]</span><br><span class="line">v22 = a1[<span class="number">6</span>]</span><br><span class="line">v18 = a1[<span class="number">9</span>]</span><br><span class="line">v33 = <span class="number">2</span> * v41</span><br><span class="line">v38 = <span class="number">2</span> * v16</span><br><span class="line">v32 = <span class="number">2</span> * v18</span><br><span class="line">v35 = v25 + v30</span><br><span class="line">v34 = <span class="number">2</span> * v31</span><br><span class="line">v12 = v10 + <span class="number">2</span> * (v31 + <span class="number">4</span> * (v29 + v17)) + v31 + <span class="number">4</span> * (v29 + v17)</span><br><span class="line">v36 = <span class="number">3</span> * v21</span><br><span class="line">v13 = v6 + v1 + <span class="number">8</span> * v6 + <span class="number">4</span> * (v8 + <span class="number">2</span> * v27)</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> a1:</span><br><span class="line">    s.add(a &gt;= <span class="number">32</span>, a &lt;= <span class="number">126</span>)</span><br><span class="line">s.add(a1[<span class="number">0</span>]==<span class="built_in">ord</span>(<span class="string">&#x27;h&#x27;</span>))</span><br><span class="line">s.add(a1[<span class="number">1</span>]==<span class="built_in">ord</span>(<span class="string">&#x27;g&#x27;</span>))</span><br><span class="line">s.add(a1[<span class="number">2</span>]==<span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">s.add(a1[<span class="number">3</span>]==<span class="built_in">ord</span>(<span class="string">&#x27;m&#x27;</span>))</span><br><span class="line">s.add(a1[<span class="number">4</span>]==<span class="built_in">ord</span>(<span class="string">&#x27;e&#x27;</span>))</span><br><span class="line">s.add(a1[<span class="number">5</span>]==<span class="built_in">ord</span>(<span class="string">&#x27;&#123;&#x27;</span>))</span><br><span class="line">s.add(a1[<span class="number">31</span>]==<span class="built_in">ord</span>(<span class="string">&#x27;&#125;&#x27;</span>))</span><br><span class="line"></span><br><span class="line">s.add(v18 +  <span class="number">201</span> * v24 +  <span class="number">194</span> * v10 +  <span class="number">142</span> * v20 +  <span class="number">114</span> * v39 +  <span class="number">103</span> * v11 +  <span class="number">52</span> * (v17 + v31) +  ((v9 + v23) &lt;&lt; <span class="number">6</span>) +  <span class="number">14</span> * (v21 + <span class="number">4</span> * v25 + v25) +  <span class="number">9</span> * (v40 + <span class="number">23</span> * v27 + v2 + <span class="number">3</span> * v1 + <span class="number">4</span> * v2 + <span class="number">4</span> * v6) +  <span class="number">5</span> * (v16 + <span class="number">23</span> * v30 + <span class="number">2</span> * (v3 + <span class="number">2</span> * v19) + <span class="number">5</span> * v5 + <span class="number">39</span> * v15 + <span class="number">51</span> * v4) +  <span class="number">24</span> * (v8 + <span class="number">10</span> * v28 + <span class="number">4</span> * (v42 + v7 + <span class="number">2</span> * v26)) +  <span class="number">62</span> * v22 +  <span class="number">211</span> * v41 +  <span class="number">212</span> * v29 == <span class="number">296473</span>)</span><br><span class="line">s.add(<span class="number">207</span> * v41 +  <span class="number">195</span> * v22 +  <span class="number">151</span> * v40 +  <span class="number">57</span> * v5 +  <span class="number">118</span> * v6 +  <span class="number">222</span> * v42 +  <span class="number">103</span> * v7 +  <span class="number">181</span> * v8 +  <span class="number">229</span> * v9 +  <span class="number">142</span> * v31 +  <span class="number">51</span> * v29 +  <span class="number">122</span> * (v26 + v20) +  <span class="number">91</span> * (v2 + <span class="number">2</span> * v16) +  <span class="number">107</span> * (v27 + v25) +  <span class="number">81</span> * (v17 + <span class="number">2</span> * v18 + v18) +  <span class="number">45</span> * (v19 + <span class="number">2</span> * (v11 + v24) + v11 + v24) +  <span class="number">4</span> * (<span class="number">3</span> * (v23 + a1[<span class="number">19</span>] + <span class="number">2</span> * v23 + <span class="number">5</span> * v4) + v39 + <span class="number">29</span> * (v10 + v1) + <span class="number">25</span> * v15) +  <span class="number">26</span> * v28 +  <span class="number">101</span> * v30 +  <span class="number">154</span> * v3 == <span class="number">354358</span>)</span><br><span class="line"></span><br><span class="line">s.add(And((<span class="number">177</span> * v40 +  <span class="number">129</span> * v26 +  <span class="number">117</span> * v42 +  <span class="number">143</span> * v28 +  <span class="number">65</span> * v8 +  <span class="number">137</span> * v25 +  <span class="number">215</span> * v21 +  <span class="number">93</span> * v31 +  <span class="number">235</span> * v39 +  <span class="number">203</span> * v11 +  <span class="number">15</span> * (v7 + <span class="number">17</span> * v30) +  <span class="number">2</span>* (v24 +  <span class="number">91</span> * v9 +  <span class="number">95</span> * v29 +  <span class="number">51</span> * v41 +  <span class="number">81</span> * v20 +  <span class="number">92</span> * v18 +  <span class="number">112</span> * (v10 + v6) +  <span class="number">32</span> * (v22 + <span class="number">2</span> * (v1 + v23)) +  <span class="number">6</span> * (v2 + <span class="number">14</span> * v16 + <span class="number">19</span> * v15) +  <span class="number">83</span> * v5 +  <span class="number">53</span> * v4 +  <span class="number">123</span> * v19) +  v17 +  <span class="number">175</span> * v27 +  <span class="number">183</span> * v3 == <span class="number">448573</span>)</span><br><span class="line">    ,  (<span class="number">113</span> * v19 +  <span class="number">74</span> * v3 +  <span class="number">238</span> * v6 +  <span class="number">140</span> * v2 +  <span class="number">214</span> * v26 +  <span class="number">242</span> * v8 +  <span class="number">160</span> * v21 +  <span class="number">136</span> * v23 +  <span class="number">209</span> * v9 +  <span class="number">220</span> * v31 +  <span class="number">50</span> * v24 +  <span class="number">125</span> * v10 +  <span class="number">175</span> * v20 +  <span class="number">23</span> * v39 +  <span class="number">137</span> * v22 +  <span class="number">149</span> * v18 +  <span class="number">83</span> * (v4 + <span class="number">2</span> * v30) +  <span class="number">21</span> * (<span class="number">9</span> * v29 + v16) +  <span class="number">59</span> * (<span class="number">4</span> * v27 + v17) +  <span class="number">41</span> * (v1 + v41) +  <span class="number">13</span> * (v7 + <span class="number">11</span> * (v40 + v15) + <span class="number">6</span> * v42 + <span class="number">4</span> * (v28 + <span class="number">2</span> * v11) + v28 + <span class="number">2</span> * v11 + <span class="number">17</span> * v5) +  <span class="number">36</span> * v25 == <span class="number">384306</span>)</span><br><span class="line">    ,  (<span class="number">229</span> * v21 +  <span class="number">78</span> * v1 +  v2 +  v9 +  <span class="number">133</span> * v27 +  <span class="number">74</span> * v6 +  <span class="number">69</span> * v26 +  <span class="number">243</span> * v7 +  <span class="number">98</span> * v28 +  <span class="number">253</span> * v8 +  <span class="number">142</span> * v25 +  <span class="number">175</span> * v31 +  <span class="number">105</span> * v41 +  <span class="number">221</span> * v10 +  <span class="number">121</span> * v39 +  <span class="number">218</span> * (v19 + v29) +  <span class="number">199</span> * (v24 + v30) +  <span class="number">33</span> * (v40 + <span class="number">7</span> * v17) +  <span class="number">4</span> * (<span class="number">27</span> * v20 + <span class="number">50</span> * v11 + <span class="number">45</span> * v18 + <span class="number">19</span> * (v3 + v42) + v16 + <span class="number">16</span> * v23 + <span class="number">52</span> * v4) +  <span class="number">195</span> * v22 +  <span class="number">211</span> * v5 +  <span class="number">153</span> * v15 == <span class="number">424240</span>)</span><br><span class="line">    ,  (<span class="number">181</span> * v25 +  <span class="number">61</span> * v2 +  <span class="number">65</span> * v21 +  <span class="number">58</span> * v31 +  <span class="number">170</span> * v29 +  <span class="number">143</span> * v24 +  <span class="number">185</span> * v10 +  <span class="number">86</span> * v11 +  <span class="number">97</span> * v22 +  <span class="number">235</span> * (v23 + v27) +  <span class="number">3</span>* (<span class="number">53</span> * v41 +  <span class="number">74</span> * (v8 + v3) +  <span class="number">13</span> * (v42 + <span class="number">6</span> * v9) +  <span class="number">11</span> * (v39 + <span class="number">7</span> * v20) +  <span class="number">15</span> * (v18 + <span class="number">4</span> * v17) +  v7 +  <span class="number">35</span> * v1 +  <span class="number">29</span> * v15) +  <span class="number">4</span> * (<span class="number">57</span> * v6 + <span class="number">18</span> * (v5 + v37) + v28 + <span class="number">17</span> * v16 + <span class="number">55</span> * v30) +  <span class="number">151</span> * v40 +  <span class="number">230</span> * v4 +  <span class="number">197</span> * v19 == <span class="number">421974</span>)</span><br><span class="line">    ,  (<span class="number">209</span> * v21 +  <span class="number">249</span> * v30 +  <span class="number">195</span> * v2 +  <span class="number">219</span> * v25 +  <span class="number">201</span> * v39 +  <span class="number">85</span> * v18 +  <span class="number">213</span> * (v17 + v31) +  <span class="number">119</span> * (v11 + <span class="number">2</span> * v41) +  <span class="number">29</span> * (<span class="number">8</span> * v24 + v40 + <span class="number">4</span> * v27 + v27) +  <span class="number">2</span>* (v8 +  <span class="number">55</span> * (<span class="number">2</span> * v29 + v19) +  <span class="number">3</span> * (v10 + <span class="number">39</span> * v9 + <span class="number">2</span> * (v6 + <span class="number">20</span> * v20) + <span class="number">35</span> * v7) +  <span class="number">4</span> * (v5 + <span class="number">31</span> * v42 + <span class="number">28</span> * v3) +  <span class="number">26</span> * v28 +  <span class="number">46</span> * (v37 + v16) +  <span class="number">98</span> * v1) +  <span class="number">53</span> * v23 +  <span class="number">171</span> * v15 +  <span class="number">123</span> * v4 == <span class="number">442074</span>)</span><br><span class="line">    ,  ( <span class="number">162</span> * v19 +  <span class="number">74</span> * v5 +  <span class="number">28</span> * v27 +  <span class="number">243</span> * v42 +  <span class="number">123</span> * v28 +  <span class="number">73</span> * v8 +  <span class="number">166</span> * v23 +  <span class="number">94</span> * v24 +  <span class="number">113</span> * v11 +  <span class="number">193</span> * v22 +  <span class="number">122</span> * (v6 + <span class="number">2</span> * v7) +  <span class="number">211</span> * (v10 + v25) +  <span class="number">21</span> * (v17 + <span class="number">7</span> * v41) +  <span class="number">11</span> * (v4 + <span class="number">23</span> * (v16 + v39) + <span class="number">2</span> * (v40 + <span class="number">5</span> * v30 + <span class="number">2</span> * (<span class="number">2</span> * v18 + v29) + <span class="number">2</span> * v18 + v29)) +  <span class="number">5</span> * (<span class="number">46</span> * v9 + <span class="number">26</span> * v20 + <span class="number">4</span> * (v31 + <span class="number">2</span> * v21) + v15 + <span class="number">27</span> * v2 + <span class="number">10</span> * v1) +  <span class="number">36</span> * (v3 + <span class="number">5</span> * v26) == <span class="number">376007</span>)</span><br><span class="line">    ,  (<span class="number">63</span> * v19 +  <span class="number">143</span> * v5 +  <span class="number">250</span> * v6 +  <span class="number">136</span> * v2 +  <span class="number">214</span> * v40 +  <span class="number">62</span> * v26 +  <span class="number">221</span> * v42 +  <span class="number">226</span> * v7 +  <span class="number">171</span> * v28 +  <span class="number">178</span> * v8 +  <span class="number">244</span> * v23 +  ((v9 &lt;&lt; <span class="number">7</span>)) +  <span class="number">150</span> * v31 +  <span class="number">109</span> * v29 +  <span class="number">70</span> * v41 +  <span class="number">127</span> * v20 +  <span class="number">204</span> * v39 +  <span class="number">121</span> * v22 +  <span class="number">173</span> * v18 +  <span class="number">69</span> * (v25 + v30 + v27) +  <span class="number">74</span> * (v16 + <span class="number">2</span> * v15 + v15) +  <span class="number">22</span> * (<span class="number">7</span> * v24 + v17 + <span class="number">10</span> * v11) +  <span class="number">40</span> * (v1 + <span class="number">4</span> * v21 + v21) +  <span class="number">81</span> * v10 +  <span class="number">94</span> * v4 +  <span class="number">84</span> * v3 == <span class="number">411252</span>)</span><br><span class="line">    ,  (<span class="number">229</span> * v15 +  <span class="number">121</span> * v4 +  <span class="number">28</span> * v30 +  <span class="number">206</span> * v16 +  <span class="number">145</span> * v27 +  <span class="number">41</span> * v1 +  <span class="number">247</span> * v6 +  <span class="number">118</span> * v26 +  <span class="number">241</span> * v28 +  <span class="number">79</span> * v8 +  <span class="number">102</span> * v25 +  <span class="number">124</span> * v23 +  <span class="number">65</span> * v9 +  <span class="number">68</span> * v31 +  <span class="number">239</span> * v17 +  <span class="number">148</span> * v24 +  <span class="number">245</span> * v39 +  <span class="number">115</span> * v11 +  <span class="number">163</span> * v22 +  <span class="number">137</span> * v18 +  <span class="number">53</span> * (v5 + <span class="number">2</span> * v29) +  <span class="number">126</span> * (v40 + <span class="number">2</span> * v10) +  <span class="number">38</span> * (v7 + v21 + <span class="number">4</span> * v7 + <span class="number">6</span> * v41) +  <span class="number">12</span> * (v2 + <span class="number">16</span> * v42) +  <span class="number">109</span> * v20 +  <span class="number">232</span> * v3 +  <span class="number">47</span> * v19 == <span class="number">435012</span>)</span><br><span class="line">    ,  (<span class="number">209</span> * v21 +  <span class="number">233</span> * v40 +  <span class="number">93</span> * v1 +  <span class="number">241</span> * v2 +  <span class="number">137</span> * v8 +  <span class="number">249</span> * v17 +  <span class="number">188</span> * v29 +  <span class="number">86</span> * v24 +  <span class="number">246</span> * v10 +  <span class="number">149</span> * v20 +  <span class="number">99</span> * v11 +  <span class="number">37</span> * v22 +  <span class="number">219</span> * v18 +  <span class="number">17</span> * (v6 + <span class="number">10</span> * v25) +  <span class="number">49</span> * (v5 + <span class="number">3</span> * v3 + <span class="number">4</span> * v28 + v28) +  <span class="number">5</span> * (<span class="number">16</span> * v39 + <span class="number">11</span> * (v41 + <span class="number">2</span> * v27 + v27) + <span class="number">12</span> * v7 + v31 + <span class="number">30</span> * v16 + <span class="number">27</span> * v19) +  <span class="number">18</span> * (v23 + <span class="number">2</span> * (v4 + v26 + <span class="number">2</span> * v4) + v4 + v26 + <span class="number">2</span> * v4) +  <span class="number">24</span> * v9 +  <span class="number">109</span> * v42 +  <span class="number">183</span> * v30 +  <span class="number">154</span> * v15 == <span class="number">392484</span>)</span><br><span class="line">    ,  (<span class="number">155</span> * v15 +  <span class="number">247</span> * v40 +  <span class="number">157</span> * v28 +  <span class="number">119</span> * v23 +  <span class="number">161</span> * v17 +  <span class="number">133</span> * v20 +  <span class="number">85</span> * v22 +  <span class="number">229</span> * (v7 + v24) +  <span class="number">123</span> * (<span class="number">2</span> * v31 + v42) +  <span class="number">21</span> * (v41 + <span class="number">12</span> * v30) +  <span class="number">55</span> * (v9 + v5 + v18 + <span class="number">2</span> * v5) +  <span class="number">15</span> * (v3 + <span class="number">16</span> * v10 + <span class="number">9</span> * v21) +  <span class="number">2</span>* (v2 +  <span class="number">115</span> * v29 +  <span class="number">111</span> * v16 +  <span class="number">26</span> * v6 +  <span class="number">88</span> * v8 +  <span class="number">73</span> * v39 +  <span class="number">71</span> * v11 +  <span class="number">28</span> * (v26 + <span class="number">2</span> * (v25 + <span class="number">2</span> * v1)) +  <span class="number">51</span> * v27 +  <span class="number">99</span> * v4 +  <span class="number">125</span> * v19) == <span class="number">437910</span>)</span><br><span class="line">    ,  (<span class="number">220</span> * v3 +  <span class="number">200</span> * v4 +  <span class="number">139</span> * v15 +  <span class="number">33</span> * v5 +  <span class="number">212</span> * v30 +  <span class="number">191</span> * v16 +  <span class="number">30</span> * v27 +  <span class="number">233</span> * v1 +  <span class="number">246</span> * v6 +  <span class="number">89</span> * v2 +  <span class="number">252</span> * v40 +  <span class="number">223</span> * v42 +  <span class="number">19</span> * v25 +  <span class="number">141</span> * v21 +  <span class="number">163</span> * v9 +  <span class="number">185</span> * v17 +  <span class="number">136</span> * v31 +  <span class="number">46</span> * v24 +  <span class="number">109</span> * v10 +  <span class="number">217</span> * v39 +  <span class="number">75</span> * v22 +  <span class="number">157</span> * v18 +  <span class="number">125</span> * (v11 + v19) +  <span class="number">104</span> * (v33 + v20) +  <span class="number">43</span> * (v28 + <span class="number">2</span> * v29 + v29) +  <span class="number">32</span> * (v8 + v7 + <span class="number">2</span> * v8 + <span class="number">2</span> * (v23 + v26)) == <span class="number">421905</span>)</span><br><span class="line">    ,  (<span class="number">211</span> * v24 +  <span class="number">63</span> * v15 +  <span class="number">176</span> * v5 +  <span class="number">169</span> * v16 +  <span class="number">129</span> * v27 +  <span class="number">146</span> * v40 +  <span class="number">111</span> * v26 +  <span class="number">68</span> * v42 +  <span class="number">39</span> * v25 +  <span class="number">188</span> * v23 +  <span class="number">130</span> * v9 +  ((v31 &lt;&lt; <span class="number">6</span>)) +  <span class="number">91</span> * v41 +  <span class="number">208</span> * v20 +  <span class="number">145</span> * v39 +  <span class="number">247</span> * v18 +  <span class="number">93</span> * (v22 + v17) +  <span class="number">71</span> * (v6 + <span class="number">2</span> * v11) +  <span class="number">103</span> * (v8 + <span class="number">2</span> * v30) +  <span class="number">6</span> * (v21 + <span class="number">10</span> * v28 + <span class="number">28</span> * v7 + <span class="number">9</span> * v29 + <span class="number">19</span> * v2 + <span class="number">24</span> * v1 + <span class="number">22</span> * v3) +  <span class="number">81</span> * v10 +  <span class="number">70</span> * v4 +  <span class="number">23</span> * v19 == <span class="number">356282</span>)</span><br><span class="line">    ,  (<span class="number">94</span> * v42 +  <span class="number">101</span> * v2 +  <span class="number">152</span> * v40 +  <span class="number">200</span> * v7 +  <span class="number">226</span> * v8 +  <span class="number">211</span> * v23 +  <span class="number">121</span> * v24 +  <span class="number">74</span> * v11 +  <span class="number">166</span> * v18 +  (((v6 + <span class="number">3</span> * v28) &lt;&lt; <span class="number">6</span>)) +  <span class="number">41</span> * (<span class="number">4</span> * v9 + v21) +  <span class="number">23</span> * (v39 + <span class="number">11</span> * v41) +  <span class="number">7</span> * (v20 + <span class="number">10</span> * v25 + <span class="number">2</span> * v12 + v12) +  <span class="number">3</span> * (<span class="number">78</span> * v30 + <span class="number">81</span> * v16 + <span class="number">55</span> * v27 + <span class="number">73</span> * v1 + <span class="number">4</span> * v26 + v15 + <span class="number">85</span> * v3 + <span class="number">65</span> * v19) +  <span class="number">62</span> * v22 +  <span class="number">88</span> * v5 +  <span class="number">110</span> * v4 == <span class="number">423091</span>)</span><br><span class="line">    ,  (<span class="number">133</span> * v22 +  <span class="number">175</span> * v15 +  <span class="number">181</span> * v30 +  <span class="number">199</span> * v16 +  <span class="number">123</span> * v27 +  <span class="number">242</span> * v1 +  <span class="number">75</span> * v6 +  <span class="number">69</span> * v2 +  <span class="number">153</span> * v40 +  <span class="number">33</span> * v26 +  <span class="number">100</span> * v42 +  <span class="number">229</span> * v7 +  <span class="number">177</span> * v8 +  <span class="number">134</span> * v31 +  <span class="number">179</span> * v29 +  <span class="number">129</span> * v41 +  <span class="number">14</span> * v10 +  <span class="number">247</span> * v24 +  <span class="number">228</span> * v20 +  <span class="number">92</span> * v11 +  <span class="number">86</span> * (v9 + v32) +  <span class="number">94</span> * (v23 + v21) +  <span class="number">37</span> * (v17 + <span class="number">4</span> * v3) +  <span class="number">79</span> * (v25 + <span class="number">2</span> * v28) +  <span class="number">72</span> * v5 +  <span class="number">93</span> * v39 +  <span class="number">152</span> * v4 +  <span class="number">214</span> * v19 == <span class="number">391869</span>)</span><br><span class="line">    ,  (<span class="number">211</span> * v24 +  <span class="number">213</span> * v18 +  <span class="number">197</span> * v40 +  <span class="number">159</span> * v25 +  <span class="number">117</span> * v21 +  <span class="number">119</span> * v9 +  <span class="number">98</span> * v17 +  <span class="number">218</span> * v41 +  <span class="number">106</span> * v39 +  <span class="number">69</span> * v11 +  <span class="number">43</span> * (v2 + v29 + <span class="number">2</span> * v2) +  <span class="number">116</span> * (v4 + v10 + v37) +  <span class="number">5</span> * (v42 + <span class="number">9</span> * v23 + <span class="number">35</span> * v20 + <span class="number">37</span> * v31) +  <span class="number">11</span> * (v16 + <span class="number">13</span> * v27 + <span class="number">5</span> * v5 + <span class="number">8</span> * v30) +  <span class="number">6</span> * (<span class="number">29</span> * v28 + <span class="number">25</span> * v8 + <span class="number">38</span> * v22 + v15 + <span class="number">13</span> * v1 + <span class="number">10</span> * v3) +  <span class="number">136</span> * v7 +  <span class="number">142</span> * v6 +  <span class="number">141</span> * v19 == <span class="number">376566</span>)</span><br><span class="line">    ,  (<span class="number">173</span> * v3 +  <span class="number">109</span> * v15 +  <span class="number">61</span> * v30 +  <span class="number">187</span> * v1 +  <span class="number">79</span> * v6 +  <span class="number">53</span> * v40 +  <span class="number">184</span> * v21 +  <span class="number">43</span> * v23 +  <span class="number">41</span> * v9 +  <span class="number">166</span> * v31 +  <span class="number">193</span> * v41 +  <span class="number">58</span> * v24 +  <span class="number">146</span> * v10 +  ((v20 &lt;&lt; <span class="number">6</span>)) +  <span class="number">89</span> * v39 +  <span class="number">121</span> * v11 +  <span class="number">5</span> * (v17 + <span class="number">23</span> * v8) +  <span class="number">7</span> * (<span class="number">29</span> * v18 + v29 + <span class="number">4</span> * v7) +  <span class="number">13</span> * (<span class="number">3</span> * v42 + v16 + <span class="number">7</span> * v26 + <span class="number">13</span> * v2) +  <span class="number">3</span> * (v4 + <span class="number">83</span> * v5 + <span class="number">51</span> * v27 + <span class="number">33</span> * v22 + <span class="number">8</span> * (v19 + <span class="number">4</span> * v28) + <span class="number">18</span> * v25) == <span class="number">300934</span>)</span><br><span class="line">    ,  (<span class="number">78</span> * v1 +  <span class="number">131</span> * v5 +  <span class="number">185</span> * v16 +  <span class="number">250</span> * v40 +  <span class="number">90</span> * v26 +  <span class="number">129</span> * v42 +  <span class="number">255</span> * v28 +  <span class="number">206</span> * v8 +  <span class="number">239</span> * v25 +  <span class="number">150</span> * v10 +  <span class="number">253</span> * v39 +  <span class="number">104</span> * v22 +  <span class="number">58</span> * (v2 + <span class="number">2</span> * v7) +  <span class="number">96</span> * (v15 + v31) +  <span class="number">117</span> * (v9 + <span class="number">2</span> * v4) +  <span class="number">27</span> * (v17 + <span class="number">8</span> * v18 + v18) +  <span class="number">19</span> * (v23 + <span class="number">3</span> * v21 + <span class="number">4</span> * v29 + v29) +  <span class="number">7</span> * (<span class="number">22</span> * v41 + <span class="number">3</span> * (v11 + <span class="number">11</span> * v24) + v3 + <span class="number">29</span> * v6 + <span class="number">14</span> * v27) +  <span class="number">109</span> * v20 +  <span class="number">102</span> * v30 +  <span class="number">100</span> * v19 == <span class="number">401351</span>)</span><br><span class="line">    ,  (<span class="number">233</span> * v19 +  <span class="number">71</span> * v5 +  <span class="number">209</span> * v27 +  <span class="number">82</span> * v6 +  <span class="number">58</span> * v26 +  <span class="number">53</span> * v25 +  <span class="number">113</span> * v23 +  <span class="number">206</span> * v31 +  <span class="number">39</span> * v41 +  <span class="number">163</span> * v20 +  <span class="number">222</span> * v11 +  <span class="number">191</span> * v18 +  <span class="number">123</span> * (v7 + v40) +  <span class="number">69</span> * (v9 + <span class="number">2</span> * v22 + v22) +  <span class="number">9</span> * (v3 + <span class="number">8</span> * v24 + <span class="number">7</span> * (<span class="number">3</span> * v1 + v28) + <span class="number">5</span> * v16 + <span class="number">19</span> * v30) +  <span class="number">4</span> * (v15 + <span class="number">26</span> * v17 + <span class="number">61</span> * v29 + <span class="number">43</span> * v42 + <span class="number">49</span> * v2 + <span class="number">32</span> * v4) +  <span class="number">10</span> * (<span class="number">7</span> * (v8 + v36) + v39 + <span class="number">12</span> * v10) == <span class="number">368427</span>)</span><br><span class="line">    ,  (<span class="number">139</span> * v30 +  <span class="number">53</span> * v5 +  <span class="number">158</span> * v16 +  <span class="number">225</span> * v1 +  <span class="number">119</span> * v6 +  <span class="number">67</span> * v2 +  <span class="number">213</span> * v40 +  <span class="number">188</span> * v28 +  <span class="number">152</span> * v8 +  <span class="number">187</span> * v21 +  <span class="number">129</span> * v23 +  <span class="number">54</span> * v9 +  <span class="number">125</span> * v17 +  <span class="number">170</span> * v24 +  <span class="number">184</span> * v11 +  <span class="number">226</span> * v22 +  <span class="number">253</span> * v18 +  <span class="number">26</span> * (v29 + v41) +  <span class="number">97</span> * (v4 + <span class="number">2</span> * v25) +  <span class="number">39</span> * (<span class="number">5</span> * v26 + v27) +  <span class="number">21</span> * (v39 + <span class="number">8</span> * v42) +  <span class="number">12</span> * (<span class="number">17</span> * v10 + v31 + <span class="number">15</span> * v7 + <span class="number">12</span> * v19) +  <span class="number">165</span> * v20 +  <span class="number">88</span> * v15 +  <span class="number">157</span> * v3 == <span class="number">403881</span>)</span><br><span class="line">    ,  (<span class="number">114</span> * v3 +  <span class="number">61</span> * v27 +  <span class="number">134</span> * v40 +  <span class="number">62</span> * v42 +  <span class="number">89</span> * v9 +  <span class="number">211</span> * v17 +  <span class="number">163</span> * v41 +  <span class="number">66</span> * v24 +  <span class="number">201</span> * (v7 + v18) +  <span class="number">47</span> * (<span class="number">5</span> * v16 + v22) +  <span class="number">74</span> * (v4 + v31) +  <span class="number">142</span> * (v2 + v28) +  <span class="number">35</span> * (v20 + <span class="number">6</span> * v26) +  <span class="number">39</span> * (v15 + <span class="number">6</span> * v30) +  <span class="number">27</span> * (v25 + <span class="number">9</span> * v23 + <span class="number">8</span> * v6) +  <span class="number">4</span> * (v21 + <span class="number">63</span> * v19 + <span class="number">2</span> * (v1 + <span class="number">12</span> * (v10 + v5) + <span class="number">8</span> * v11 + <span class="number">26</span> * v29)) +  <span class="number">10</span> * (v8 + <span class="number">4</span> * v39 + v39) == <span class="number">382979</span>)</span><br><span class="line">    ,  (<span class="number">122</span> * v25 +  <span class="number">225</span> * v21 +  <span class="number">52</span> * v23 +  <span class="number">253</span> * v9 +  <span class="number">197</span> * v17 +  <span class="number">187</span> * v31 +  <span class="number">181</span> * v29 +  <span class="number">183</span> * v41 +  <span class="number">47</span> * v20 +  <span class="number">229</span> * v39 +  <span class="number">88</span> * v22 +  <span class="number">127</span> * (v10 + v32) +  <span class="number">37</span> * (v7 + <span class="number">3</span> * v3) +  (((v11 + <span class="number">2</span> * v30 + v30) &lt;&lt; <span class="number">6</span>)) +  <span class="number">7</span> * (<span class="number">21</span> * v8 + v27 + <span class="number">18</span> * (v4 + v1 + v38)) +  <span class="number">6</span> * (<span class="number">23</span> * v24 + v26 + <span class="number">17</span> * v2 + <span class="number">39</span> * v6) +  <span class="number">10</span> * (v5 + <span class="number">11</span> * v28 + <span class="number">21</span> * v42) +  <span class="number">149</span> * v19 +  <span class="number">165</span> * v40 +  <span class="number">121</span> * v15 == <span class="number">435695</span>)</span><br><span class="line">    ,  (<span class="number">165</span> * v20 +  <span class="number">223</span> * v4 +  <span class="number">249</span> * v5 +  <span class="number">199</span> * v1 +  <span class="number">135</span> * v2 +  <span class="number">133</span> * v26 +  <span class="number">254</span> * v42 +  <span class="number">111</span> * v7 +  <span class="number">189</span> * v28 +  <span class="number">221</span> * v25 +  <span class="number">115</span> * v21 +  <span class="number">186</span> * v9 +  <span class="number">79</span> * v41 +  <span class="number">217</span> * v24 +  <span class="number">122</span> * v11 +  <span class="number">38</span> * v18 +  <span class="number">109</span> * (v34 + v29) +  <span class="number">14</span> * (v8 + <span class="number">17</span> * v40 + <span class="number">8</span> * (v6 + v38)) +  <span class="number">4</span> * (<span class="number">11</span> * (<span class="number">5</span> * v30 + v39) + <span class="number">6</span> * (v10 + <span class="number">2</span> * v22) + v27 + <span class="number">52</span> * v17 + <span class="number">50</span> * v23) +  <span class="number">229</span> * v15 +  <span class="number">86</span> * v3 +  <span class="number">234</span> * v19 == <span class="number">453748</span>)</span><br><span class="line">    ,  (<span class="number">181</span> * v25 +  <span class="number">94</span> * v42 +  <span class="number">125</span> * v1 +  <span class="number">226</span> * v26 +  <span class="number">155</span> * v7 +  <span class="number">95</span> * v21 +  <span class="number">212</span> * v17 +  <span class="number">91</span> * v31 +  <span class="number">194</span> * v29 +  <span class="number">98</span> * v24 +  <span class="number">166</span> * v11 +  <span class="number">120</span> * v22 +  <span class="number">59</span> * v18 +  <span class="number">32</span> * (v9 + v8) +  <span class="number">158</span> * (v6 + v5) +  <span class="number">101</span> * (v41 + v19) +  <span class="number">63</span> * (v4 + <span class="number">2</span> * v23) +  <span class="number">67</span> * (v28 + <span class="number">2</span> * v20) +  <span class="number">11</span> * (v39 + <span class="number">10</span> * v16 + <span class="number">11</span> * v10) +  <span class="number">39</span> * (v30 + <span class="number">4</span> * (v2 + v15)) +  <span class="number">233</span> * v40 +  <span class="number">56</span> * v27 +  <span class="number">225</span> * v3 == <span class="number">358321</span>)</span><br><span class="line">    ,  (<span class="number">229</span> * v21 +  <span class="number">135</span> * v4 +  <span class="number">197</span> * v15 +  <span class="number">118</span> * v5 +  <span class="number">143</span> * v16 +  <span class="number">134</span> * v6 +  <span class="number">204</span> * v40 +  <span class="number">173</span> * v26 +  <span class="number">81</span> * v7 +  <span class="number">60</span> * v28 +  <span class="number">58</span> * v8 +  <span class="number">179</span> * v23 +  <span class="number">142</span> * v9 +  <span class="number">178</span> * v17 +  <span class="number">230</span> * v31 +  <span class="number">148</span> * v29 +  <span class="number">224</span> * v41 +  <span class="number">194</span> * v24 +  <span class="number">223</span> * v10 +  <span class="number">87</span> * v20 +  <span class="number">200</span> * v39 +  <span class="number">233</span> * v11 +  <span class="number">49</span> * v22 +  <span class="number">127</span> * v35 +  <span class="number">31</span> * (<span class="number">4</span> * v27 + v18) +  <span class="number">42</span> * (v1 + <span class="number">6</span> * v2) +  <span class="number">109</span> * v42 +  <span class="number">75</span> * v3 +  <span class="number">165</span> * v19 == <span class="number">456073</span>)</span><br><span class="line">    ,  (<span class="number">41</span> * v4 +  <span class="number">253</span> * v3 +  <span class="number">163</span> * v15 +  <span class="number">193</span> * v30 +  <span class="number">155</span> * v16 +  <span class="number">113</span> * v27 +  <span class="number">131</span> * v6 +  <span class="number">55</span> * v2 +  <span class="number">21</span> * v40 +  <span class="number">53</span> * v26 +  <span class="number">13</span> * v8 +  <span class="number">201</span> * v25 +  <span class="number">237</span> * v9 +  <span class="number">223</span> * v31 +  <span class="number">95</span> * v24 +  <span class="number">194</span> * v20 +  <span class="number">62</span> * v39 +  <span class="number">119</span> * v11 +  <span class="number">171</span> * v22 +  <span class="number">135</span> * v18 +  <span class="number">69</span> * (v10 + <span class="number">3</span> * v28) +  <span class="number">211</span> * (v1 + v29) +  <span class="number">4</span> * (<span class="number">43</span> * v7 + v42 + <span class="number">40</span> * v17) +  <span class="number">6</span> * (v5 + <span class="number">33</span> * v41 + <span class="number">20</span> * (<span class="number">2</span> * v19 + v21) + <span class="number">24</span> * v23) == <span class="number">407135</span>)</span><br><span class="line">    ,  (<span class="number">111</span> * v19 +  <span class="number">190</span> * v3 +  <span class="number">149</span> * v4 +  <span class="number">173</span> * v28 +  <span class="number">118</span> * v23 +  <span class="number">146</span> * v29 +  <span class="number">179</span> * v10 +  <span class="number">51</span> * v20 +  <span class="number">49</span> * v39 +  <span class="number">61</span> * v11 +  <span class="number">125</span> * v22 +  <span class="number">162</span> * v18 +  <span class="number">214</span> * v35 +  <span class="number">14</span> * (v34 + v24) +  <span class="number">178</span> * (v41 + v16) +  <span class="number">11</span> * (<span class="number">4</span> * v9 + v21 + <span class="number">17</span> * v42) +  <span class="number">65</span> * (v26 + v17 + <span class="number">2</span> * v26 + <span class="number">2</span> * v5) +  <span class="number">4</span> * (v7 + <span class="number">38</span> * v15 + <span class="number">4</span> * v13 + v13 + <span class="number">8</span> * v40 + <span class="number">43</span> * v2) == <span class="number">369835</span>)</span><br><span class="line">    ,  (<span class="number">27</span> * v27 +  <span class="number">223</span> * v6 +  <span class="number">147</span> * v26 +  <span class="number">13</span> * v21 +  <span class="number">35</span> * (v17 + <span class="number">7</span> * v4) +  <span class="number">57</span> * (v19 + v32 + <span class="number">3</span> * v11) +  <span class="number">11</span> * (v1 + <span class="number">17</span> * (v9 + v5) + <span class="number">10</span> * v16 + <span class="number">3</span> * v31) +  <span class="number">2</span>* (<span class="number">53</span> * v23 +  v25 +  <span class="number">38</span> * v15 +  <span class="number">43</span> * v42 +  <span class="number">115</span> * v29 +  <span class="number">61</span> * v22 +  <span class="number">111</span> * (v10 + v40) +  <span class="number">14</span> * (v20 + v7 + <span class="number">2</span> * v7 + <span class="number">8</span> * v28) +  <span class="number">109</span> * v2 +  <span class="number">100</span> * v41 +  <span class="number">63</span> * v8) +  <span class="number">93</span> * v39 +  <span class="number">251</span> * v30 +  <span class="number">131</span> * v3 == <span class="number">393303</span>)</span><br><span class="line">    ,  (<span class="number">116</span> * v9 +  <span class="number">152</span> * v29 +  <span class="number">235</span> * v20 +  <span class="number">202</span> * v18 +  <span class="number">85</span> * (v8 + <span class="number">3</span> * v11) +  <span class="number">221</span> * (v16 + v40) +  <span class="number">125</span> * (v33 + v24) +  <span class="number">7</span> * (<span class="number">19</span> * v4 + <span class="number">9</span> * (v10 + <span class="number">2</span> * v25) + v2 + <span class="number">33</span> * v3 + <span class="number">32</span> * v19) +  <span class="number">3</span> * (<span class="number">71</span> * v39 + <span class="number">43</span> * v22 + <span class="number">32</span> * (v17 + v26) + <span class="number">15</span> * (v5 + v6 + <span class="number">2</span> * v23) + v28 + <span class="number">74</span> * v31 + <span class="number">48</span> * v42) +  <span class="number">10</span> * (v21 + <span class="number">11</span> * v30 + <span class="number">16</span> * v15) +  <span class="number">136</span> * v7 +  <span class="number">106</span> * v1 +  <span class="number">41</span> * v27 == <span class="number">403661</span>)</span><br><span class="line">    ,  (<span class="number">127</span> * v4 +  <span class="number">106</span> * v15 +  <span class="number">182</span> * v30 +  <span class="number">142</span> * v5 +  <span class="number">159</span> * v16 +  <span class="number">17</span> * v1 +  <span class="number">211</span> * v6 +  <span class="number">134</span> * v2 +  <span class="number">199</span> * v7 +  <span class="number">103</span> * v28 +  <span class="number">247</span> * v23 +  <span class="number">122</span> * v9 +  <span class="number">95</span> * v41 +  <span class="number">62</span> * v10 +  <span class="number">203</span> * v39 +  <span class="number">16</span> * v11 +  <span class="number">41</span> * (<span class="number">6</span> * v42 + v25) +  <span class="number">9</span> * (<span class="number">22</span> * v24 + v20 + <span class="number">27</span> * v31 + <span class="number">28</span> * v40) +  <span class="number">10</span> * (v8 + v22 + v36 + <span class="number">8</span> * v17 + <span class="number">2</span> * (v22 + v36 + <span class="number">8</span> * v17) + <span class="number">13</span> * v29) +  <span class="number">6</span> * (<span class="number">23</span> * v27 + v26) +  <span class="number">213</span> * v18 +  <span class="number">179</span> * v3 +  <span class="number">43</span> * v19 == <span class="number">418596</span>)))</span><br><span class="line">s.add(<span class="number">149</span> * v19 +  v1 +  <span class="number">133</span> * v22 +  <span class="number">207</span> * v41 +  <span class="number">182</span> * v26 +  <span class="number">234</span> * v7 +  <span class="number">199</span> * v8 +  <span class="number">168</span> * v21 +  <span class="number">58</span> * v10 +  <span class="number">108</span> * v20 +  <span class="number">142</span> * v18 +  <span class="number">156</span> * (v9 + v25) +  <span class="number">16</span> * (v29 + <span class="number">6</span> * v31) +  <span class="number">126</span> * (v17 + <span class="number">2</span> * v39) +  <span class="number">127</span> * (v4 + <span class="number">2</span> * v27 + v40) +  <span class="number">49</span> * (v30 + <span class="number">4</span> * v16) +  <span class="number">11</span> * (v5 + <span class="number">22</span> * v11) +  <span class="number">5</span> * (v15 + v42 + <span class="number">45</span> * v24 + <span class="number">50</span> * v28) +  <span class="number">109</span> * v2 +  <span class="number">124</span> * v6 +  <span class="number">123</span> * v3 == <span class="number">418697</span>)</span><br><span class="line">pcheck(s,a1)</span><br><span class="line"><span class="comment">#hgame&#123;SMC_4nd_s0lv1ng_equ4t1Ons&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">终于不是被打了</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="wp" scheme="https://www.pri87.vip/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>SICTF#3 wp及复现</title>
    <link href="https://www.pri87.vip/posts/65f5db04.html"/>
    <id>https://www.pri87.vip/posts/65f5db04.html</id>
    <published>2024-02-24T17:32:45.000Z</published>
    <updated>2024-03-03T12:52:36.875Z</updated>
    
    <content type="html"><![CDATA[<p>又被暴打了QAQ</p><h2 id="RE">RE</h2><h3 id="baby-c">baby_c++</h3><p>判断的地方找数组即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line">a = [<span class="number">0x00</span>, <span class="number">0x53</span>, <span class="number">0x49</span>, <span class="number">0x43</span>, <span class="number">0x54</span>, <span class="number">0x46</span>, <span class="number">0x7B</span>, <span class="number">0x34</span>, <span class="number">0x65</span>, <span class="number">0x34</span>, <span class="number">0x37</span>, <span class="number">0x34</span>, <span class="number">0x62</span>, <span class="number">0x38</span>, <span class="number">0x61</span>, <span class="number">0x2D</span>, <span class="number">0x39</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x36</span>, <span class="number">0x2D</span>, <span class="number">0x34</span>, <span class="number">0x35</span>, <span class="number">0x34</span>, <span class="number">0x62</span>, <span class="number">0x2D</span>, <span class="number">0x39</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x36</span>, <span class="number">0x2D</span>, <span class="number">0x64</span>, <span class="number">0x34</span>, <span class="number">0x66</span>, <span class="number">0x35</span>, <span class="number">0x65</span>, <span class="number">0x33</span>, <span class="number">0x37</span>, <span class="number">0x63</span>, <span class="number">0x64</span>, <span class="number">0x35</span>, <span class="number">0x31</span>, <span class="number">0x66</span>, <span class="number">0x7D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>]</span><br><span class="line"></span><br><span class="line">pl(a)</span><br><span class="line"><span class="comment">#SICTF&#123;4e474b8a-9df6-454b-9ea6-d4f5e37cd51f&#125;</span></span><br></pre></td></tr></table></figure><h3 id="ez-pyc">ez_pyc</h3><p>分析逻辑可知，是求解一个数独，同时只要求其中的一个解</p><p>尝试放到网上直接求解，直接出来了</p><p><img src="https://s2.loli.net/2024/02/23/yepYRodIr564mOT.png" alt="image-20240223163033222"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2548656723194376198518245679931748649825721856943342156965374812</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/02/23/UEgNoFqBv1CbdZm.png" alt="image-20240223163250217"></p><blockquote><p>这里我把输入改成十进制了</p></blockquote><p>之后更新一个碰撞md5的方法</p><h3 id="Sweet-Tofu">Sweet_Tofu</h3><p>动调直接找检查数组，判断时要异或0x66</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line">a = [<span class="number">0x00</span>, <span class="number">0x0A</span>, <span class="number">0x07</span>, <span class="number">0x01</span>, <span class="number">0x1D</span>, <span class="number">0x3F</span>, <span class="number">0x09</span>, <span class="number">0x13</span>, </span><br><span class="line">     <span class="number">0x39</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x02</span>, <span class="number">0x39</span>, <span class="number">0x2F</span>, <span class="number">0x39</span>, <span class="number">0x21</span>, </span><br><span class="line">     <span class="number">0x09</span>, <span class="number">0x02</span>, <span class="number">0x41</span>, <span class="number">0x15</span>, <span class="number">0x39</span>, <span class="number">0x25</span>, <span class="number">0x14</span>, <span class="number">0x03</span>, </span><br><span class="line">     <span class="number">0x07</span>, <span class="number">0x12</span>, <span class="number">0x0F</span>, <span class="number">0x09</span>, <span class="number">0x08</span>, <span class="number">0x47</span>, <span class="number">0x22</span>, <span class="number">0x09</span>, </span><br><span class="line">     <span class="number">0x08</span>, <span class="number">0x41</span>, <span class="number">0x12</span>, <span class="number">0x39</span>, <span class="number">0x04</span>, <span class="number">0x03</span>, <span class="number">0x39</span>, <span class="number">0x15</span>, </span><br><span class="line">     <span class="number">0x03</span>, <span class="number">0x14</span>, <span class="number">0x0F</span>, <span class="number">0x09</span>, <span class="number">0x13</span>, <span class="number">0x15</span>, <span class="number">0x47</span>, <span class="number">0x1B</span>]</span><br><span class="line"></span><br><span class="line">pxor(a,<span class="number">0x66</span>)</span><br><span class="line"><span class="comment">#flag&#123;You_and_I_God&#x27;s_Creation!Don&#x27;t_be_serious!&#125;</span></span><br></pre></td></tr></table></figure><h3 id="artbreaker">artbreaker</h3><p>ida打开后发现不能反编译也不能看流程，修改最大节点数量然后跳到流程图</p><p>结果</p><p><img src="https://s2.loli.net/2024/02/23/zvDxTWEJqRoksOM.png" alt="image-20240223164916217"></p><p>居然用流程图把flag画出来了,看未定义变量的wp，说是用了**<a href="https://github.com/JuliaPoo/Artfuscator">Artfuscator</a>**这个来画的画</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;Rabbit_falls_into_rabbit_hole&#125;</span></span><br></pre></td></tr></table></figure><h3 id="BattleCity">BattleCity</h3><p>游戏题，看样子是要通关，在assets中可以看到levels.ldtk文件，用文本文件编辑器打开可以发现里面有各种东西的属性，于是我把每一关的敌人只留了一个，然后把基地的长宽改成0，打完4关，assets里出现了win.png，是二维码，扫码就出来了</p><h3 id="closeme">closeme</h3><p>提示是要用正常方式结束程序</p><p>由于程序一直弹出窗口，因此需要通过messagebox函数的交叉引用找到主函数。或者通过动态调试找到位置。</p><p>然后动调分析一下，发现是一个循环+一些东西，要结束的话只能先break，在205行有唯一的break。同时后面有一个goto，让执行流又回到label_4了，这就</p><p>（看了wp）发现下面有一个xor加密的hint，解密得到</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line">a=[<span class="number">0x23</span>, <span class="number">0x11</span>, <span class="number">0x0D</span>, <span class="number">0x1B</span>, <span class="number">0x13</span>, <span class="number">0x4B</span>, <span class="number">0x18</span>, <span class="number">0x04</span>, <span class="number">0x03</span>, <span class="number">0x0A</span>, <span class="number">0x50</span>, <span class="number">0x08</span>, <span class="number">0x1D</span>, <span class="number">0x06</span>, <span class="number">0x54</span>, <span class="number">0x16</span>, <span class="number">0x1A</span>, <span class="number">0x18</span>, <span class="number">0x0B</span>, <span class="number">0x1C</span>, <span class="number">0x5A</span>, <span class="number">0x0F</span>, <span class="number">0x14</span>, <span class="number">0x18</span>, <span class="number">0x5E</span>, <span class="number">0x12</span>, <span class="number">0xE5</span>, <span class="number">0xF2</span>, <span class="number">0xF1</span>, <span class="number">0xE2</span>, <span class="number">0xE3</span>, <span class="number">0xE0</span>, <span class="number">0xE4</span>, <span class="number">0xE8</span>, <span class="number">0xF0</span>, <span class="number">0xA9</span>, <span class="number">0xE8</span>, <span class="number">0xF2</span>, <span class="number">0xAC</span>, <span class="number">0xEE</span>, <span class="number">0xE2</span>, <span class="number">0xE6</span>, <span class="number">0xF3</span>, <span class="number">0xFA</span>, <span class="number">0xB2</span>, <span class="number">0xF3</span>, <span class="number">0xCD</span>, <span class="number">0xF0</span>, <span class="number">0xE5</span>, <span class="number">0xF7</span>, <span class="number">0xB8</span>, <span class="number">0xF6</span>, <span class="number">0xE8</span>, <span class="number">0xBB</span>, <span class="number">0xFC</span>, <span class="number">0xD3</span>, <span class="number">0xF1</span>, <span class="number">0xFF</span>, <span class="number">0x8C</span>, <span class="number">0x81</span>, <span class="number">0xCB</span>, <span class="number">0xD7</span>, <span class="number">0x84</span>, <span class="number">0xD2</span>, <span class="number">0xCF</span>, <span class="number">0xCB</span>, <span class="number">0xC4</span>, <span class="number">0x89</span>, <span class="number">0xC8</span>, <span class="number">0xCE</span>, <span class="number">0x8C</span>, <span class="number">0xDE</span>, <span class="number">0xDA</span>, <span class="number">0xC0</span>, <span class="number">0xC2</span>, <span class="number">0xD4</span>, <span class="number">0xD6</span>, <span class="number">0x9D</span>, <span class="number">0x94</span>, <span class="number">0xFF</span>, <span class="number">0xC3</span>, <span class="number">0xC4</span>, <span class="number">0xCC</span>, <span class="number">0x99</span>, <span class="number">0xD9</span>, <span class="number">0xD3</span>, <span class="number">0xD3</span>, <span class="number">0xD2</span>, <span class="number">0xCD</span>, <span class="number">0xDA</span>, <span class="number">0xE0</span>, <span class="number">0x98</span>, <span class="number">0xA7</span>, <span class="number">0xB0</span>, <span class="number">0xEB</span>, <span class="number">0x8B</span>, <span class="number">0xA9</span>, <span class="number">0xEF</span>, <span class="number">0xF9</span>, <span class="number">0xE6</span>, <span class="number">0xFA</span>, <span class="number">0xE2</span>, <span class="number">0xEC</span>, <span class="number">0xA4</span>, <span class="number">0xA0</span>, <span class="number">0xEF</span>, <span class="number">0xB1</span>, <span class="number">0xF1</span>, <span class="number">0xB1</span>, <span class="number">0xB6</span>, <span class="number">0xA6</span>, <span class="number">0xA1</span>, <span class="number">0xB7</span>, <span class="number">0xBE</span>, <span class="number">0xB6</span>, <span class="number">0xF9</span>, <span class="number">0xB5</span>, <span class="number">0xA9</span>, <span class="number">0xB8</span>, <span class="number">0xB8</span>, <span class="number">0xAC</span>, <span class="number">0xFF</span>, <span class="number">0x97</span>, <span class="number">0x89</span>, <span class="number">0x8B</span>, <span class="number">0x80</span>, <span class="number">0x8C</span>, <span class="number">0xC5</span>, <span class="number">0x8F</span>, <span class="number">0x94</span>, <span class="number">0xC8</span>, <span class="number">0x9D</span>, <span class="number">0x82</span>, <span class="number">0x8E</span>, <span class="number">0xCC</span>, <span class="number">0x8B</span>, <span class="number">0x82</span>, <span class="number">0x8E</span>, <span class="number">0x97</span>, <span class="number">0xDD</span>, <span class="number">0xD2</span>, <span class="number">0x80</span>, <span class="number">0x81</span>, <span class="number">0x96</span>, <span class="number">0x9E</span>, <span class="number">0xD7</span>, <span class="number">0x99</span>, <span class="number">0x8A</span>, <span class="number">0xDA</span>, <span class="number">0xCB</span>, <span class="number">0xCD</span>, <span class="number">0xCD</span>, <span class="number">0xCE</span>, <span class="number">0xCE</span>,<span class="number">0x31</span>, <span class="number">0x31</span>, <span class="number">0x32</span>, <span class="number">0x2D</span>, <span class="number">0x24</span>, <span class="number">0x55</span>, <span class="number">0x6A</span>, <span class="number">0x62</span>, <span class="number">0x69</span>, <span class="number">0x7A</span>, <span class="number">0x6F</span>, <span class="number">0x2B</span>, <span class="number">0x7F</span>, <span class="number">0x78</span>, <span class="number">0x6C</span>, <span class="number">0x62</span>, <span class="number">0x79</span>, <span class="number">0x65</span>, <span class="number">0x32</span>, <span class="number">0x75</span>, <span class="number">0x78</span>, <span class="number">0x74</span>, <span class="number">0x71</span>, <span class="number">0x37</span>, <span class="number">0x6F</span>, <span class="number">0x71</span>, <span class="number">0x73</span>, <span class="number">0x78</span>, <span class="number">0x74</span>, <span class="number">0x3D</span>, <span class="number">0x6A</span>, <span class="number">0x77</span>, <span class="number">0x45</span>, <span class="number">0x01</span>, <span class="number">0x44</span>, <span class="number">0x4C</span>, <span class="number">0x56</span>, <span class="number">0x48</span>, <span class="number">0x47</span>, <span class="number">0x53</span>, <span class="number">0x08</span>, <span class="number">0x45</span>, <span class="number">0x43</span>, <span class="number">0x40</span>, <span class="number">0x49</span>, <span class="number">0x0D</span>, <span class="number">0x4E</span>, <span class="number">0x7C</span>, <span class="number">0x79</span>, <span class="number">0x72</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x4F</span>, <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x08</span>, <span class="number">0x0B</span>, <span class="number">0x0B</span>, <span class="number">0x0C</span>, <span class="number">0x40</span>, <span class="number">0x5E</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)):</span><br><span class="line">    a[i] ^= i+<span class="number">102</span></span><br><span class="line">pl(a)</span><br><span class="line"><span class="comment">#Every time you close the messagebox by click `Yes` or `No`, it will be stored. Just choose Yes/No(1/0) in a certain order which is the flag, such as 01001100. Please submit flag which the format like `SICTF&#123;01001100&#125;`</span></span><br></pre></td></tr></table></figure><p>那么根据上面的break，可以看出需要输入16次</p><p>但是要检测到按键按的是哪个</p><p>根据messageboxW：yes是6，no是7。查找后可以发现</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( v2 == <span class="number">5</span> * (v2 / <span class="number">5</span>) )</span><br><span class="line">      &#123;</span><br><span class="line">        v63 = (<span class="type">const</span> WCHAR *)&amp;unk_140022B10;</span><br><span class="line">        v64 = (__int64)&amp;unk_140022B3C;</span><br><span class="line">        LOWORD(Size) = <span class="number">0</span>;</span><br><span class="line">        LODWORD(v66) = <span class="number">1</span>;</span><br><span class="line">        sub_140003240(&amp;v70, &amp;v63);</span><br><span class="line">        lpWindowName = v71;</span><br><span class="line">        v63 = (<span class="type">const</span> WCHAR *)&amp;unk_140022B3C;</span><br><span class="line">        v64 = (__int64)&amp;unk_140022B5D;</span><br><span class="line">        LOWORD(Size) = <span class="number">0</span>;</span><br><span class="line">        LODWORD(v66) = <span class="number">1</span>;</span><br><span class="line">        sub_140003240(lpCaption, &amp;v63);</span><br><span class="line">        v73 = (<span class="type">unsigned</span> __int64)lpCaption[<span class="number">1</span>];</span><br><span class="line">        choose = MessageBoxW(<span class="number">0</span>i64, lpWindowName, lpCaption[<span class="number">1</span>], <span class="number">4u</span>);</span><br><span class="line">        <span class="keyword">if</span> ( lpCaption[<span class="number">0</span>] )</span><br><span class="line">          sub_1400038E0(v73, <span class="number">2</span> * (__int64)lpCaption[<span class="number">0</span>], <span class="number">2</span>i64);</span><br><span class="line">        <span class="keyword">if</span> ( v70 )</span><br><span class="line">          sub_1400038E0(lpWindowName, <span class="number">2</span>i64 * (_QWORD)v70, <span class="number">2</span>i64);</span><br><span class="line">        this_choose_ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> ( choose != <span class="number">6</span> )                      <span class="comment">// 否</span></span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( choose != <span class="number">7</span> )                    <span class="comment">// 否，不可能进入</span></span><br><span class="line">          &#123;</span><br><span class="line">            v63 = (<span class="type">const</span> WCHAR *)&amp;off_140022B98;</span><br><span class="line">            v64 = <span class="number">1</span>i64;</span><br><span class="line">            Size = (<span class="type">size_t</span>)&amp;off_140022888;</span><br><span class="line">            v66 = <span class="number">0</span>i64;</span><br><span class="line">            sub_1400214A0(&amp;v63, &amp;off_140022BA8);</span><br><span class="line">          &#125;</span><br><span class="line">          this_choose_ans = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cont2 = cont;                           <span class="comment">// 是</span></span><br><span class="line">        <span class="keyword">if</span> ( cont == v59 )                      <span class="comment">// ?</span></span><br><span class="line">        &#123;</span><br><span class="line">          sub_140003820(&amp;v59);</span><br><span class="line">          cont2 = cont;</span><br><span class="line">        &#125;</span><br><span class="line">        *(_BYTE *)(save_place + cont2) = this_choose_ans;</span><br><span class="line">        <span class="keyword">if</span> ( ++cont == <span class="number">16</span> )</span><br><span class="line">          <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>修正this_choose_ans的值，是==1，否==0,最后存在save_place中</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">sp0 = *(<span class="type">unsigned</span> __int8 *)save_place;</span><br><span class="line"><span class="keyword">if</span> ( sp0 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp1 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp1 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp2 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">2</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp2 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp3 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp3 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp4 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">4</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp4 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp5 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">5</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp5 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp6 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">6</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp6 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp7 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">7</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp7 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp8 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">8</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp8 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp9 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">9</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp9 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp10 = (LPCWSTR)*(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span> ( (<span class="type">unsigned</span> __int64)sp10 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp11 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">11</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp11 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp12 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">12</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp12 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp13 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">13</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp13 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp14 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">14</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp14 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">sp15 = *(<span class="type">unsigned</span> __int8 *)(save_place + <span class="number">15</span>);</span><br><span class="line"><span class="keyword">if</span> ( sp15 &gt; <span class="number">1</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_3;</span><br><span class="line">final = sp0</span><br><span class="line">      + <span class="number">10</span></span><br><span class="line">      * (sp1</span><br><span class="line">       + <span class="number">10</span></span><br><span class="line">       * (sp2</span><br><span class="line">        + <span class="number">10</span></span><br><span class="line">        * (sp3</span><br><span class="line">         + <span class="number">10</span></span><br><span class="line">         * (sp4</span><br><span class="line">          + <span class="number">10</span></span><br><span class="line">          * (sp5</span><br><span class="line">           + <span class="number">10</span></span><br><span class="line">           * (sp6</span><br><span class="line">            + <span class="number">10</span></span><br><span class="line">            * (sp7</span><br><span class="line">             + <span class="number">10</span></span><br><span class="line">             * (sp8</span><br><span class="line">              + <span class="number">10</span> * (sp9 + <span class="number">10</span>i64 * (_QWORD)&amp;sp10[<span class="number">50000</span> * sp15 + <span class="number">5000</span> * sp14 + <span class="number">500</span> * sp13 + <span class="number">50</span> * sp12 + <span class="number">5</span> * sp11])))))))));</span><br></pre></td></tr></table></figure><p>经过这里后label_4会到第一个while（1）的位置最后,那只能继续分析final，它储存了所有输入内容计算后的最终值，由于先输入sp0，然后1。。。说明高位后输入，低位先输入</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( (<span class="type">unsigned</span> __int8)sub_14001F580(&amp;final, &amp;zero) )</span><br></pre></td></tr></table></figure><p>并且由于提示的按一定方式点击，说明肯定有检测的存在</p><p>在label_3的位置：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( (what &amp; <span class="number">0xFFFF0000</span>) != <span class="number">-1443823616</span> )</span><br><span class="line">  &#123;</span><br><span class="line">LABEL_3:</span><br><span class="line">    cont = <span class="number">0</span>i64;</span><br><span class="line">    <span class="keyword">goto</span> LABEL_4;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>只要等于就可以往后走</p><p>反异或一下what的值等于1443758080/560E 0000</p><p>动态调试，输入测试，发现sp0到15就是放入的值1010101，唯一奇怪的是sp13和sp11是特定的值0x800和0x90000000</p><p><s>继续看what的生成</s>看不出来，试试代数据</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1111 </span><span class="number">1111 </span><span class="number">0000 </span><span class="number">0000</span> <span class="string">》</span>           <span class="number">1111 </span><span class="number">1111 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000</span></span><br><span class="line"></span><br><span class="line"><span class="number">0000 </span><span class="number">1111 </span><span class="number">1111 </span><span class="number">1111</span> <span class="string">》</span> <span class="number">0011 </span><span class="number">1111 </span><span class="number">1111 </span><span class="number">1100 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000</span></span><br><span class="line"></span><br><span class="line"><span class="number">0000 </span><span class="number">0000 </span><span class="number">1111 </span><span class="number">1111</span> <span class="string">》</span> <span class="number">0011 </span><span class="number">1111 </span><span class="number">1100 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000</span></span><br><span class="line"></span><br><span class="line"><span class="number">1001 </span><span class="number">1001 </span><span class="number">1001 </span><span class="number">1001</span> <span class="string">》</span> <span class="number">0110 </span><span class="number">0110 </span><span class="number">0110 </span><span class="number">0110 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000</span></span><br></pre></td></tr></table></figure><p>根据第一组数据感觉是倒序排入，上面final也是倒序的。倒序一下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0000 </span><span class="number">0000 </span><span class="number">1111 </span><span class="number">1111</span> <span class="string">》</span>           <span class="number">1111 </span><span class="number">1111 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000</span></span><br><span class="line"></span><br><span class="line"><span class="number">1111 </span><span class="number">1111 </span><span class="number">1111 </span><span class="number">0000</span> <span class="string">》</span> <span class="number">0011 </span><span class="number">1111 </span><span class="number">1111 </span><span class="number">1100 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000</span></span><br><span class="line"></span><br><span class="line"><span class="number">1111 </span><span class="number">1111 </span><span class="number">0000 </span><span class="number">0000</span> <span class="string">》</span> <span class="number">0011 </span><span class="number">1111 </span><span class="number">1100 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000</span></span><br><span class="line"></span><br><span class="line"><span class="number">1001 </span><span class="number">1001 </span><span class="number">1001 </span><span class="number">1001</span> <span class="string">》</span> <span class="number">0110 </span><span class="number">0110 </span><span class="number">0110 </span><span class="number">0110 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000 </span><span class="number">0000</span></span><br></pre></td></tr></table></figure><p>第四个看得很明显如果不看后4位是最后两个变到了前面</p><p>试一试最后的what是不是这样变的</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">560e0000</span>：</span><br><span class="line"><span class="number">0101011000001110</span></span><br><span class="line"><span class="number">0101100000111001</span></span><br><span class="line"><span class="symbol">0101 </span><span class="number">1000</span> <span class="number">0011</span> <span class="number">1001</span></span><br></pre></td></tr></table></figure><p>不对？重新看了一遍发现是与运算，不是异或，那就是说最后的A9F1就是结果的末值</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1010 </span><span class="number">1001 </span><span class="number">1111 </span><span class="number">0001</span></span><br><span class="line"><span class="number">1010 </span><span class="number">0111 </span><span class="number">1100 </span><span class="number">0110</span></span><br><span class="line"><span class="number">0110 </span><span class="number">0011 </span><span class="number">1110 </span><span class="number">0101</span></span><br><span class="line"><span class="string">得到</span></span><br><span class="line"><span class="string">SICTF&#123;0110001111100101&#125;</span></span><br></pre></td></tr></table></figure><p>这道题告诉我看到这种抽象的题要多调试，静下来分析QAQ</p><h3 id="virus-nlys1s-待补充">virus-nlys1s[待补充]</h3><p>居然是病毒样本，没玩过，之后再说</p><hr><h2 id="CRYPTO">CRYPTO</h2><h3 id="vigenere">vigenere</h3><p>从名字可以看出是维吉尼亚密码</p><p>第二段可以明显看出有一段是SICTF{}，进入</p><p><a href="https://www.dcode.fr/vigenere-cipher%E8%BF%99%E4%B8%AA%E7%BD%91%E7%AB%99%EF%BC%8C%E8%BE%93%E5%85%A5%E5%AF%86%E6%96%87%E5%92%8C%E5%B7%B2%E7%9F%A5%E7%9A%84%E6%98%8E%E6%96%87">https://www.dcode.fr/vigenere-cipher这个网站，输入密文和已知的明文</a></p><p>得key：SAATF和明文</p><h3 id="SuperbRSA">SuperbRSA</h3><p>这个是变体的共模攻击</p><p>通过e1，e2求gcd，最后的结果要取gcd的根</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">e1=<span class="number">55</span></span><br><span class="line">e2=<span class="number">200</span></span><br><span class="line">n= <span class="number">19006830358118902392432453595802675566730850352890246995920642811967821259388009049803513102750594524106471709641202019832682438027312468849299985832675191795417160553379580813410722359089872519372049229233732405993062464286888889084640878784209014165871696882564834896322508054231777967011195636564463806270998326936161449009988434249178477100127347406759932149010712091376183710135615375272671888541233275415737155953323133439644529709898791881795186775830217884663044495979067807418758455237701315019683802437323177125493076113419739827430282311018083976114158159925450746712064639569301925672742186294237113199023</span></span><br><span class="line">c1= <span class="number">276245243658976720066605903875366763552720328374098965164676247771817997950424168480909517684516498439306387133611184795758628248588201187138612090081389226321683486308199743311842513053259894661221013008371261704678716150646764446208833447643781574516045641493770778735363586857160147826684394417412837449465273160781074676966630398315417741542529612480836572205781076576325382832502694868883931680720558621770570349864399879523171995953720198118660355479626037129047327185224203109006251809257919143284157354935005710902589809259500117996982503679601132486140677013625335552533104471327456798955341220640782369529</span></span><br><span class="line">c2= <span class="number">11734019659226247713821792108026989060106712358397514827024912309860741729438494689480531875833287268454669859568719053896346471360750027952226633173559594064466850413737504267807599435679616522026241111887294138123201104718849744300769676961585732810579953221056338076885840743126397063074940281522137794340822594577352361616598702143477379145284687427705913831885493512616944504612474278405909277188118896882441812469679494459216431405139478548192152811441169176134750079073317011232934250365454908280676079801770043968006983848495835089055956722848080915898151352242215210071011331098761828031786300276771001839021</span></span><br><span class="line"></span><br><span class="line">g,x,y=gmpy2.gcdext(e1,e2)</span><br><span class="line"></span><br><span class="line">m=<span class="built_in">pow</span>(c1,x,n)*<span class="built_in">pow</span>(c2,y,n)%n</span><br><span class="line">m=gmpy2.iroot(m,g)[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"><span class="comment">#b&#x27;SICTF&#123;S0_Great_RSA_Have_Y0u_Learned?&#125;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="easyLattice-待补充">easyLattice[待补充]</h3><p>感觉在考逆元和模的基本运算？但是没做出来悲伤。</p><p>翻wp发现是考格密码，按照<a href="https://blog.csdn.net/u010883831/article/details/128262134">VSCode配置sage教程 不用notebook直接运行+代码高亮+命令行输出_sage windows-CSDN博客</a>安装好环境，（最后失败了，于是把库全放到自带的解释器里面）</p><p>没见过呀（TVT），看不懂，之后再说</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#sage</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">h = <span class="number">9848463356094730516607732957888686710609147955724620108704251779566910519170690198684628685762596232124613115691882688827918489297122319416081019121038443</span></span><br><span class="line">p = <span class="number">11403618200995593428747663693860532026261161211931726381922677499906885834766955987247477478421850280928508004160386000301268285541073474589048412962888947</span>     </span><br><span class="line">T = <span class="number">2</span>^<span class="number">250</span></span><br><span class="line"></span><br><span class="line">L = Matrix(ZZ,[[<span class="number">1</span>,T*h],[<span class="number">0</span>,T*p]])</span><br><span class="line"></span><br><span class="line">f,g = L.LLL()[<span class="number">0</span>]</span><br><span class="line">f,g = <span class="built_in">abs</span>(f),<span class="built_in">abs</span>(g)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(<span class="built_in">int</span>(f)))</span><br><span class="line"><span class="comment"># SICTF&#123;e3fea01c-18f3-4638-9544-9201393940a9&#125;</span></span><br></pre></td></tr></table></figure><p>大概是说<br>$$<br>h = (f^{-1}g) \mod p<br>$$</p><p>$$<br>g = fh+kp<br>$$</p><h1>$$<br>\begin{pmatrix}<br>f &amp; k \<br>\end{pmatrix}<br>\times<br>\begin{pmatrix}<br>1 &amp; h \<br>0 &amp; p<br>\end{pmatrix}</h1><p>\begin{pmatrix}<br>f &amp; g \<br>\end{pmatrix}<br>$$</p><h3 id="gggcd-待补充">gggcd[待补充]</h3><p>这个第一次见到诶，好怪：同e，n不同m，$m_2=f(m_1)$</p><p>m2是m1的线性变换</p><p>然后已知c1，c2，n，e</p><p>查了查，原来这个叫相关消息攻击</p><p>通过求可能的g再求其gcd（g1，g2）得到m</p><p>看大佬们的wp，exp都是用sage写的，我安装好后也不能导入python，但是直接用sage自带的好像可以，不过不能导入Crypto.Util.number，我就先解出m再longtobytes</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">....: c2 = <span class="number">205635624489021368248826364689528951802539834493392269547383991633413</span></span><br><span class="line">....: <span class="number">32272571882209784996486250189912121870946577915881638415484043534161071782</span></span><br><span class="line">....: <span class="number">38735899371291867878739806568899981073418921390469351451959495552246015176</span></span><br><span class="line">....: <span class="number">94795153230498219402854082280557713496709195875609525488767962526341049263</span></span><br><span class="line">....: <span class="number">67078177733076253</span></span><br><span class="line">....: e = <span class="number">65537</span></span><br><span class="line">....: a = <span class="number">233</span></span><br><span class="line">....: b = <span class="number">9527</span></span><br><span class="line">....:</span><br><span class="line">....: <span class="keyword">import</span> binascii</span><br><span class="line">....: <span class="keyword">def</span> <span class="title function_">franklinReiter</span>(<span class="params">n,e,c1,c2</span>):</span><br><span class="line">....:     PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">....:     g1 = (x)^e - c1</span><br><span class="line">....:     g2 = (<span class="number">233</span>*x+<span class="number">9527</span>)^e - c2</span><br><span class="line">....:</span><br><span class="line">....:     <span class="keyword">def</span> <span class="title function_">gcd</span>(<span class="params">g1, g2</span>):</span><br><span class="line">....:         <span class="keyword">while</span> g2:</span><br><span class="line">....:             g1, g2 = g2, g1 % g2</span><br><span class="line">....:         <span class="keyword">return</span> g1.monic()</span><br><span class="line">....:     <span class="keyword">return</span> -gcd(g1, g2)[<span class="number">0</span>]</span><br><span class="line">....:</span><br><span class="line">....: m=franklinReiter(n,e,c1,c2)</span><br><span class="line">....: <span class="built_in">print</span>((m))</span><br><span class="line"><span class="number">11658736990073968144116409270602503966776095409763057826884617698882016691134900406351481309826095854973</span></span><br></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">print</span>(long_to_bytes(<span class="number">11658736990073968144116409270602503966776095409763057826884617698882016691134900406351481309826095854973</span>))</span><br><span class="line"><span class="attribute">b</span>&#x27;SICTF&#123;<span class="number">45115</span>fb2-<span class="number">84</span>d6-<span class="number">4369</span>-<span class="number">88</span>c2-c8c3d72b4c55&#125;&#x27;</span><br></pre></td></tr></table></figure><h3 id="签到，确信-待补充">签到，确信![待补充]</h3><p>我不解，但我大受震撼</p><h3 id="铜匠-待补充">铜匠[待补充]</h3><p>似乎这个是已知p的高位</p><p>但是转5进制之后似乎不能准确表示p的高位，难度是把n转5进制？</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">from</span> Crypto.Util.number import *</span><br><span class="line"><span class="attribute">import</span> gmpy2</span><br><span class="line"><span class="attribute">from</span> tqdm import *</span><br><span class="line"></span><br><span class="line"><span class="attribute">leak</span> = <span class="string">&quot;2011133132443111302000224204142244403203442000141102312242343143241244243020003333022112141220422134444214010012&quot;</span></span><br><span class="line"><span class="attribute">n</span> = <span class="number">85988668134257353631742597258304937106964673395852009846703777410474172989069717247424903079500594820235304351355706519069516847244761609583338251489134035212061654870087550317540291994559481862615812258493738064606592165529948648774081655902831715928483206013332330998262897765489820121129058926463847702821</span></span><br><span class="line"><span class="attribute">e</span> = <span class="number">65537</span></span><br><span class="line"><span class="attribute">c</span> = <span class="number">64708526479058278743788046708923650158905888858865427385501446781738669889375403360886995849554813207230509920789341593771929287415439407977283018525484281064769128358863513387658744063469874845446480637925790150835186431234289848506337341595817156444941964510251032210939739594241869190746437858135599624562</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">def</span> five_to_ten(num):</span><br><span class="line">    <span class="attribute">temp</span> = <span class="number">0</span></span><br><span class="line">    <span class="attribute">i</span> = <span class="number">109</span></span><br><span class="line">    <span class="attribute">for</span> j in reversed(num):</span><br><span class="line">        <span class="attribute">temp</span> += int(j) * <span class="number">5</span>**i</span><br><span class="line">        <span class="attribute">i</span> += <span class="number">1</span></span><br><span class="line">    <span class="attribute">return</span> temp</span><br><span class="line"></span><br><span class="line"><span class="attribute">leak</span> = five_to_ten(leak)</span><br><span class="line"><span class="attribute">gift</span> = leak &gt;&gt; <span class="number">256</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">for</span> i in trange(<span class="number">2</span>^<span class="number">8</span>):</span><br><span class="line">    <span class="attribute">ph</span> = gift &lt;&lt; <span class="number">8</span></span><br><span class="line">    <span class="attribute">phigh</span> = ph + i</span><br><span class="line">    <span class="attribute">phigh</span> = phigh &lt;&lt; <span class="number">248</span></span><br><span class="line">    <span class="attribute">R</span>.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">    <span class="attribute">f</span> = phigh + x</span><br><span class="line">    <span class="attribute">res</span> = f.small_roots(X=<span class="number">2</span>^<span class="number">248</span>, beta=<span class="number">0</span>.<span class="number">4</span>, epsilon=<span class="number">0</span>.<span class="number">01</span>)</span><br><span class="line">    <span class="attribute">if</span> res !=<span class="meta"> []:</span></span><br><span class="line"><span class="meta">        p = phigh + int(res[0])</span></span><br><span class="line"><span class="meta">        q = n // p</span></span><br><span class="line"><span class="meta">        d = gmpy2.invert(e,(p-1)*(q-1))</span></span><br><span class="line"><span class="meta">        m = pow(c,d,n)</span></span><br><span class="line"><span class="meta">        print(f&quot;i = &#123;i&#125;&quot;)</span></span><br><span class="line"><span class="meta">        print(long_to_bytes(int(m)))</span></span><br><span class="line"><span class="meta">        break</span></span><br><span class="line"><span class="meta"></span></span><br></pre></td></tr></table></figure><h3 id="babyRSA-待补充">babyRSA[待补充]</h3><h3 id="easy-or-baby-RSA-待补充">easy_or_baby_RSA[待补充]</h3><h3 id="2024-New-Setback-待补充">2024_New_Setback[待补充]</h3><hr><h2 id="MISC">MISC</h2><h3 id="签到">签到</h3><p>略</p><h3 id="geekchallenge">geekchallenge</h3><p>这个要连接一个地址，连接后是一个猜数字游戏，114位，一共5种字符，一开始尝试了很久不知道为什么错了，最后发现它延迟一次显示，上一次的结果出现在下一次在，那么解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有可见字符</span></span><br><span class="line">visible_chars = string.printable[:-<span class="number">6</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个socket对象</span></span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 连接到服务器</span></span><br><span class="line">s.connect((<span class="string">&quot;yuanshen.life&quot;</span>, <span class="number">34757</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个114位的列表，初始值为None</span></span><br><span class="line">password = [<span class="literal">None</span>] * <span class="number">114</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存上一次的字符</span></span><br><span class="line">last_char = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 循环遍历所有可能的字符</span></span><br><span class="line"><span class="keyword">for</span> char <span class="keyword">in</span> visible_chars:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">all</span>(v <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">for</span> v <span class="keyword">in</span> password):</span><br><span class="line">        <span class="comment"># 将guess设为password并将空位全部改为char</span></span><br><span class="line">        guess = <span class="string">&#x27;&#x27;</span>.join([v <span class="keyword">if</span> v <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span> <span class="keyword">else</span> char <span class="keyword">for</span> v <span class="keyword">in</span> password]) + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 否则，guess为114个相同的字符</span></span><br><span class="line">        guess = char * <span class="number">114</span> + <span class="string">&#x27;\n&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 发送字符串到服务器</span></span><br><span class="line">    s.send(guess.encode())</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 接收服务器的响应</span></span><br><span class="line">    response = s.recv(<span class="number">1024</span>).decode()</span><br><span class="line">    <span class="built_in">print</span>(guess)</span><br><span class="line">    <span class="built_in">print</span>(response)</span><br><span class="line">    <span class="comment"># 如果response中有&#x27;1&#x27;，就把上一次的char放入password中的每一个返回的&#x27;1&#x27;的位置</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;1&#x27;</span> <span class="keyword">in</span> response <span class="keyword">and</span> last_char <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">for</span> i, bit <span class="keyword">in</span> <span class="built_in">enumerate</span>(response):</span><br><span class="line">            <span class="keyword">if</span> i &lt; <span class="built_in">len</span>(password) <span class="keyword">and</span> bit == <span class="string">&#x27;1&#x27;</span><span class="keyword">and</span> password[i] <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">                password[i] = last_char</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新上一次的字符</span></span><br><span class="line">    last_char = char</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">filter</span>(<span class="literal">None</span>, password)))</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    message = <span class="built_in">input</span>(<span class="string">&quot;请输入你要发送的消息：\n&quot;</span>)</span><br><span class="line">    message += <span class="string">&#x27;\n&#x27;</span></span><br><span class="line">    s.send(message.encode())</span><br><span class="line">    response = s.recv(<span class="number">1024</span>).decode()</span><br><span class="line">    <span class="built_in">print</span>(response)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 关闭连接</span></span><br><span class="line">s.close()</span><br><span class="line"><span class="comment">#SICTF&#123;18e62b78-c753-407c-9b0f-aa386fb4d6fd&#125;</span></span><br></pre></td></tr></table></figure><h3 id="New-year-s-regret">New_year`s regret</h3><p>给了一个压缩包，有秘密，但是说了格式：xxxxSICTF</p><p>那就掩码爆破：格式是???SICTF</p><p>出来是2024SICTF</p><p>解压压缩包得到一个task.png和output.txt，同时压缩包注释表示压缩包有额外数据，用010editor查看得：43637d135333</p><p>task.png是400x400的类似二维码的黑白图像，一行25个格</p><p>output.txt是一堆0101二进制串，22464个字符加一个换行符</p><p>那么很有可能要把output转为图片，但是并不知道要怎么转换。</p><p>然后这里的额外数据43637d135333实在想不出来是什么意思，看wp后才知道要反转之后from hex：351×64刚好22464</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_image_from_file</span>(<span class="params">filename, width, height</span>):</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        data = file.read().replace(<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    img = Image.new(<span class="string">&#x27;RGB&#x27;</span>, (width, height), <span class="string">&quot;white&quot;</span>)</span><br><span class="line">    pixels = img.load()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(data)):</span><br><span class="line">        row = i // width</span><br><span class="line">        col = i % width</span><br><span class="line">        <span class="keyword">if</span> data[i] == <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">            pixels[col, row] = (<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>)  </span><br><span class="line">        <span class="keyword">elif</span> data[i] == <span class="string">&#x27;0&#x27;</span>:</span><br><span class="line">            pixels[col, row] = (<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>)  </span><br><span class="line"></span><br><span class="line">    img.save(<span class="string">&#x27;output.png&#x27;</span>)</span><br><span class="line"></span><br><span class="line">create_image_from_file(<span class="string">&#x27;output.txt&#x27;</span>,<span class="number">351</span>,<span class="number">64</span>)</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/02/21/GcEh8Qu1xPMSW3o.png" alt="output"></p><p>得到一张五线谱，这个叫Music Sheet Cipher</p><p>通过网站：<a href="https://www.dcode.fr/music-sheet-cipher">Music Sheet Cipher - Online Notes Decoder, Encoder, Translator (dcode.fr)</a></p><p>来解码</p><p>得到：PUTITALLTOGETHER/put_it_all_together</p><p>以zip形式打开task.png</p><p>发现有base64编码的字符,解码后好像还是base64，多试几次，最后发现35次的时候有PNG的标志，37次就不能继续了，把它输出成png，是一个二维码，扫码然后获得部分flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;result.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    data = file.readline().strip()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">35</span>):</span><br><span class="line">    data = base64.b64decode(data)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(data)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;something.png&#x27;</span>,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">    file.write(data)</span><br></pre></td></tr></table></figure><figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SICTF&#123;Congratuation_to_you!</span><br></pre></td></tr></table></figure><p>再查看task.png,二进制打开看有没有什么标志，除了50 4B 03 04还有一个PNG，复制PNG保存打开是一张武器表，根据提示：你知道这是几星吗想到要找武器星级</p><p><img src="https://s2.loli.net/2024/02/21/EATqRXUfzZDg5F4.png" alt="k"></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">44664654464566654465645644544664654654644546445446646565444454544664654664544545646454544454466465465645644</span><br></pre></td></tr></table></figure><p>结果是如上。四五六有三种变化，猜莫斯密码</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">..--.-</span> <span class="string">..-.</span> <span class="params">---</span> <span class="string">..-</span> -. -<span class="string">..</span> <span class="string">..--.-</span> <span class="string">.-</span> <span class="string">.-..</span> <span class="string">.-..</span> <span class="string">..--.-</span> - <span class="string">....</span> . <span class="string">..--.-</span> <span class="string">.--.</span> <span class="string">..</span> . -<span class="string">.-.</span> . <span class="string">...</span> <span class="string">..--.-</span> <span class="string">.-</span> -. -<span class="string">..</span></span><br></pre></td></tr></table></figure><figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">_FOUND_ALL_THE_PIECES_AND</span></span><br></pre></td></tr></table></figure><p>拼接flag</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">SICTF</span><span class="template-variable">&#123;Congratulation_to_you!_found_all_the_pieces_and_put_it_all_together&#125;</span></span><br></pre></td></tr></table></figure><h3 id="WHOWHOWHO">WHOWHOWHO</h3><p>又是有密码的压缩包,但是有提示：6位数小写密码，爆破：qweqwe</p><p>二号位置有空白字符，很明显是0宽隐写,网上找工具解密</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">U2FsdGVkX19uvldJ6CGUNff3B28QEdIjZqgUh98K</span>+/<span class="number">0</span>J16ELU8WVQydohw4P5+<span class="number">2</span>M</span><br><span class="line"><span class="attribute">jbhTLQHNOpcoOd7kSRgy8pwpovCmimdD8M0IbYUeXjNKYePL</span>/WP4PCMaOJHAW3HR</span><br><span class="line"><span class="attribute">b7IEoDDH1NYh3o5NwMmcFEqy1ujf72VgQIQkaeYFFFE</span>=</span><br></pre></td></tr></table></figure><p>base64，有三行，直接解密，解完发现是乱码，但是一开头说salted，加盐了</p><p>上网查时发现rabbit加密开头一定是U2FsdGVkX1，base64之后就是salted_所以尝试用这个解密，需要key才可以，根据txt文件中的谁是渣男，尝试：shumu</p><p>成功</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GTAGAGCTAGTCCTT&#123;GGGTCACGGTTC_GGGTCACGGTTC_GAACGGTTC_GTAGTG_GCTTC<span class="built_in">A_GTAGACGTGGCGGTG</span>_GTAGACTC<span class="built_in">A_TATGACCGG</span>_GCTCGGGCT&#125;</span><br></pre></td></tr></table></figure><p>这个是dna加密，好像没有直接解密的，但是有脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">mapping = &#123;</span><br><span class="line">        <span class="string">&#x27;AAA&#x27;</span>:<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;AAC&#x27;</span>:<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;AAG&#x27;</span>:<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;AAT&#x27;</span>:<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;ACA&#x27;</span>:<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;ACC&#x27;</span>:<span class="string">&#x27;f&#x27;</span>, <span class="string">&#x27;ACG&#x27;</span>:<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;ACT&#x27;</span>:<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;AGA&#x27;</span>:<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;AGC&#x27;</span>:<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;AGG&#x27;</span>:<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;AGT&#x27;</span>:<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;ATA&#x27;</span>:<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;ATC&#x27;</span>:<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;ATG&#x27;</span>:<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;ATT&#x27;</span>:<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;CAA&#x27;</span>:<span class="string">&#x27;q&#x27;</span>,<span class="string">&#x27;CAC&#x27;</span>:<span class="string">&#x27;r&#x27;</span>,<span class="string">&#x27;CAG&#x27;</span>:<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;CAT&#x27;</span>:<span class="string">&#x27;t&#x27;</span>,<span class="string">&#x27;CCA&#x27;</span>:<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;CCC&#x27;</span>:<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;CCG&#x27;</span>:<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;CCT&#x27;</span>:<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;CGA&#x27;</span>:<span class="string">&#x27;y&#x27;</span>,<span class="string">&#x27;CGC&#x27;</span>:<span class="string">&#x27;z&#x27;</span>,<span class="string">&#x27;CGG&#x27;</span>:<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;CGT&#x27;</span>:<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;CTA&#x27;</span>:<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;CTC&#x27;</span>:<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;CTG&#x27;</span>:<span class="string">&#x27;E&#x27;</span>,<span class="string">&#x27;CTT&#x27;</span>:<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;GAA&#x27;</span>:<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;GAC&#x27;</span>:<span class="string">&#x27;H&#x27;</span>,<span class="string">&#x27;GAG&#x27;</span>:<span class="string">&#x27;I&#x27;</span>,<span class="string">&#x27;GAT&#x27;</span>:<span class="string">&#x27;J&#x27;</span>,<span class="string">&#x27;GCA&#x27;</span>:<span class="string">&#x27;K&#x27;</span>,<span class="string">&#x27;GCC&#x27;</span>:<span class="string">&#x27;L&#x27;</span>,<span class="string">&#x27;GCG&#x27;</span>:<span class="string">&#x27;M&#x27;</span>,<span class="string">&#x27;GCT&#x27;</span>:<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;GGA&#x27;</span>:<span class="string">&#x27;O&#x27;</span>,<span class="string">&#x27;GGC&#x27;</span>:<span class="string">&#x27;P&#x27;</span>,<span class="string">&#x27;GGG&#x27;</span>:<span class="string">&#x27;Q&#x27;</span>,<span class="string">&#x27;GGT&#x27;</span>:<span class="string">&#x27;R&#x27;</span>,<span class="string">&#x27;GTA&#x27;</span>:<span class="string">&#x27;S&#x27;</span>,<span class="string">&#x27;GTC&#x27;</span>:<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;GTG&#x27;</span>:<span class="string">&#x27;U&#x27;</span>,<span class="string">&#x27;GTT&#x27;</span>:<span class="string">&#x27;V&#x27;</span>,<span class="string">&#x27;TAA&#x27;</span>:<span class="string">&#x27;W&#x27;</span>,<span class="string">&#x27;TAC&#x27;</span>:<span class="string">&#x27;X&#x27;</span>,<span class="string">&#x27;TAG&#x27;</span>:<span class="string">&#x27;Y&#x27;</span>,<span class="string">&#x27;TAT&#x27;</span>:<span class="string">&#x27;Z&#x27;</span>,<span class="string">&#x27;TCA&#x27;</span>:<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;TCC&#x27;</span>:<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;TCG&#x27;</span>:<span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;TCT&#x27;</span>:<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;TGA&#x27;</span>:<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;TGC&#x27;</span>:<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;TGG&#x27;</span>:<span class="string">&#x27;7&#x27;</span>,<span class="string">&#x27;TGT&#x27;</span>:<span class="string">&#x27;8&#x27;</span>,<span class="string">&#x27;TTA&#x27;</span>:<span class="string">&#x27;9&#x27;</span>,<span class="string">&#x27;TTC&#x27;</span>:<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;TTG&#x27;</span>:<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;TTT&#x27;</span>:<span class="string">&#x27;.&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">input</span>= <span class="string">&#x27;GTAGAGCTAGTCCTT&#123;GGGTCACGGTTC_GGGTCACGGTTC_GAACGGTTC_GTAGTG_GCTTCA_GTAGACGTGGCGGTG_GTAGACTCA_TATGACCGG_GCTCGGGCT&#125;&#x27;</span></span><br><span class="line">final = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="built_in">len</span>(<span class="built_in">input</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">input</span>[i]==<span class="string">&#x27;_&#x27;</span><span class="keyword">or</span> <span class="built_in">input</span>[i]==<span class="string">&#x27;&#123;&#x27;</span> <span class="keyword">or</span> <span class="built_in">input</span>[i]==<span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">        final+=<span class="built_in">input</span>[i]</span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        tmp = <span class="built_in">input</span>[i:i+<span class="number">3</span>]</span><br><span class="line">        final += mapping[tmp]</span><br><span class="line">        i+=<span class="number">3</span></span><br><span class="line"><span class="built_in">print</span>(final)</span><br><span class="line"><span class="comment">#SICTF&#123;Q1A0_Q1A0_GA0_SU_N1_SHUMU_SH1_ZHA_NAN&#125;</span></span><br></pre></td></tr></table></figure><h3 id="日志分析1">日志分析1</h3><p>使用了windows自带的evtx浏览器和logparser</p><p>尝试查找注册或者登录：id4779</p><p>找到</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">日志分析<span class="number">1.</span>evtx<span class="number">1600</span><span class="number">2020</span><span class="number">-07</span><span class="number">-22</span> <span class="number">10</span>:<span class="number">52</span>:<span class="number">19</span><span class="number">2020</span><span class="number">-07</span><span class="number">-22</span> <span class="number">10</span>:<span class="number">52</span>:<span class="number">19</span><span class="number">4779</span><span class="number">8</span>Success Audit event<span class="number">12551</span>The name <span class="keyword">for</span> category <span class="number">12551</span> <span class="keyword">in</span> Source <span class="string">&quot;Microsoft-Windows-Security-Auditing&quot;</span> cannot be found. The <span class="built_in">local</span> computer may <span class="keyword">not</span> have <span class="keyword">the</span> necessary registry information <span class="keyword">or</span> message DLL <span class="built_in">files</span> <span class="built_in">to</span> display messages <span class="built_in">from</span> <span class="keyword">a</span> remote computerMicrosoft-Windows-Security-Auditingattack$|ADOFLMB|<span class="number">0x12a334</span>|RDP-Tcp<span class="comment">#0|kali|192.168.222.200WIN-WH8G5MDPHE5.ADoflmb.comNULLThe description for Event ID 4779 in Source &quot;Microsoft-Windows-Security-Auditing&quot; cannot be found. The local computer may not have the necessary registry information or message DLL files to display messages from a remote computerNULL</span></span><br></pre></td></tr></table></figure><p>这里找到attack$的用户名，ADOFLMB的用户域，下面的192.168.222.200是内网登录的ip，然后查找创建计划任务的id：</p><p>得到任务名称\callback，文件路径c:\windows\system32\windows_attack.exe</p><p>锁定这一天寻找其它内容就能找到就能找到用户组是Administrators</p><p>远程登录账户是WIN-WH8G5MDPHE5$</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SICTF&#123;<span class="number">192.168</span><span class="number">.222</span><span class="number">.200</span>|<span class="type">attack</span>$|<span class="type">Administrators</span>|<span class="type">\callback</span>|<span class="type">c</span>:\windows\system32\windows_attack.exe|<span class="type">ADOFLMB</span>\WIN-WH8G5MDPHE5$&#125;</span><br></pre></td></tr></table></figure><p>但是不对，结果远程登录账户就是attack$</p><p>在4769号内容2020/7/22/10：52：06</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">已请求 Kerberos 服务票证。</span><br><span class="line"></span><br><span class="line">帐户信息:</span><br><span class="line">帐户名:attack$@ADOFLMB.COM</span><br><span class="line">帐户域:ADOFLMB.COM</span><br><span class="line">登录 GUID:&#123;7539ad21<span class="string">-0</span>be8<span class="string">-8</span>cb6<span class="string">-7406</span><span class="string">-054797</span>c14d68&#125;</span><br><span class="line"></span><br><span class="line">服务信息:</span><br><span class="line">服务名称:WIN-WH8G5MDPHE5$</span><br><span class="line">服务 ID:S<span class="string">-1</span><span class="string">-5</span><span class="string">-21</span><span class="string">-867333373</span><span class="string">-202576419</span><span class="string">-2389709931</span><span class="string">-1000</span></span><br><span class="line"></span><br><span class="line">网络信息:</span><br><span class="line">客户端地址:::1</span><br><span class="line">客户端端口:0</span><br><span class="line"></span><br><span class="line">附加信息:</span><br><span class="line">票证选项:0x40810000</span><br><span class="line">票证加密类型:0x12</span><br><span class="line">故障代码:0x0</span><br><span class="line">传递服务:-</span><br><span class="line"></span><br><span class="line">每次请求访问资源(例如计算机或 Windows 服务)时生成此事件。服务名称表示请求访问的资源。</span><br><span class="line"></span><br><span class="line">可以通过比较每个事件中的“登录 GUID”字段将此事件与 Windows 登录事件相关联。登录事件发生在被访问的计算机上，通常情况下，该计算机不是颁发服务票证的域控制器计算机。</span><br><span class="line"></span><br><span class="line">票证选项、加密类型和故障代码是在 RFC 4120 中定义的。</span><br></pre></td></tr></table></figure><p>第一行得到目标账户名，这个事件是生成凭证以访问资源的所以没问题？</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SICTF&#123;<span class="number">192.168</span><span class="number">.222</span><span class="number">.200</span>|<span class="type">attack</span>$|<span class="type">Administrators</span>|<span class="type">\callback</span>|<span class="type">c</span>:\windows\system32\windows_attack.exe|<span class="type">ADOFLMB</span>\attack$&#125;</span><br></pre></td></tr></table></figure><p>然而，任务名不加\，这个\表示它位于任务计划程序的根目录下，所以正确flag是</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SICTF&#123;<span class="number">192.168</span><span class="number">.222</span><span class="number">.200</span>|<span class="type">attack</span>$|<span class="type">Administrators</span>|<span class="type">callback</span>|<span class="type">c</span>:\windows\system32\windows_attack.exe|<span class="type">ADOFLMB</span>\attack$&#125;</span><br></pre></td></tr></table></figure><p>（所以说$表示隐藏为什么要加QAQ）</p><h3 id="日志分析2-待补充">日志分析2[待补充]</h3><h3 id="神秘的流量-待补充">神秘的流量[待补充]</h3><hr><h2 id="FORENSICS">FORENSICS</h2><p>明明是社工却叫取证？</p><h3 id="OSINT签到">OSINT签到</h3><p>直接放到谷歌识图，得出答案</p><p>红城湖公园位于海南省<a href="https://baike.baidu.com/item/%E6%B5%B7%E5%8F%A3/5775?fromModule=lemma_inlink">海口</a>琼山区府城街道红城湖路北侧</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SICTF&#123;海南省<span class="literal">_</span>海口市<span class="literal">_</span>琼山区<span class="literal">_</span>红城湖公园&#125;</span><br></pre></td></tr></table></figure><h3 id="这才是签到">这才是签到</h3><p>谷歌识图得出地点是意大利的威尼斯，图片中是一个酒店，但是提示说不酒店，拍摄地点找没有空格的好像找不出来？</p><p>看对话jpg，是说穿过小巷，感觉很多啊。奇怪诶。</p><p>好吧，看了wp发现没有特殊字符是省略空格就可以，那拍摄地点是Gondola Danieli</p><p>穿过小道，我之前一直理解成往左边走，结果是往右？？</p><p>不过提示了比例尺是20m，穷举也是可以的</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">SICTF</span><span class="template-variable">&#123;意大利_威尼斯_GondolaDanieli_ChiesadiSanZaccaria&#125;</span></span><br></pre></td></tr></table></figure><h3 id="真的签到">真的签到</h3><p>显眼的是摩天轮</p><p>谷歌识图找到地点</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SICTF&#123;广东省<span class="literal">_</span>珠海市<span class="literal">_</span>斗门区<span class="literal">_</span>大信新都汇&#125;</span><br></pre></td></tr></table></figure><h3 id="树木的压迫">树木的压迫</h3><p>百度识图只搜索红框部分</p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SICTF&#123;四川省<span class="literal">_</span>达州市<span class="literal">_</span>通川区<span class="literal">_</span>凤凰大道<span class="number">376</span>号<span class="literal">_</span>达州市体育中心&#125;</span><br></pre></td></tr></table></figure><h3 id="签退">签退</h3><p>根据左下角车是右舵，去网上搜索地区</p><blockquote><p>采用右舵，靠左行驶的国家主要是英联邦国家，也就是原来受英国的影响比较大的国家，较大的国家有英国、日本、印度、澳大利亚、南非，等三十多个国家和地区。</p><p>具体都包括：孟加拉、不丹、文莱、东帝汶、印度、印度尼西亚、日本、马来西亚、马尔代夫、尼泊尔、巴基斯坦、新加坡、斯里兰卡、泰国、中国香港地区和澳门地区、爱尔兰、塞浦路斯、马耳他、英国、博茨瓦纳、肯尼亚、莱索托、马拉维、毛里求斯、莫桑比克、纳米比亚、塞舌尔、南非、斯威士兰、坦桑尼亚、乌干达、赞比亚、津巴布韦、安提瓜和巴布达、巴哈马、巴巴多斯、格林纳达、圭亚那、牙买加、圣基茨和尼维斯、圣卢西亚、圣文森特和格林纳丁斯、苏里南、特立尼达和多巴哥、澳大利亚、斐济、基里巴斯、新西兰、巴布亚新几内亚、所罗门群岛、汤加、图瓦卢。</p></blockquote><p>通过直接搜图，发现一个视频<a href="https://www.bilibili.com/video/BV1TF411E7Kj/">【超清南非】第一视角 开车从开普敦机场高速前往市中心 (1080P高清版) 2022.2_哔哩哔哩_bilibili</a></p><p>其中红绿灯一样，建筑也差不多，就猜是开普敦了</p><p>同时裁剪图片搜索右上角建筑，可以发现中间被涂掉的蜘蛛侠。那么地点就是这里了。</p><p>根据这个图片继续查找，发现这个建筑的另一边</p><p><a href="https://www.property24.com/to-rent/cape-town-city-centre/cape-town/western-cape/9138/112975960">Commercial property to rent in Cape Town City Centre - 63 Strand Street - P24-112975960 (property24.com)</a></p><p>得到附近地址<br>strand street</p><p>全景地图观察发现就是这里</p><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SICTF&#123;南非\_开普敦\_StrandSt_STEERS&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">打到咽气了</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="wp" scheme="https://www.pri87.vip/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>NSSCTF-r18题目复现</title>
    <link href="https://www.pri87.vip/posts/cc56fc8c.html"/>
    <id>https://www.pri87.vip/posts/cc56fc8c.html</id>
    <published>2024-02-16T04:00:39.000Z</published>
    <updated>2024-02-28T12:37:51.740Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RE">RE</h2><h3 id="genshinwishsimulator">genshinwishsimulator</h3><p>原神抽卡模拟，先开Assembly-CSharp.dll看看，看到</p><p><img src="https://s2.loli.net/2024/02/16/Dnhg4uE96Nky1Hx.png" alt="image-20240216120848553"></p><p>其中input为已知数组。那么我们就需要找bucket是什么了，发现这个方法下面是check,搜索check方法：</p><p><img src="https://s2.loli.net/2024/02/16/oLrf9gustUlB2bM.png" alt="image-20240216121045048"></p><p>可以发现如果check==1，就返回5星，否则其它，那么就需要check返回1才可以</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="built_in">bool</span> <span class="title">Check</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span>[] bucket = GachaManager.instance.gachaHistoryBucket.GetBucket();</span><br><span class="line"><span class="keyword">return</span> bucket[<span class="number">0</span>] * <span class="number">40</span> + bucket[<span class="number">1</span>] * <span class="number">65</span> + bucket[<span class="number">2</span>] * <span class="number">-53</span> + bucket[<span class="number">3</span>] * <span class="number">70</span> + bucket[<span class="number">4</span>] * <span class="number">-84</span> + bucket[<span class="number">5</span>] * <span class="number">-38</span> + bucket[<span class="number">6</span>] * <span class="number">94</span> + bucket[<span class="number">7</span>] * <span class="number">-39</span> + bucket[<span class="number">8</span>] * <span class="number">-91</span> + bucket[<span class="number">9</span>] * <span class="number">-35</span> + bucket[<span class="number">10</span>] * <span class="number">54</span> + bucket[<span class="number">11</span>] * <span class="number">17</span> + bucket[<span class="number">12</span>] * <span class="number">45</span> + bucket[<span class="number">13</span>] * <span class="number">92</span> + bucket[<span class="number">14</span>] * <span class="number">-29</span> + bucket[<span class="number">15</span>] * <span class="number">61</span> == <span class="number">3004</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">-15</span> + bucket[<span class="number">1</span>] * <span class="number">74</span> + bucket[<span class="number">2</span>] * <span class="number">-89</span> + bucket[<span class="number">3</span>] * <span class="number">-82</span> + bucket[<span class="number">4</span>] * <span class="number">-92</span> + bucket[<span class="number">5</span>] * <span class="number">27</span> + bucket[<span class="number">6</span>] * <span class="number">21</span> + bucket[<span class="number">7</span>] * <span class="number">-24</span> + bucket[<span class="number">8</span>] * <span class="number">-82</span> + bucket[<span class="number">9</span>] * <span class="number">-58</span> + bucket[<span class="number">10</span>] * <span class="number">-36</span> + bucket[<span class="number">11</span>] * <span class="number">64</span> + bucket[<span class="number">12</span>] * <span class="number">-49</span> + bucket[<span class="number">13</span>] * <span class="number">-22</span> + bucket[<span class="number">14</span>] * <span class="number">59</span> + bucket[<span class="number">15</span>] * <span class="number">-47</span> == <span class="number">-674</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">67</span> + bucket[<span class="number">1</span>] * <span class="number">-23</span> + bucket[<span class="number">2</span>] * <span class="number">63</span> + bucket[<span class="number">3</span>] * <span class="number">-38</span> + bucket[<span class="number">4</span>] * <span class="number">-32</span> + bucket[<span class="number">5</span>] * <span class="number">61</span> + bucket[<span class="number">6</span>] * <span class="number">-71</span> + bucket[<span class="number">7</span>] * <span class="number">49</span> + bucket[<span class="number">8</span>] * <span class="number">83</span> + bucket[<span class="number">9</span>] * <span class="number">-92</span> + bucket[<span class="number">10</span>] * <span class="number">-16</span> + bucket[<span class="number">11</span>] * <span class="number">65</span> + bucket[<span class="number">12</span>] * <span class="number">-22</span> + bucket[<span class="number">13</span>] * <span class="number">12</span> + bucket[<span class="number">14</span>] * <span class="number">-85</span> + bucket[<span class="number">15</span>] * <span class="number">74</span> == <span class="number">945</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">-49</span> + bucket[<span class="number">1</span>] * <span class="number">48</span> + bucket[<span class="number">2</span>] * <span class="number">-11</span> + bucket[<span class="number">3</span>] * <span class="number">20</span> + bucket[<span class="number">4</span>] * <span class="number">-14</span> + bucket[<span class="number">5</span>] * <span class="number">92</span> + bucket[<span class="number">6</span>] * <span class="number">-19</span> + bucket[<span class="number">7</span>] * <span class="number">32</span> + bucket[<span class="number">8</span>] * <span class="number">64</span> + bucket[<span class="number">9</span>] * <span class="number">-77</span> + bucket[<span class="number">10</span>] * <span class="number">49</span> + bucket[<span class="number">11</span>] * <span class="number">-19</span> + bucket[<span class="number">12</span>] * <span class="number">72</span> + bucket[<span class="number">13</span>] * <span class="number">-64</span> + bucket[<span class="number">14</span>] * <span class="number">85</span> + bucket[<span class="number">15</span>] * <span class="number">54</span> == <span class="number">1721</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">36</span> + bucket[<span class="number">1</span>] * <span class="number">-21</span> + bucket[<span class="number">2</span>] * <span class="number">-59</span> + bucket[<span class="number">3</span>] * <span class="number">-54</span> + bucket[<span class="number">4</span>] * <span class="number">-96</span> + bucket[<span class="number">5</span>] * <span class="number">-81</span> + bucket[<span class="number">6</span>] * <span class="number">-33</span> + bucket[<span class="number">7</span>] * <span class="number">31</span> + bucket[<span class="number">8</span>] * <span class="number">-41</span> + bucket[<span class="number">9</span>] * <span class="number">-70</span> + bucket[<span class="number">10</span>] * <span class="number">-27</span> + bucket[<span class="number">11</span>] * <span class="number">24</span> + bucket[<span class="number">12</span>] * <span class="number">95</span> + bucket[<span class="number">13</span>] * <span class="number">-61</span> + bucket[<span class="number">14</span>] * <span class="number">-17</span> + bucket[<span class="number">15</span>] * <span class="number">-52</span> == <span class="number">-2198</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">78</span> + bucket[<span class="number">1</span>] * <span class="number">-62</span> + bucket[<span class="number">2</span>] * <span class="number">70</span> + bucket[<span class="number">3</span>] * <span class="number">-69</span> + bucket[<span class="number">4</span>] * <span class="number">38</span> + bucket[<span class="number">5</span>] * <span class="number">90</span> + bucket[<span class="number">6</span>] * <span class="number">-52</span> + bucket[<span class="number">7</span>] * <span class="number">41</span> + bucket[<span class="number">8</span>] * <span class="number">63</span> + bucket[<span class="number">9</span>] * <span class="number">-65</span> + bucket[<span class="number">10</span>] * <span class="number">-15</span> + bucket[<span class="number">11</span>] * <span class="number">59</span> + bucket[<span class="number">12</span>] * <span class="number">-31</span> + bucket[<span class="number">13</span>] * <span class="number">54</span> + bucket[<span class="number">14</span>] * <span class="number">33</span> + bucket[<span class="number">15</span>] * <span class="number">-57</span> == <span class="number">-1833</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">56</span> + bucket[<span class="number">1</span>] * <span class="number">75</span> + bucket[<span class="number">2</span>] * <span class="number">71</span> + bucket[<span class="number">3</span>] * <span class="number">78</span> + bucket[<span class="number">4</span>] * <span class="number">-39</span> + bucket[<span class="number">5</span>] * <span class="number">-84</span> + bucket[<span class="number">6</span>] * <span class="number">55</span> + bucket[<span class="number">7</span>] * <span class="number">54</span> + bucket[<span class="number">8</span>] * <span class="number">-12</span> + bucket[<span class="number">9</span>] * <span class="number">-57</span> + bucket[<span class="number">10</span>] * <span class="number">32</span> + bucket[<span class="number">11</span>] * <span class="number">-19</span> + bucket[<span class="number">12</span>] * <span class="number">13</span> + bucket[<span class="number">13</span>] * <span class="number">-83</span> + bucket[<span class="number">14</span>] * <span class="number">11</span> + bucket[<span class="number">15</span>] * <span class="number">-67</span> == <span class="number">829</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">10</span> + bucket[<span class="number">1</span>] * <span class="number">-97</span> + bucket[<span class="number">2</span>] * <span class="number">56</span> + bucket[<span class="number">3</span>] * <span class="number">-61</span> + bucket[<span class="number">4</span>] * <span class="number">45</span> + bucket[<span class="number">5</span>] * <span class="number">-22</span> + bucket[<span class="number">6</span>] * <span class="number">33</span> + bucket[<span class="number">7</span>] * <span class="number">81</span> + bucket[<span class="number">8</span>] * <span class="number">32</span> + bucket[<span class="number">9</span>] * <span class="number">49</span> + bucket[<span class="number">10</span>] * <span class="number">-19</span> + bucket[<span class="number">11</span>] * <span class="number">-18</span> + bucket[<span class="number">12</span>] * <span class="number">80</span> + bucket[<span class="number">13</span>] * <span class="number">-98</span> + bucket[<span class="number">14</span>] * <span class="number">79</span> + bucket[<span class="number">15</span>] * <span class="number">-36</span> == <span class="number">-2551</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">24</span> + bucket[<span class="number">1</span>] * <span class="number">-61</span> + bucket[<span class="number">2</span>] * <span class="number">91</span> + bucket[<span class="number">3</span>] * <span class="number">93</span> + bucket[<span class="number">4</span>] * <span class="number">76</span> + bucket[<span class="number">5</span>] * <span class="number">54</span> + bucket[<span class="number">6</span>] * <span class="number">-33</span> + bucket[<span class="number">7</span>] * <span class="number">-29</span> + bucket[<span class="number">8</span>] * <span class="number">-72</span> + bucket[<span class="number">9</span>] * <span class="number">20</span> + bucket[<span class="number">10</span>] * <span class="number">48</span> + bucket[<span class="number">11</span>] * <span class="number">79</span> + bucket[<span class="number">12</span>] * <span class="number">76</span> + bucket[<span class="number">13</span>] * <span class="number">68</span> + bucket[<span class="number">14</span>] * <span class="number">51</span> + bucket[<span class="number">15</span>] * <span class="number">25</span> == <span class="number">2996</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">-83</span> + bucket[<span class="number">1</span>] * <span class="number">-77</span> + bucket[<span class="number">2</span>] * <span class="number">-64</span> + bucket[<span class="number">3</span>] * <span class="number">-38</span> + bucket[<span class="number">4</span>] * <span class="number">-13</span> + bucket[<span class="number">5</span>] * <span class="number">-85</span> + bucket[<span class="number">6</span>] * <span class="number">33</span> + bucket[<span class="number">7</span>] * <span class="number">-76</span> + bucket[<span class="number">8</span>] * <span class="number">27</span> + bucket[<span class="number">9</span>] * <span class="number">14</span> + bucket[<span class="number">10</span>] * <span class="number">-79</span> + bucket[<span class="number">11</span>] * <span class="number">-63</span> + bucket[<span class="number">12</span>] * <span class="number">-78</span> + bucket[<span class="number">13</span>] * <span class="number">53</span> + bucket[<span class="number">14</span>] * <span class="number">-73</span> + bucket[<span class="number">15</span>] * <span class="number">61</span> == <span class="number">-2315</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">84</span> + bucket[<span class="number">1</span>] * <span class="number">-67</span> + bucket[<span class="number">2</span>] * <span class="number">57</span> + bucket[<span class="number">3</span>] * <span class="number">26</span> + bucket[<span class="number">4</span>] * <span class="number">94</span> + bucket[<span class="number">5</span>] * <span class="number">20</span> + bucket[<span class="number">6</span>] * <span class="number">-71</span> + bucket[<span class="number">7</span>] * <span class="number">-88</span> + bucket[<span class="number">8</span>] * <span class="number">-28</span> + bucket[<span class="number">9</span>] * <span class="number">-13</span> + bucket[<span class="number">10</span>] * <span class="number">-40</span> + bucket[<span class="number">11</span>] * <span class="number">76</span> + bucket[<span class="number">12</span>] * <span class="number">-14</span> + bucket[<span class="number">13</span>] * <span class="number">33</span> + bucket[<span class="number">14</span>] * <span class="number">76</span> + bucket[<span class="number">15</span>] * <span class="number">-75</span> == <span class="number">-150</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">-60</span> + bucket[<span class="number">1</span>] * <span class="number">88</span> + bucket[<span class="number">2</span>] * <span class="number">-66</span> + bucket[<span class="number">3</span>] * <span class="number">-72</span> + bucket[<span class="number">4</span>] * <span class="number">41</span> + bucket[<span class="number">5</span>] * <span class="number">49</span> + bucket[<span class="number">6</span>] * <span class="number">48</span> + bucket[<span class="number">7</span>] * <span class="number">-77</span> + bucket[<span class="number">8</span>] * <span class="number">-42</span> + bucket[<span class="number">9</span>] * <span class="number">25</span> + bucket[<span class="number">10</span>] * <span class="number">-50</span> + bucket[<span class="number">11</span>] * <span class="number">-84</span> + bucket[<span class="number">12</span>] * <span class="number">40</span> + bucket[<span class="number">13</span>] * <span class="number">50</span> + bucket[<span class="number">14</span>] * <span class="number">-83</span> + bucket[<span class="number">15</span>] * <span class="number">-27</span> == <span class="number">-1919</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">-16</span> + bucket[<span class="number">1</span>] * <span class="number">-53</span> + bucket[<span class="number">2</span>] * <span class="number">-21</span> + bucket[<span class="number">3</span>] * <span class="number">-44</span> + bucket[<span class="number">4</span>] * <span class="number">26</span> + bucket[<span class="number">5</span>] * <span class="number">-56</span> + bucket[<span class="number">6</span>] * <span class="number">-90</span> + bucket[<span class="number">7</span>] * <span class="number">-93</span> + bucket[<span class="number">8</span>] * <span class="number">-73</span> + bucket[<span class="number">9</span>] * <span class="number">48</span> + bucket[<span class="number">10</span>] * <span class="number">15</span> + bucket[<span class="number">11</span>] * <span class="number">-43</span> + bucket[<span class="number">12</span>] * <span class="number">-61</span> + bucket[<span class="number">13</span>] * <span class="number">-24</span> + bucket[<span class="number">14</span>] * <span class="number">71</span> + bucket[<span class="number">15</span>] * <span class="number">67</span> == <span class="number">-1199</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">55</span> + bucket[<span class="number">1</span>] * <span class="number">-34</span> + bucket[<span class="number">2</span>] * <span class="number">-22</span> + bucket[<span class="number">3</span>] * <span class="number">60</span> + bucket[<span class="number">4</span>] * <span class="number">93</span> + bucket[<span class="number">5</span>] * <span class="number">-95</span> + bucket[<span class="number">6</span>] * <span class="number">50</span> + bucket[<span class="number">7</span>] * <span class="number">36</span> + bucket[<span class="number">8</span>] * <span class="number">-48</span> + bucket[<span class="number">9</span>] * <span class="number">-26</span> + bucket[<span class="number">10</span>] * <span class="number">-94</span> + bucket[<span class="number">11</span>] * <span class="number">-35</span> + bucket[<span class="number">12</span>] * <span class="number">21</span> + bucket[<span class="number">13</span>] * <span class="number">-27</span> + bucket[<span class="number">14</span>] * <span class="number">91</span> + bucket[<span class="number">15</span>] * <span class="number">-76</span> == <span class="number">-1163</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">64</span> + bucket[<span class="number">1</span>] * <span class="number">-50</span> + bucket[<span class="number">2</span>] * <span class="number">-23</span> + bucket[<span class="number">3</span>] * <span class="number">-70</span> + bucket[<span class="number">4</span>] * <span class="number">-78</span> + bucket[<span class="number">5</span>] * <span class="number">34</span> + bucket[<span class="number">6</span>] * <span class="number">26</span> + bucket[<span class="number">7</span>] * <span class="number">64</span> + bucket[<span class="number">8</span>] * <span class="number">-72</span> + bucket[<span class="number">9</span>] * <span class="number">10</span> + bucket[<span class="number">10</span>] * <span class="number">-96</span> + bucket[<span class="number">11</span>] * <span class="number">61</span> + bucket[<span class="number">12</span>] * <span class="number">-15</span> + bucket[<span class="number">13</span>] * <span class="number">31</span> + bucket[<span class="number">14</span>] * <span class="number">36</span> + bucket[<span class="number">15</span>] * <span class="number">50</span> == <span class="number">-266</span> &amp;&amp; bucket[<span class="number">0</span>] * <span class="number">-27</span> + bucket[<span class="number">1</span>] * <span class="number">86</span> + bucket[<span class="number">2</span>] * <span class="number">-61</span> + bucket[<span class="number">3</span>] * <span class="number">89</span> + bucket[<span class="number">4</span>] * <span class="number">-53</span> + bucket[<span class="number">5</span>] * <span class="number">10</span> + bucket[<span class="number">6</span>] * <span class="number">-42</span> + bucket[<span class="number">7</span>] * <span class="number">92</span> + bucket[<span class="number">8</span>] * <span class="number">-48</span> + bucket[<span class="number">9</span>] * <span class="number">13</span> + bucket[<span class="number">10</span>] * <span class="number">84</span> + bucket[<span class="number">11</span>] * <span class="number">-71</span> + bucket[<span class="number">12</span>] * <span class="number">93</span> + bucket[<span class="number">13</span>] * <span class="number">54</span> + bucket[<span class="number">14</span>] * <span class="number">-69</span> + bucket[<span class="number">15</span>] * <span class="number">-30</span> == <span class="number">892</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>尝试z3:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">bucket = [Int(<span class="string">&#x27;bucket[%d]&#x27;</span> % i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>)]</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line"></span><br><span class="line">s.add(And(bucket[<span class="number">0</span>] * <span class="number">40</span> + bucket[<span class="number">1</span>] * <span class="number">65</span> + bucket[<span class="number">2</span>] * -<span class="number">53</span> + bucket[<span class="number">3</span>] * <span class="number">70</span> + bucket[<span class="number">4</span>] * -<span class="number">84</span> + bucket[<span class="number">5</span>] * -<span class="number">38</span> + bucket[<span class="number">6</span>] * <span class="number">94</span> + bucket[<span class="number">7</span>] * -<span class="number">39</span> + bucket[<span class="number">8</span>] * -<span class="number">91</span> + bucket[<span class="number">9</span>] * -<span class="number">35</span> + bucket[<span class="number">10</span>] * <span class="number">54</span> + bucket[<span class="number">11</span>] * <span class="number">17</span> + bucket[<span class="number">12</span>] * <span class="number">45</span> + bucket[<span class="number">13</span>] * <span class="number">92</span> + bucket[<span class="number">14</span>] * -<span class="number">29</span> + bucket[<span class="number">15</span>] * <span class="number">61</span> == <span class="number">3004</span> , bucket[<span class="number">0</span>] * -<span class="number">15</span> + bucket[<span class="number">1</span>] * <span class="number">74</span> + bucket[<span class="number">2</span>] * -<span class="number">89</span> + bucket[<span class="number">3</span>] * -<span class="number">82</span> + bucket[<span class="number">4</span>] * -<span class="number">92</span> + bucket[<span class="number">5</span>] * <span class="number">27</span> + bucket[<span class="number">6</span>] * <span class="number">21</span> + bucket[<span class="number">7</span>] * -<span class="number">24</span> + bucket[<span class="number">8</span>] * -<span class="number">82</span> + bucket[<span class="number">9</span>] * -<span class="number">58</span> + bucket[<span class="number">10</span>] * -<span class="number">36</span> + bucket[<span class="number">11</span>] * <span class="number">64</span> + bucket[<span class="number">12</span>] * -<span class="number">49</span> + bucket[<span class="number">13</span>] * -<span class="number">22</span> + bucket[<span class="number">14</span>] * <span class="number">59</span> + bucket[<span class="number">15</span>] * -<span class="number">47</span> == -<span class="number">674</span> , bucket[<span class="number">0</span>] * <span class="number">67</span> + bucket[<span class="number">1</span>] * -<span class="number">23</span> + bucket[<span class="number">2</span>] * <span class="number">63</span> + bucket[<span class="number">3</span>] * -<span class="number">38</span> + bucket[<span class="number">4</span>] * -<span class="number">32</span> + bucket[<span class="number">5</span>] * <span class="number">61</span> + bucket[<span class="number">6</span>] * -<span class="number">71</span> + bucket[<span class="number">7</span>] * <span class="number">49</span> + bucket[<span class="number">8</span>] * <span class="number">83</span> + bucket[<span class="number">9</span>] * -<span class="number">92</span> + bucket[<span class="number">10</span>] * -<span class="number">16</span> + bucket[<span class="number">11</span>] * <span class="number">65</span> + bucket[<span class="number">12</span>] * -<span class="number">22</span> + bucket[<span class="number">13</span>] * <span class="number">12</span> + bucket[<span class="number">14</span>] * -<span class="number">85</span> + bucket[<span class="number">15</span>] * <span class="number">74</span> == <span class="number">945</span> , bucket[<span class="number">0</span>] * -<span class="number">49</span> + bucket[<span class="number">1</span>] * <span class="number">48</span> + bucket[<span class="number">2</span>] * -<span class="number">11</span> + bucket[<span class="number">3</span>] * <span class="number">20</span> + bucket[<span class="number">4</span>] * -<span class="number">14</span> + bucket[<span class="number">5</span>] * <span class="number">92</span> + bucket[<span class="number">6</span>] * -<span class="number">19</span> + bucket[<span class="number">7</span>] * <span class="number">32</span> + bucket[<span class="number">8</span>] * <span class="number">64</span> + bucket[<span class="number">9</span>] * -<span class="number">77</span> + bucket[<span class="number">10</span>] * <span class="number">49</span> + bucket[<span class="number">11</span>] * -<span class="number">19</span> + bucket[<span class="number">12</span>] * <span class="number">72</span> + bucket[<span class="number">13</span>] * -<span class="number">64</span> + bucket[<span class="number">14</span>] * <span class="number">85</span> + bucket[<span class="number">15</span>] * <span class="number">54</span> == <span class="number">1721</span> , bucket[<span class="number">0</span>] * <span class="number">36</span> + bucket[<span class="number">1</span>] * -<span class="number">21</span> + bucket[<span class="number">2</span>] * -<span class="number">59</span> + bucket[<span class="number">3</span>] * -<span class="number">54</span> + bucket[<span class="number">4</span>] * -<span class="number">96</span> + bucket[<span class="number">5</span>] * -<span class="number">81</span> + bucket[<span class="number">6</span>] * -<span class="number">33</span> + bucket[<span class="number">7</span>] * <span class="number">31</span> + bucket[<span class="number">8</span>] * -<span class="number">41</span> + bucket[<span class="number">9</span>] * -<span class="number">70</span> + bucket[<span class="number">10</span>] * -<span class="number">27</span> + bucket[<span class="number">11</span>] * <span class="number">24</span> + bucket[<span class="number">12</span>] * <span class="number">95</span> + bucket[<span class="number">13</span>] * -<span class="number">61</span> + bucket[<span class="number">14</span>] * -<span class="number">17</span> + bucket[<span class="number">15</span>] * -<span class="number">52</span> == -<span class="number">2198</span> , bucket[<span class="number">0</span>] * <span class="number">78</span> + bucket[<span class="number">1</span>] * -<span class="number">62</span> + bucket[<span class="number">2</span>] * <span class="number">70</span> + bucket[<span class="number">3</span>] * -<span class="number">69</span> + bucket[<span class="number">4</span>] * <span class="number">38</span> + bucket[<span class="number">5</span>] * <span class="number">90</span> + bucket[<span class="number">6</span>] * -<span class="number">52</span> + bucket[<span class="number">7</span>] * <span class="number">41</span> + bucket[<span class="number">8</span>] * <span class="number">63</span> + bucket[<span class="number">9</span>] * -<span class="number">65</span> + bucket[<span class="number">10</span>] * -<span class="number">15</span> + bucket[<span class="number">11</span>] * <span class="number">59</span> + bucket[<span class="number">12</span>] * -<span class="number">31</span> + bucket[<span class="number">13</span>] * <span class="number">54</span> + bucket[<span class="number">14</span>] * <span class="number">33</span> + bucket[<span class="number">15</span>] * -<span class="number">57</span> == -<span class="number">1833</span> , bucket[<span class="number">0</span>] * <span class="number">56</span> + bucket[<span class="number">1</span>] * <span class="number">75</span> + bucket[<span class="number">2</span>] * <span class="number">71</span> + bucket[<span class="number">3</span>] * <span class="number">78</span> + bucket[<span class="number">4</span>] * -<span class="number">39</span> + bucket[<span class="number">5</span>] * -<span class="number">84</span> + bucket[<span class="number">6</span>] * <span class="number">55</span> + bucket[<span class="number">7</span>] * <span class="number">54</span> + bucket[<span class="number">8</span>] * -<span class="number">12</span> + bucket[<span class="number">9</span>] * -<span class="number">57</span> + bucket[<span class="number">10</span>] * <span class="number">32</span> + bucket[<span class="number">11</span>] * -<span class="number">19</span> + bucket[<span class="number">12</span>] * <span class="number">13</span> + bucket[<span class="number">13</span>] * -<span class="number">83</span> + bucket[<span class="number">14</span>] * <span class="number">11</span> + bucket[<span class="number">15</span>] * -<span class="number">67</span> == <span class="number">829</span> , bucket[<span class="number">0</span>] * <span class="number">10</span> + bucket[<span class="number">1</span>] * -<span class="number">97</span> + bucket[<span class="number">2</span>] * <span class="number">56</span> + bucket[<span class="number">3</span>] * -<span class="number">61</span> + bucket[<span class="number">4</span>] * <span class="number">45</span> + bucket[<span class="number">5</span>] * -<span class="number">22</span> + bucket[<span class="number">6</span>] * <span class="number">33</span> + bucket[<span class="number">7</span>] * <span class="number">81</span> + bucket[<span class="number">8</span>] * <span class="number">32</span> + bucket[<span class="number">9</span>] * <span class="number">49</span> + bucket[<span class="number">10</span>] * -<span class="number">19</span> + bucket[<span class="number">11</span>] * -<span class="number">18</span> + bucket[<span class="number">12</span>] * <span class="number">80</span> + bucket[<span class="number">13</span>] * -<span class="number">98</span> + bucket[<span class="number">14</span>] * <span class="number">79</span> + bucket[<span class="number">15</span>] * -<span class="number">36</span> == -<span class="number">2551</span> , bucket[<span class="number">0</span>] * <span class="number">24</span> + bucket[<span class="number">1</span>] * -<span class="number">61</span> + bucket[<span class="number">2</span>] * <span class="number">91</span> + bucket[<span class="number">3</span>] * <span class="number">93</span> + bucket[<span class="number">4</span>] * <span class="number">76</span> + bucket[<span class="number">5</span>] * <span class="number">54</span> + bucket[<span class="number">6</span>] * -<span class="number">33</span> + bucket[<span class="number">7</span>] * -<span class="number">29</span> + bucket[<span class="number">8</span>] * -<span class="number">72</span> + bucket[<span class="number">9</span>] * <span class="number">20</span> + bucket[<span class="number">10</span>] * <span class="number">48</span> + bucket[<span class="number">11</span>] * <span class="number">79</span> + bucket[<span class="number">12</span>] * <span class="number">76</span> + bucket[<span class="number">13</span>] * <span class="number">68</span> + bucket[<span class="number">14</span>] * <span class="number">51</span> + bucket[<span class="number">15</span>] * <span class="number">25</span> == <span class="number">2996</span> , bucket[<span class="number">0</span>] * -<span class="number">83</span> + bucket[<span class="number">1</span>] * -<span class="number">77</span> + bucket[<span class="number">2</span>] * -<span class="number">64</span> + bucket[<span class="number">3</span>] * -<span class="number">38</span> + bucket[<span class="number">4</span>] * -<span class="number">13</span> + bucket[<span class="number">5</span>] * -<span class="number">85</span> + bucket[<span class="number">6</span>] * <span class="number">33</span> + bucket[<span class="number">7</span>] * -<span class="number">76</span> + bucket[<span class="number">8</span>] * <span class="number">27</span> + bucket[<span class="number">9</span>] * <span class="number">14</span> + bucket[<span class="number">10</span>] * -<span class="number">79</span> + bucket[<span class="number">11</span>] * -<span class="number">63</span> + bucket[<span class="number">12</span>] * -<span class="number">78</span> + bucket[<span class="number">13</span>] * <span class="number">53</span> + bucket[<span class="number">14</span>] * -<span class="number">73</span> + bucket[<span class="number">15</span>] * <span class="number">61</span> == -<span class="number">2315</span> , bucket[<span class="number">0</span>] * <span class="number">84</span> + bucket[<span class="number">1</span>] * -<span class="number">67</span> + bucket[<span class="number">2</span>] * <span class="number">57</span> + bucket[<span class="number">3</span>] * <span class="number">26</span> + bucket[<span class="number">4</span>] * <span class="number">94</span> + bucket[<span class="number">5</span>] * <span class="number">20</span> + bucket[<span class="number">6</span>] * -<span class="number">71</span> + bucket[<span class="number">7</span>] * -<span class="number">88</span> + bucket[<span class="number">8</span>] * -<span class="number">28</span> + bucket[<span class="number">9</span>] * -<span class="number">13</span> + bucket[<span class="number">10</span>] * -<span class="number">40</span> + bucket[<span class="number">11</span>] * <span class="number">76</span> + bucket[<span class="number">12</span>] * -<span class="number">14</span> + bucket[<span class="number">13</span>] * <span class="number">33</span> + bucket[<span class="number">14</span>] * <span class="number">76</span> + bucket[<span class="number">15</span>] * -<span class="number">75</span> == -<span class="number">150</span> , bucket[<span class="number">0</span>] * -<span class="number">60</span> + bucket[<span class="number">1</span>] * <span class="number">88</span> + bucket[<span class="number">2</span>] * -<span class="number">66</span> + bucket[<span class="number">3</span>] * -<span class="number">72</span> + bucket[<span class="number">4</span>] * <span class="number">41</span> + bucket[<span class="number">5</span>] * <span class="number">49</span> + bucket[<span class="number">6</span>] * <span class="number">48</span> + bucket[<span class="number">7</span>] * -<span class="number">77</span> + bucket[<span class="number">8</span>] * -<span class="number">42</span> + bucket[<span class="number">9</span>] * <span class="number">25</span> + bucket[<span class="number">10</span>] * -<span class="number">50</span> + bucket[<span class="number">11</span>] * -<span class="number">84</span> + bucket[<span class="number">12</span>] * <span class="number">40</span> + bucket[<span class="number">13</span>] * <span class="number">50</span> + bucket[<span class="number">14</span>] * -<span class="number">83</span> + bucket[<span class="number">15</span>] * -<span class="number">27</span> == -<span class="number">1919</span> , bucket[<span class="number">0</span>] * -<span class="number">16</span> + bucket[<span class="number">1</span>] * -<span class="number">53</span> + bucket[<span class="number">2</span>] * -<span class="number">21</span> + bucket[<span class="number">3</span>] * -<span class="number">44</span> + bucket[<span class="number">4</span>] * <span class="number">26</span> + bucket[<span class="number">5</span>] * -<span class="number">56</span> + bucket[<span class="number">6</span>] * -<span class="number">90</span> + bucket[<span class="number">7</span>] * -<span class="number">93</span> + bucket[<span class="number">8</span>] * -<span class="number">73</span> + bucket[<span class="number">9</span>] * <span class="number">48</span> + bucket[<span class="number">10</span>] * <span class="number">15</span> + bucket[<span class="number">11</span>] * -<span class="number">43</span> + bucket[<span class="number">12</span>] * -<span class="number">61</span> + bucket[<span class="number">13</span>] * -<span class="number">24</span> + bucket[<span class="number">14</span>] * <span class="number">71</span> + bucket[<span class="number">15</span>] * <span class="number">67</span> == -<span class="number">1199</span> , bucket[<span class="number">0</span>] * <span class="number">55</span> + bucket[<span class="number">1</span>] * -<span class="number">34</span> + bucket[<span class="number">2</span>] * -<span class="number">22</span> + bucket[<span class="number">3</span>] * <span class="number">60</span> + bucket[<span class="number">4</span>] * <span class="number">93</span> + bucket[<span class="number">5</span>] * -<span class="number">95</span> + bucket[<span class="number">6</span>] * <span class="number">50</span> + bucket[<span class="number">7</span>] * <span class="number">36</span> + bucket[<span class="number">8</span>] * -<span class="number">48</span> + bucket[<span class="number">9</span>] * -<span class="number">26</span> + bucket[<span class="number">10</span>] * -<span class="number">94</span> + bucket[<span class="number">11</span>] * -<span class="number">35</span> + bucket[<span class="number">12</span>] * <span class="number">21</span> + bucket[<span class="number">13</span>] * -<span class="number">27</span> + bucket[<span class="number">14</span>] * <span class="number">91</span> + bucket[<span class="number">15</span>] * -<span class="number">76</span> == -<span class="number">1163</span> , bucket[<span class="number">0</span>] * <span class="number">64</span> + bucket[<span class="number">1</span>] * -<span class="number">50</span> + bucket[<span class="number">2</span>] * -<span class="number">23</span> + bucket[<span class="number">3</span>] * -<span class="number">70</span> + bucket[<span class="number">4</span>] * -<span class="number">78</span> + bucket[<span class="number">5</span>] * <span class="number">34</span> + bucket[<span class="number">6</span>] * <span class="number">26</span> + bucket[<span class="number">7</span>] * <span class="number">64</span> + bucket[<span class="number">8</span>] * -<span class="number">72</span> + bucket[<span class="number">9</span>] * <span class="number">10</span> + bucket[<span class="number">10</span>] * -<span class="number">96</span> + bucket[<span class="number">11</span>] * <span class="number">61</span> + bucket[<span class="number">12</span>] * -<span class="number">15</span> + bucket[<span class="number">13</span>] * <span class="number">31</span> + bucket[<span class="number">14</span>] * <span class="number">36</span> + bucket[<span class="number">15</span>] * <span class="number">50</span> == -<span class="number">266</span> , bucket[<span class="number">0</span>] * -<span class="number">27</span> + bucket[<span class="number">1</span>] * <span class="number">86</span> + bucket[<span class="number">2</span>] * -<span class="number">61</span> + bucket[<span class="number">3</span>] * <span class="number">89</span> + bucket[<span class="number">4</span>] * -<span class="number">53</span> + bucket[<span class="number">5</span>] * <span class="number">10</span> + bucket[<span class="number">6</span>] * -<span class="number">42</span> + bucket[<span class="number">7</span>] * <span class="number">92</span> + bucket[<span class="number">8</span>] * -<span class="number">48</span> + bucket[<span class="number">9</span>] * <span class="number">13</span> + bucket[<span class="number">10</span>] * <span class="number">84</span> + bucket[<span class="number">11</span>] * -<span class="number">71</span> + bucket[<span class="number">12</span>] * <span class="number">93</span> + bucket[<span class="number">13</span>] * <span class="number">54</span> + bucket[<span class="number">14</span>] * -<span class="number">69</span> + bucket[<span class="number">15</span>] * -<span class="number">30</span> == <span class="number">892</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">    m = s.model()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">16</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;this.bucket[%d] = %s;&#x27;</span> % (i, m[bucket[i]]))</span><br><span class="line">       <span class="comment"># print(&#x27;%s,&#x27;% m[bucket[i]],end=&#x27;&#x27;)</span></span><br><span class="line"><span class="comment">#this.bucket[0] = 1;</span></span><br><span class="line"><span class="comment">#this.bucket[1] = 14;</span></span><br><span class="line"><span class="comment">#this.bucket[2] = 1;</span></span><br><span class="line"><span class="comment">#this.bucket[3] = 17;</span></span><br><span class="line"><span class="comment">#this.bucket[4] = 2;</span></span><br><span class="line"><span class="comment">#this.bucket[5] = 1;</span></span><br><span class="line"><span class="comment">#this.bucket[6] = 1;</span></span><br><span class="line"><span class="comment">#this.bucket[7] = 0;</span></span><br><span class="line"><span class="comment">#this.bucket[8] = 2;</span></span><br><span class="line"><span class="comment">#this.bucket[9] = 4;</span></span><br><span class="line"><span class="comment">#this.bucket[10] = 1;</span></span><br><span class="line"><span class="comment">#this.bucket[11] = 17;</span></span><br><span class="line"><span class="comment">#this.bucket[12] = 2;</span></span><br><span class="line"><span class="comment">#this.bucket[13] = 0;</span></span><br><span class="line"><span class="comment">#this.bucket[14] = 2;</span></span><br><span class="line"><span class="comment">#this.bucket[15] = 16;</span></span><br></pre></td></tr></table></figure><p>那么在int[] bucket = GachaManager.instance.gachaHistoryBucket.GetBucket();中直接写入bucket的值，右键-&gt;编辑方法-&gt;写入上面的内容-&gt;编译-&gt;上面工具栏保存所有-&gt;打开主程序-&gt;出金</p><p><img src="https://s2.loli.net/2024/02/16/q9Az37dHfU52bsl.png" alt="image-20240216121732007"></p><h3 id="EzADVM">EzADVM</h3><p>这个是个安卓vm，jadx打开，然后打开main_activity,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">CheckClick</span><span class="params">(View a)</span> &#123;</span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tv</span> <span class="operator">=</span> <span class="built_in">this</span>.binding.sampleText;</span><br><span class="line">        <span class="type">EditText</span> <span class="variable">flagText</span> <span class="operator">=</span> <span class="built_in">this</span>.binding.flagtext;</span><br><span class="line">        <span class="type">String</span> <span class="variable">flagstring</span> <span class="operator">=</span> flagText.getText().toString();</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;Right!&quot;</span>.equals(stringFromJNI(flagstring))) &#123;</span><br><span class="line">            tv.setText(<span class="string">&quot;Right!&quot;</span>);</span><br><span class="line">            tv.setTextColor(-<span class="number">16711936</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>看到有stringFromJNI(flagstring)，去找函数原型，没找到，应该在库里。</p><p>用apktool反编译出源代码。打开so文件</p><p>重点是这些：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">now_num = <span class="number">0</span>;</span><br><span class="line">  i = <span class="number">1</span>;</span><br><span class="line">  used_char = _JNIEnv::GetStringUTFChars(in, a3, <span class="number">0LL</span>);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( !i++ )</span><br><span class="line">      &#123;</span><br><span class="line">LABEL_29:</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span>::basic_string&lt;decltype(nullptr)&gt;(v14, <span class="string">&quot;Error!&quot;</span>);</span><br><span class="line">        v7 = (<span class="type">const</span> <span class="type">char</span> *)sub_20F50(v14);</span><br><span class="line">        v13 = _JNIEnv::NewStringUTF(in, v7);</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">string</span>::~<span class="built_in">string</span>(v14);</span><br><span class="line">        <span class="keyword">return</span> v13;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ( code[i] != <span class="number">0x21</span> )</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      __strcpy_chk(input, used_char, <span class="number">1024LL</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( code[i] == <span class="number">0xFF</span> )</span><br><span class="line">      <span class="keyword">goto</span> LABEL_29;</span><br><span class="line">    <span class="keyword">if</span> ( code[i] == <span class="number">0x88</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">switch</span> ( code[i] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xA1</span>u:</span><br><span class="line">        s[now_num - <span class="number">1</span>] = or_not_num &amp; or_num;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xC3</span>u:</span><br><span class="line">        or_num = b1 | b2;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xB2</span>u:</span><br><span class="line">        not_1 = ~b1;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xE5</span>u:</span><br><span class="line">        not_2 = ~b2;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xF1</span>u:</span><br><span class="line">        b1 = input[now_num];</span><br><span class="line">        b2 = input[++now_num];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xD4</span>u:</span><br><span class="line">        or_not_num = not_2 | not_1;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xBF</span>u:</span><br><span class="line">        i_form = now_num++;</span><br><span class="line">        save[<span class="number">0</span>] = s[i_form];</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0x99</span>u:</span><br><span class="line">        now_num = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">0xBB</span>u:</span><br><span class="line">        s[now_num - <span class="number">1</span>] = now_num + save[<span class="number">0</span>] - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">memcmp</span>(&amp;last, s, <span class="number">0x20</span>uLL) )</span><br></pre></td></tr></table></figure><p>输入用来初始化input了，所以相当于是用指令码对input加密，最后得到last</p><p>以及一开始有一个循环只有当code[i]==0先1时才会执行初始化，所以只需要匹配合理的指令即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">opcode = [<span class="number">0x01</span>, <span class="number">0x01</span>, <span class="number">0x21</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, </span><br><span class="line">        <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, </span><br><span class="line">        <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, </span><br><span class="line">        <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, </span><br><span class="line">        <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, </span><br><span class="line">        <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, </span><br><span class="line">        <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, </span><br><span class="line">        <span class="number">0x6C</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, </span><br><span class="line">        <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, </span><br><span class="line">        <span class="number">0x75</span>, <span class="number">0x6C</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x53</span>, </span><br><span class="line">        <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, </span><br><span class="line">        <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, </span><br><span class="line">        <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, <span class="number">0x6C</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, </span><br><span class="line">        <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, </span><br><span class="line">        <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0xF1</span>, <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, </span><br><span class="line">        <span class="number">0xA1</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x61</span>, <span class="number">0x44</span>, <span class="number">0x64</span>, <span class="number">0xF1</span>, </span><br><span class="line">        <span class="number">0xC3</span>, <span class="number">0xB2</span>, <span class="number">0xE5</span>, <span class="number">0xD4</span>, <span class="number">0xA1</span>, <span class="number">0x99</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0x66</span>, <span class="number">0x6C</span>, </span><br><span class="line">        <span class="number">0x61</span>, <span class="number">0x67</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x75</span>, <span class="number">0x69</span>, <span class="number">0x73</span>, <span class="number">0x61</span>, </span><br><span class="line">        <span class="number">0x62</span>, <span class="number">0x65</span>, <span class="number">0x61</span>, <span class="number">0x75</span>, <span class="number">0x74</span>, <span class="number">0x69</span>, <span class="number">0x66</span>, <span class="number">0x75</span>, </span><br><span class="line">        <span class="number">0x6C</span>, <span class="number">0x67</span>, <span class="number">0x69</span>, <span class="number">0x72</span>, <span class="number">0x6C</span>, <span class="number">0x7D</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0xBF</span>, <span class="number">0xBB</span>, </span><br><span class="line">        <span class="number">0xBF</span>, <span class="number">0xBB</span>, <span class="number">0x99</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x53</span>, </span><br><span class="line">        <span class="number">0x57</span>, <span class="number">0x44</span>, <span class="number">0x44</span>, <span class="number">0x88</span>, <span class="number">0xFF</span>, <span class="number">0x53</span>, <span class="number">0x57</span>, <span class="number">0x44</span>, </span><br><span class="line">        <span class="number">0x44</span>, <span class="number">0x00</span>, <span class="number">0x00</span>]</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> code <span class="keyword">in</span> opcode:</span><br><span class="line">    <span class="keyword">match</span> code:</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xa1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;last[now_num - 1] = or_not_num &amp; or_num&quot;</span> )</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xc3</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;or_num = b1 | b2&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xb2</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;not_1 = ~b1&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xe5</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;not_2 = ~b2&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xf1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;b1 = input[now_num]&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;now_num += 1&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;b2 = input[now_num]&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xd4</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;or_not_num = not_2 | not_1&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xbf</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;save = last[now_num]&quot;</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;now_num+=1&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0x99</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;now_num = 0&quot;</span>)</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0xbb</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;last[now_num-1] = now_num + save - 1&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>大致是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br></pre></td><td class="code"><pre><span class="line">last = [<span class="number">0</span>]*<span class="number">100</span></span><br><span class="line">now_num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line"></span><br><span class="line">b1 = <span class="built_in">input</span>[now_num]</span><br><span class="line">now_num += <span class="number">1</span></span><br><span class="line">b2 = <span class="built_in">input</span>[now_num]</span><br><span class="line">or_num = b1 | b2</span><br><span class="line">not_1 = ~b1</span><br><span class="line">not_2 = ~b2</span><br><span class="line">or_not_num = not_2 | not_1</span><br><span class="line">last[now_num - <span class="number">1</span>] = or_not_num &amp; or_num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">now_num = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">save = last[now_num]</span><br><span class="line">now_num+=<span class="number">1</span></span><br><span class="line">last[now_num-<span class="number">1</span>] = now_num + save - <span class="number">1</span></span><br><span class="line">now_num = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>然后化简逆向：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line">last = [<span class="number">0x1D</span>, <span class="number">0x01</span>, <span class="number">0x12</span>, <span class="number">0x1A</span>, <span class="number">0x16</span>, <span class="number">0x42</span>, <span class="number">0x39</span>, <span class="number">0x0F</span>, </span><br><span class="line">        <span class="number">0x38</span>, <span class="number">0x09</span>, <span class="number">0x13</span>, <span class="number">0x31</span>, <span class="number">0x28</span>, <span class="number">0x38</span>, <span class="number">0x67</span>, <span class="number">0x6E</span>, </span><br><span class="line">        <span class="number">0x1B</span>, <span class="number">0x61</span>, <span class="number">0x7C</span>, <span class="number">0x24</span>, <span class="number">0x1F</span>, <span class="number">0x47</span>, <span class="number">0x44</span>, <span class="number">0x81</span>, </span><br><span class="line">        <span class="number">0x6A</span>, <span class="number">0x2C</span>, <span class="number">0x6D</span>, <span class="number">0x2B</span>, <span class="number">0x2C</span>, <span class="number">0x2D</span>, <span class="number">0x6A</span>, <span class="number">0x9C</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># last = [0]*100</span></span><br><span class="line"><span class="comment"># now_num = 0</span></span><br><span class="line"><span class="comment"># for i in range(32):</span></span><br><span class="line"><span class="comment">#     b1 = input[now_num]</span></span><br><span class="line"><span class="comment">#     now_num += 1</span></span><br><span class="line"><span class="comment">#     b2 = input[now_num]</span></span><br><span class="line"><span class="comment">#     or_num = b1 | b2</span></span><br><span class="line"><span class="comment">#     not_1 = ~b1</span></span><br><span class="line"><span class="comment">#     not_2 = ~b2</span></span><br><span class="line"><span class="comment">#     or_not_num = not_2 | not_1</span></span><br><span class="line"><span class="comment">#     last[now_num - 1] = or_not_num &amp; or_num</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># now_num = 0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in range(32):</span></span><br><span class="line"><span class="comment">#     save = last[now_num]</span></span><br><span class="line"><span class="comment">#     now_num+=1</span></span><br><span class="line"><span class="comment">#     last[now_num-1] = now_num + save - 1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">31</span>,<span class="number">0</span>,-<span class="number">1</span>):</span><br><span class="line">    last[i]-=i</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">30</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">    last[i]^=last[i+<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">pl(last)</span><br><span class="line"><span class="comment">#NSSCTF&#123;H@ppy_Ch1ne5_NEwY3ar!1!1&#125;</span></span><br></pre></td></tr></table></figure><h2 id="crypto">crypto</h2><h3 id="过年来下棋">过年来下棋</h3><p>XXVAF AVXAX DXFVX DXDVA XAGV</p><p>很明显是棋盘密码ADFGVX</p><p>根据密文段数发现是key为5位</p><p>写脚本穷举：</p><figure class="highlight ldif"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">4h9343nse2r4</span>: abcde</span><br><span class="line"><span class="attribute">4gl393mgewr8</span>: abced</span><br><span class="line"><span class="attribute">4h9343ise2rf</span>: abdce</span><br><span class="line"><span class="attribute">44lz934mbwr2</span>: abdec</span><br><span class="line"><span class="attribute">4bl393cgd2r3</span>: abecd</span><br><span class="line"><span class="attribute">4fl3l3fmdkr2</span>: abedc</span><br><span class="line"><span class="attribute">5b98405sy2r4</span>: acbde</span><br><span class="line"><span class="attribute">5al8904gywr8</span>: acbed</span><br><span class="line"><span class="attribute">5g99y0ls2erf</span>: acdbe</span><br><span class="line"><span class="attribute">94fh8344nsq2</span>: acdeb</span><br><span class="line"><span class="attribute">5al930fg1er3</span>: acebd</span><br><span class="line"><span class="attribute">9fflk3f4pgq2</span>: acedb</span><br><span class="line"><span class="attribute">5b984z6sy2m9</span>: adbce</span><br><span class="line"><span class="attribute">9alk934mgwq8</span>: adbec</span><br><span class="line"><span class="attribute">5g99yzrs2em9</span>: adcbe</span><br><span class="line"><span class="attribute">94fh8344isq2</span>: adceb</span><br><span class="line"><span class="attribute">9all33fmjeq3</span>: adebc</span><br><span class="line"><span class="attribute">9fflk3f4jmq2</span>: adecb</span><br><span class="line"><span class="attribute">4bl89y6gs2q9</span>: aebcd</span><br><span class="line"><span class="attribute">4fl8ly9mskq8</span>: aebdc</span><br><span class="line"><span class="attribute">4gl93yrgweq9</span>: aecbd</span><br><span class="line"><span class="attribute">49f5ky94ugq2</span>: aecdb</span><br><span class="line"><span class="attribute">44l53y9mteq3</span>: aedbc</span><br><span class="line"><span class="attribute">49f5ky94tmq2</span>: aedcb</span><br><span class="line"><span class="attribute">fh8948nse264</span>: bacde</span><br><span class="line"><span class="attribute">fgk998mgew68</span>: baced</span><br><span class="line"><span class="attribute">fh8948ise26f</span>: badce</span><br><span class="line"><span class="attribute">f4k5984mbw62</span>: badec</span><br><span class="line"><span class="attribute">fbk998cgd263</span>: baecd</span><br><span class="line"><span class="attribute">ffk9l8fmdk62</span>: baedc</span><br><span class="line"><span class="attribute">b58946zsy29m</span>: bcade</span><br><span class="line"><span class="attribute">b4k996ygyw9q</span>: bcaed</span><br><span class="line"><span class="attribute">bl8946ks2e9c</span>: bcdae</span><br><span class="line"><span class="attribute">r44h9343nse2</span>: bcdea</span><br><span class="line"><span class="attribute">bfk996eg1e90</span>: bcead</span><br><span class="line"><span class="attribute">rf4ll3f3pge2</span>: bceda</span><br><span class="line"><span class="attribute">b589450sy24r</span>: bdace</span><br><span class="line"><span class="attribute">f4kl99ymgw8q</span>: bdaec</span><br><span class="line"><span class="attribute">bl8945qs2e46</span>: bdcae</span><br><span class="line"><span class="attribute">r44h9343ise2</span>: bdcea</span><br><span class="line"><span class="attribute">ffkl99emje80</span>: bdeac</span><br><span class="line"><span class="attribute">rf4ll3f3jme2</span>: bdeca</span><br><span class="line"><span class="attribute">a5k9940gs28r</span>: beacd</span><br><span class="line"><span class="attribute">a9k9l43msk8q</span>: beadc</span><br><span class="line"><span class="attribute">alk994qgwe86</span>: becad</span><br><span class="line"><span class="attribute">m945ly93uge2</span>: becda</span><br><span class="line"><span class="attribute">a9k5948mte80</span>: bedac</span><br><span class="line"><span class="attribute">m945ly93tme2</span>: bedca</span><br><span class="line"><span class="attribute">lb984q5wa264</span>: cabde</span><br><span class="line"><span class="attribute">lal89q4kaw68</span>: cabed</span><br><span class="line"><span class="attribute">lg99yqlwee6f</span>: cadbe</span><br><span class="line"><span class="attribute">94b58846bs02</span>: cadeb</span><br><span class="line"><span class="attribute">lal93qfkde63</span>: caebd</span><br><span class="line"><span class="attribute">9fb9k8f6dg02</span>: caedb</span><br><span class="line"><span class="attribute">g5934rzwa29m</span>: cbade</span><br><span class="line"><span class="attribute">g4l39rykaw9q</span>: cbaed</span><br><span class="line"><span class="attribute">gl934rkwee9c</span>: cbdae</span><br><span class="line"><span class="attribute">645b98405sy2</span>: cbdea</span><br><span class="line"><span class="attribute">gfl39rekde90</span>: cbead</span><br><span class="line"><span class="attribute">6f5fl8f07gy2</span>: cbeda</span><br><span class="line"><span class="attribute">h499yn3wye4r</span>: cdabe</span><br><span class="line"><span class="attribute">94bl89y6gs2q</span>: cdaeb</span><br><span class="line"><span class="attribute">hf984n8wye46</span>: cdbae</span><br><span class="line"><span class="attribute">9m5g99y0ls2e</span>: cdbea</span><br><span class="line"><span class="attribute">9fbl89e6ja20</span>: cdeab</span><br><span class="line"><span class="attribute">9c5lf9e0j42y</span>: cdeba</span><br><span class="line"><span class="attribute">g4l93m3kse8r</span>: ceabd</span><br><span class="line"><span class="attribute">49b9k436sg2q</span>: ceadb</span><br><span class="line"><span class="attribute">gfl89m8kse86</span>: cebad</span><br><span class="line"><span class="attribute">4r54l430xg2e</span>: cebda</span><br><span class="line"><span class="attribute">49b58486ta20</span>: cedab</span><br><span class="line"><span class="attribute">4655f480t42y</span>: cedba</span><br><span class="line"><span class="attribute">lb984k6wa2c9</span>: dabce</span><br><span class="line"><span class="attribute">9ah8984naw08</span>: dabec</span><br><span class="line"><span class="attribute">lg99ykrweec9</span>: dacbe</span><br><span class="line"><span class="attribute">94b58845cs02</span>: daceb</span><br><span class="line"><span class="attribute">9ah938fnde03</span>: daebc</span><br><span class="line"><span class="attribute">9fb9k8f5dm02</span>: daecb</span><br><span class="line"><span class="attribute">g5934l0wa2fr</span>: dbace</span><br><span class="line"><span class="attribute">44h399ynaw3q</span>: dbaec</span><br><span class="line"><span class="attribute">gl934lqweef6</span>: dbcae</span><br><span class="line"><span class="attribute">645b984z6sy2</span>: dbcea</span><br><span class="line"><span class="attribute">4fh399ende30</span>: dbeac</span><br><span class="line"><span class="attribute">6f5fl8fz7my2</span>: dbeca</span><br><span class="line"><span class="attribute">h499yi3wyefr</span>: dcabe</span><br><span class="line"><span class="attribute">94bl89y5ms2q</span>: dcaeb</span><br><span class="line"><span class="attribute">hf984i8wyef6</span>: dcbae</span><br><span class="line"><span class="attribute">9m5g99yzrs2e</span>: dcbea</span><br><span class="line"><span class="attribute">9fbl89e5pa20</span>: dceab</span><br><span class="line"><span class="attribute">9c5lf9ezp42y</span>: dceba</span><br><span class="line"><span class="attribute">44h9343nse2r</span>: deabc</span><br><span class="line"><span class="attribute">49b9k435sm2q</span>: deacb</span><br><span class="line"><span class="attribute">4fh8948nse26</span>: debac</span><br><span class="line"><span class="attribute">4r54l43zxm2e</span>: debca</span><br><span class="line"><span class="attribute">49b58485ua20</span>: decab</span><br><span class="line"><span class="attribute">4655f48zu42y</span>: decba</span><br><span class="line"><span class="attribute">fbl89e6ja209</span>: eabcd</span><br><span class="line"><span class="attribute">ffl8le9pak08</span>: eabdc</span><br><span class="line"><span class="attribute">fgl93erjee09</span>: eacbd</span><br><span class="line"><span class="attribute">f9f5ke97cg02</span>: eacdb</span><br><span class="line"><span class="attribute">f4l53e9pbe03</span>: eadbc</span><br><span class="line"><span class="attribute">f9f5ke97bm02</span>: eadcb</span><br><span class="line"><span class="attribute">a5l39f0ja23r</span>: ebacd</span><br><span class="line"><span class="attribute">a9l3lf3pak3q</span>: ebadc</span><br><span class="line"><span class="attribute">all39fqjee36</span>: ebcad</span><br><span class="line"><span class="attribute">c99ble916gy2</span>: ebcda</span><br><span class="line"><span class="attribute">a9lz9f8pbe30</span>: ebdac</span><br><span class="line"><span class="attribute">c99ble915my2</span>: ebdca</span><br><span class="line"><span class="attribute">b4l93c3jye3r</span>: ecabd</span><br><span class="line"><span class="attribute">f9flkf37mg2q</span>: ecadb</span><br><span class="line"><span class="attribute">bfl89c8jye36</span>: ecbad</span><br><span class="line"><span class="attribute">fr9glf31rg2e</span>: ecbda</span><br><span class="line"><span class="attribute">f9fh8f87na20</span>: ecdab</span><br><span class="line"><span class="attribute">f69hff81n42y</span>: ecdba</span><br><span class="line"><span class="attribute">f4ll3f3pge2r</span>: edabc</span><br><span class="line"><span class="attribute">f9flkf37gm2q</span>: edacb</span><br><span class="line"><span class="attribute">fflk9f8pge26</span>: edbac</span><br><span class="line"><span class="attribute">fr9glf31lm2e</span>: edbca</span><br><span class="line"><span class="attribute">f9fh8f87ia20</span>: edcab</span><br><span class="line"><span class="attribute">f69hff81i42y</span>: edcba</span><br></pre></td></tr></table></figure><p>总不可能让我一个一个输吧。。看到题目</p><blockquote><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">新年快乐呀！来一起下象棋吧！我都摆好咯~ 祝愿大家在新的一年里 lucky！flag格式：NSSCTF&#123;<span class="strong">**字母小写**</span>&#125;</span><br></pre></td></tr></table></figure></blockquote><p>唯一的五位key盲猜lucky，那么NSSCTF{h499yn3wye4r}</p><h2 id="misc">misc</h2><h3 id="温馨的酒吧">温馨的酒吧</h3><p>看视频过完所有剧情即可拿flag</p><p>官方wp是遍历所有节点返回名字含flag的图片来得到的</p><p>注意有一段有5个乱码和中间正好一样，猜测：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">NSSCTF</span><span class="template-variable">&#123;新年快乐_不要停下来啊_CTFer!&#125;</span></span><br></pre></td></tr></table></figure><h3 id="userssssssssss">userssssssssss</h3><p>进入后按创建日期排序，最后是laminous，打开看到flag</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">NSSCTF</span>&#123;f9d04fc8-<span class="number">77</span>a6-<span class="number">4700</span>-b114-<span class="number">2</span>a071ff76ceb&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">好难</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="wp" scheme="https://www.pri87.vip/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>NSSCTF_r17题目复现</title>
    <link href="https://www.pri87.vip/posts/b3e0bfc3.html"/>
    <id>https://www.pri87.vip/posts/b3e0bfc3.html</id>
    <published>2024-01-28T11:11:14.000Z</published>
    <updated>2024-01-30T05:51:31.019Z</updated>
    
    <content type="html"><![CDATA[<h2 id="RE">RE</h2><h3 id="snake">snake</h3><p>这个题是游戏题，相当于通关就可以得到最后的flag，可惜当时被go的抽象给蒙蔽了双眼，没有想去动调</p><p>逻辑大概是：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( i = <span class="number">0LL</span>; i &lt; <span class="number">10</span>; i = v65 + <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v65 = i;</span><br><span class="line">    snake_pkg_app_Run(<span class="number">20</span>, <span class="number">20</span>, v0, v1, (_DWORD)v2, v3, v4, v5, v6, v57, v58);</span><br><span class="line">    v74 = v8;</span><br><span class="line">    v15 = runtime_convT64(v65, <span class="number">20</span>, v10, v1, (_DWORD)v2, v11, v12, v13, v14, v57);</span><br><span class="line">    *(_QWORD *)&amp;v74 = &amp;RTYPE_int;</span><br><span class="line">    *((_QWORD *)&amp;v74 + <span class="number">1</span>) = v15;</span><br><span class="line">    v1 = <span class="number">19</span>;</span><br><span class="line">    v2 = &amp;v74;</span><br><span class="line">    fmt_Fprintf(</span><br><span class="line">      (<span class="type">unsigned</span> <span class="type">int</span>)go_itab__os_File_io_Writer,</span><br><span class="line">      os_Stdout,</span><br><span class="line">      (<span class="type">unsigned</span> <span class="type">int</span>)<span class="string">&quot;%d Game round ends\n&quot;</span>,</span><br><span class="line">      <span class="number">19</span>,</span><br><span class="line">      (<span class="type">unsigned</span> <span class="type">int</span>)&amp;v74,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      v16,</span><br><span class="line">      v17,</span><br><span class="line">      v57,</span><br><span class="line">      v58,</span><br><span class="line">      v59,</span><br><span class="line">      v60,</span><br><span class="line">      v61,</span><br><span class="line">      v62,</span><br><span class="line">      v63);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( i == <span class="number">10</span> &amp;&amp; qword_569E78 == <span class="number">400</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v73[<span class="number">0</span>] = &amp;RTYPE_string;</span><br><span class="line">    v73[<span class="number">1</span>] = &amp;off_4E5D98;</span><br><span class="line">    v18 = <span class="number">1</span>;</span><br><span class="line">    LODWORD(v19) = <span class="number">1</span>;</span><br><span class="line">    fmt_Fprintln(</span><br><span class="line">      (<span class="type">unsigned</span> <span class="type">int</span>)go_itab__os_File_io_Writer,</span><br><span class="line">      os_Stdout,</span><br><span class="line">      (<span class="type">unsigned</span> <span class="type">int</span>)v73,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      v3,</span><br><span class="line">      v4,</span><br><span class="line">      v5,</span><br><span class="line">      v6,</span><br><span class="line">      v57,</span><br><span class="line">      v58,</span><br><span class="line">      v59,</span><br><span class="line">      v60,</span><br><span class="line">      v61);</span><br><span class="line">    v23 = snake_pkg_game_All_rand;</span><br><span class="line">    v71 = snake_pkg_game_All_rand;</span><br><span class="line">    v24 = qword_569E78;</span><br><span class="line">    v67 = qword_569E78;</span><br><span class="line">    v25 = <span class="number">0LL</span>;</span><br><span class="line">    v26 = <span class="number">0LL</span>;</span><br><span class="line">    v27 = <span class="number">0LL</span>;</span><br><span class="line">    <span class="keyword">while</span> ( v25 &lt; v24 )</span><br><span class="line">    &#123;</span><br><span class="line">      v66 = v25;</span><br><span class="line">      v64 = v26;</span><br><span class="line">      v70 = v27;</span><br><span class="line">      v28 = *(_QWORD *)(v23 + <span class="number">8</span> * v25);</span><br><span class="line">      v75 = v8;</span><br><span class="line">      v29 = runtime_convT64(v28, v27, v28, v18, v19, v24, v20, v21, v22, v57);</span><br><span class="line">      *(_QWORD *)&amp;v75 = &amp;RTYPE_int;</span><br><span class="line">      *((_QWORD *)&amp;v75 + <span class="number">1</span>) = v29;</span><br><span class="line">      v18 = fmt_Sprintf((<span class="type">unsigned</span> <span class="type">int</span>)<span class="string">&quot;%02x&quot;</span>, <span class="number">4</span>, (<span class="type">unsigned</span> <span class="type">int</span>)&amp;v75, <span class="number">1</span>, <span class="number">1</span>, v30, v31, v32, v33, v57, v58, v59, v60, v61);</span><br><span class="line">      v34 = v70;</span><br><span class="line">      v39 = runtime_concatstring2(<span class="number">0</span>, v70, v64, v18, <span class="number">4</span>, v35, v36, v37, v38, v57, v58, v59, v60, v61);</span><br><span class="line">      v23 = v71;</span><br><span class="line">      v24 = v67;</span><br><span class="line">      v19 = v39;</span><br><span class="line">      v25 = v66 + <span class="number">1</span>;</span><br><span class="line">      v26 = v34;</span><br><span class="line">      v27 = v19;</span><br><span class="line">    &#125;</span><br><span class="line">    *(_OWORD *)v69.h = v8;</span><br><span class="line">    v40 = &amp;v57 + <span class="number">12</span>;</span><br><span class="line">    v56 = &amp;v76;</span><br><span class="line">    ((<span class="type">void</span> (__fastcall *)(__int64 *))loc_45F36B)(v40);</span><br><span class="line">    *(_QWORD *)v69.h = <span class="number">0xEFCDAB8967452301</span>LL;</span><br><span class="line">    *(_QWORD *)&amp;v69.h[<span class="number">2</span>] = <span class="number">0x1032547698BADCFE</span>LL;</span><br><span class="line">    v69.h[<span class="number">4</span>] = <span class="number">-1009589776</span>;</span><br><span class="line">    *(_OWORD *)&amp;v69.nx = v8;</span><br><span class="line">    v46 = (uint8 *)runtime_stringtoslicebyte(</span><br><span class="line">                     (<span class="type">unsigned</span> <span class="type">int</span>)&amp;v68,</span><br><span class="line">                     v27,</span><br><span class="line">                     v41,</span><br><span class="line">                     (_DWORD)v40,</span><br><span class="line">                     v19,</span><br><span class="line">                     v42,</span><br><span class="line">                     v43,</span><br><span class="line">                     v44,</span><br><span class="line">                     v45,</span><br><span class="line">                     v57,</span><br><span class="line">                     v58,</span><br><span class="line">                     v59);</span><br><span class="line">    v77.cap = v47;</span><br><span class="line">    v77.len = v27;</span><br><span class="line">    v77.ptr = v46;</span><br><span class="line">    crypto_sha1__ptr_digest_Write(&amp;v69, v77);</span><br><span class="line">    v77.ptr = <span class="number">0LL</span>;</span><br><span class="line">    v77.len = <span class="number">0LL</span>;</span><br><span class="line">    v77.cap = <span class="number">0LL</span>;</span><br><span class="line">    v77 = crypto_sha1__ptr_digest_Sum(&amp;v69, v77);</span><br><span class="line">    v72 = v8;</span><br><span class="line">    v53 = runtime_convTslice(v48, v77.ptr, v77.len, <span class="number">0</span>, v19, v49, v50, v51, v52, v57, v58, v59);</span><br><span class="line">    *(_QWORD *)&amp;v72 = &amp;RTYPE__slice_uint8;</span><br><span class="line">    *((_QWORD *)&amp;v72 + <span class="number">1</span>) = v53;</span><br><span class="line">    fmt_Fprintf(</span><br><span class="line">      (<span class="type">unsigned</span> <span class="type">int</span>)go_itab__os_File_io_Writer,</span><br><span class="line">      os_Stdout,</span><br><span class="line">      (<span class="type">unsigned</span> <span class="type">int</span>)<span class="string">&quot;flag&#123;%x&#125;\n&quot;</span>,</span><br><span class="line">      <span class="number">9</span>,</span><br><span class="line">      (<span class="type">unsigned</span> <span class="type">int</span>)&amp;v72,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      <span class="number">1</span>,</span><br><span class="line">      v54,</span><br><span class="line">      v55,</span><br><span class="line">      v57,</span><br><span class="line">      v58,</span><br><span class="line">      v59,</span><br><span class="line">      v60,</span><br><span class="line">      v61,</span><br><span class="line">      v62,</span><br><span class="line">      v63);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>根据汇编，化简逻辑是</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">判断i <span class="operator">=</span><span class="operator">=</span> <span class="number">10</span></span><br><span class="line">不是 再来一轮</span><br><span class="line">是   判断qword_569E78 <span class="operator">=</span><span class="operator">=</span> <span class="number">400</span></span><br><span class="line">不是  结束</span><br><span class="line">是    输出flag</span><br></pre></td></tr></table></figure><p>以及网上有人说flag是根据输入变换的，但是我动态调试的时候试过不同的发现flag都一样，不过这个代码太抽象我也不知道flag怎么打出来的</p><p>最后就是在第一个判断0A的位置下断点，不断改变标志位，让程序到达输出success的位置，最后调用printf</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;da39a3ee5e6b4b0d3255bfef95601890afd80709&#125;</span></span><br></pre></td></tr></table></figure><h3 id="can-can-need-pxory">can_can_need_pxory</h3><p>这个题完全不能理解（现在也是）</p><p>是py转exe，先反编译出pyc，然后再反编译成py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ccccccccccccccccccccccccccccccccccc!&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;D0 U know C?&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n#include &lt;NSSCTF.h&gt;\nv01d bnssst(int FTC[], int lenggggggg) &#123;\n    int i, j, SSN;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;This is CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;6L+Z5piv5L2g6KaB55qEZmxhZ+WQl++8nwpOU1NDVEZ7YjVlMzlkMDktODg3Yy1hZGI0LTE4OWMtMWI0OGEwNWJmOTY2fQ==&#x27;</span>)</span><br><span class="line">A = &#123;</span><br><span class="line">    <span class="string">&#x27;flag&#x27;</span>: <span class="string">&#x27;NSSCTF&#123;a81c0d5e-ec6d-2b80&#x27;</span> &#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n                SSN = FTC[j];\n                printf(&quot;flag&quot;);\n            &#125;\n&#125;\nint mian() &#123;\n    int FTC[] = [ -,\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;ccccccccccccccccccc&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\nb, 2, 6, 7, -, d, 5, 8, 4, -, 6, 8, 7, 4, -, f, 1, 2, 6, e, 3, a, 5, 1, 0, 6, 1, &#125;];\n    int lenggggggg = (int) sizeof(FTC) / sizeof(*FTC);\n    bnsScrt(FTC, lenggggggg);\n    int i;\n    for (i = 0; i &lt; lenggggggg; i++)\n        printf(&quot;%d &quot;, FTC[i]);\n    remake 0;\n&#125;\n&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------------------------------------------------&#x27;</span>)</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">flag = <span class="string">&#x27;************************************&#x27;</span></span><br><span class="line">r = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(flag)):</span><br><span class="line">    <span class="keyword">if</span> (x + <span class="number">1</span>) % <span class="number">4</span> == <span class="number">0</span>:</span><br><span class="line">        res = <span class="built_in">str</span>(<span class="built_in">ord</span>(flag[x]) ^ <span class="number">2421</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="built_in">str</span>(<span class="built_in">ord</span>(flag[x]) &lt;&lt; <span class="number">6</span> &lt;&lt; <span class="number">7</span> &gt;&gt; <span class="number">2</span> &gt;&gt; <span class="number">1</span> ^ <span class="number">92</span>)</span><br><span class="line">    r = r + res + <span class="string">&#x27;,&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(base64.b64encode(base64.b16encode(base64.b32encode(r.encode(<span class="string">&#x27;utf-8&#x27;</span>)))).decode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><p>上面print出来的东西好像是一段c语言代码，但是语法很抽象，就算改完语法的错，我也不理解ccccccccc是啥玩意，根据后面正常的py语法，怀疑c代码是给最后的末值的，</p><p>之后有机会补</p><h2 id="CRYPTO">CRYPTO</h2><h3 id="Level-1">Level_1</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long, getPrime</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> getflag</span><br><span class="line"></span><br><span class="line">e1 = getPrime(<span class="number">1024</span>)</span><br><span class="line">e2 = getPrime(<span class="number">1024</span>)</span><br><span class="line">n = e1 * e2</span><br><span class="line">m = bytes_to_long(getflag().encode())</span><br><span class="line">c1 = <span class="built_in">pow</span>(m, e1, n)</span><br><span class="line">c2 = <span class="built_in">pow</span>(m, e2, n)</span><br><span class="line"><span class="built_in">print</span>(n)</span><br><span class="line"><span class="built_in">print</span>(c1)</span><br><span class="line"><span class="built_in">print</span>(c2)</span><br><span class="line"><span class="built_in">print</span>(e1)</span><br><span class="line"><span class="built_in">print</span>(e2)</span><br></pre></td></tr></table></figure><p>这里已知n，c1，c2，e1，e2，把e1，e2看成p，q</p><p>那么可以根据$c_1 = m^p \mod n$</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">n = <span class="number">22517647586235353449147432825948355885962082318127038138351524894369583539246623545565501496312996556897362735789505076324197072008392656511657262430676945685471397862981216472634785622155317188784494912316440866051402627470561626691472280850273482836308002341429493460677206562201947000047718275995355772707947408688836667011206588727438261189233517003341094758634490421007907582147392858070623641389171229435187248184443645883661560636995548332475573072064240073037558031928639832259001407585962782698021735648128101459118863015844905452823095147248865104102562991382119836061161756978764495337874807458182581421229</span></span><br><span class="line">c1 = <span class="number">1432393096266401187029059077791766305797845826173887492889260179348416733820890797101745501984437201566364579129066414005659742104885321270122634155922766503333859812540068278962999824043206496595825886026095484801291802992082454776271149083516187121160475839108002133113254134626407840182541809478892306748590016896975053434021666376203540725254480252049443975835307793528287818262102688334515632062552114342619781840154202525919769192765621085008206581226486157149883898548933475155236509073675387541466324512294079413938239828341890576923100769181401944289365386552139418728492565319685207500539721582552448971814</span></span><br><span class="line">c2 = <span class="number">13299679392897297864252207869444022461237574801991239380909482153705185317634241850084078027230394830079554676426505967970943836811048777462696506309466535820372917756458083553031417406403895116557560548183674144457502601887632495739472178857537011190162283185735114683172731936834993707871636782206418680404006299140864001776588991141011500807549645227520128216130966268810165946959810884593793452437010902774726405217517557763322690215690606067996057037379898630878638483268362526985225092000670251641184960698506349245915816808028210142606700394584541282682338561482561343076218115042099753144875658666459825545602</span></span><br><span class="line">e1 = <span class="number">155861690390761931560700906834977917646203451142415617638229284868013723431003139974975998354830978765979365632120896717380895021936387027045347260400512396388028781862427862974453223157509702913026222541667006325100878113871620322023188372501930117363623076837619478555007555970810681502521309925774889678793</span></span><br><span class="line">e2 = <span class="number">144471983652821947847253052623701746810204736865723159569786739658583884214397562204788127484897909964898113250509653721265240138487697822089282456150238116811225975640330930854549232972314642221382625614304415750165289831040623741828600283778523993251940904896081111235859249916040849697146542311990869696453</span></span><br><span class="line"></span><br><span class="line">phi = (e1-<span class="number">1</span>)*(e2-<span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e1,phi)</span><br><span class="line">m = <span class="built_in">pow</span>(c1,d,n)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m))</span><br><span class="line"><span class="comment">#b&#x27;NSSCTF&#123;Y0u_Hav3_S01v3d_Crypt0_Leve1_i&#125;&#x27;</span></span><br></pre></td></tr></table></figure><p>这就是标准的RSA解密流程</p><p>也可以用共模攻击</p><blockquote><p>共模是指：就是明文m,相同。用两个公钥e1,e2加密得到两个私钥d1,d2 和两个密文c1,c2（e不同，n同）<br>共模攻击，即当m不变的情况下，知道n,e1,e2,c1,c2, 可以在不知道d1,d2的情况下，解出m<br>利用条件为=&gt; gcd(e1,e2)=1</p></blockquote><p>若两个e互素，gcd(e1,e2)=1</p><p>那么一定存在x，y使得gcd(a,b) = ax+by</p><p>所以$e_1s_1+e_2s_2=1$</p><p>根据复杂的推导过程最后得到：</p><p>(c1^s1*c2^s2)%n=m%n=m</p><p>即：m = (pow(c_1,s_1,n)*pow(c_2,s_2,n)) % n</p><p>所以另一个方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sympy <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"></span><br><span class="line">e1 = <span class="number">155861690390761931560700906834977917646203451142415617638229284868013723431003139974975998354830978765979365632120896717380895021936387027045347260400512396388028781862427862974453223157509702913026222541667006325100878113871620322023188372501930117363623076837619478555007555970810681502521309925774889678793</span></span><br><span class="line">e2 = <span class="number">144471983652821947847253052623701746810204736865723159569786739658583884214397562204788127484897909964898113250509653721265240138487697822089282456150238116811225975640330930854549232972314642221382625614304415750165289831040623741828600283778523993251940904896081111235859249916040849697146542311990869696453</span></span><br><span class="line">n = <span class="number">22517647586235353449147432825948355885962082318127038138351524894369583539246623545565501496312996556897362735789505076324197072008392656511657262430676945685471397862981216472634785622155317188784494912316440866051402627470561626691472280850273482836308002341429493460677206562201947000047718275995355772707947408688836667011206588727438261189233517003341094758634490421007907582147392858070623641389171229435187248184443645883661560636995548332475573072064240073037558031928639832259001407585962782698021735648128101459118863015844905452823095147248865104102562991382119836061161756978764495337874807458182581421229</span></span><br><span class="line">c1 = <span class="number">1432393096266401187029059077791766305797845826173887492889260179348416733820890797101745501984437201566364579129066414005659742104885321270122634155922766503333859812540068278962999824043206496595825886026095484801291802992082454776271149083516187121160475839108002133113254134626407840182541809478892306748590016896975053434021666376203540725254480252049443975835307793528287818262102688334515632062552114342619781840154202525919769192765621085008206581226486157149883898548933475155236509073675387541466324512294079413938239828341890576923100769181401944289365386552139418728492565319685207500539721582552448971814</span></span><br><span class="line">c2 = <span class="number">13299679392897297864252207869444022461237574801991239380909482153705185317634241850084078027230394830079554676426505967970943836811048777462696506309466535820372917756458083553031417406403895116557560548183674144457502601887632495739472178857537011190162283185735114683172731936834993707871636782206418680404006299140864001776588991141011500807549645227520128216130966268810165946959810884593793452437010902774726405217517557763322690215690606067996057037379898630878638483268362526985225092000670251641184960698506349245915816808028210142606700394584541282682338561482561343076218115042099753144875658666459825545602</span></span><br><span class="line"></span><br><span class="line">s,s1,s2=gmpy2.gcdext(e1,e2)</span><br><span class="line">m=(<span class="built_in">pow</span>(c1,s1,n)*<span class="built_in">pow</span>(c2,s2,n))%n</span><br><span class="line"><span class="built_in">print</span>(libnum.n2s(<span class="built_in">int</span>(m)).decode())</span><br></pre></td></tr></table></figure><h3 id="Level-2">Level_2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 猜猜我是谁 猜对了直接秒出flag喔</span></span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long, getPrime</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> getflag</span><br><span class="line"></span><br><span class="line">p = ***</span><br><span class="line">q = getPrime(<span class="number">1024</span>)</span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n = p * q</span><br><span class="line">m = bytes_to_long(getflag().encode())</span><br><span class="line">c=<span class="built_in">pow</span>(m, e, n)</span><br><span class="line"><span class="built_in">print</span>(q)</span><br><span class="line"><span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><p>根据提示说e很常见，盲猜65537</p><p>p的取值在ps.txt文件中，遍历p直接求出结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"></span><br><span class="line">q=<span class="number">145721736470529261146573065574028992352505611489859183763269215489708531333597694809923949026781460438320576519639268582565188719134157402292313959218961804213310847081787824780075530751842057663327444602428455144829447776271394663729996984613471623158126083062443634493708467568220146024273763894704649472957</span></span><br><span class="line">c=<span class="number">17441814714407189483380175736850663249578989775568187792928771544069162420510939242665830363276698262009780462912108642025299275146709817979705069095332726251759039923303627023610865046363171692163473939115438686877494878334016463787558794121885354719336139401336137097548305393030069499625065664884238710759260231321106291200849044147840392021931720902340003746946851806025722944795391356835342258387797980787437188976704677008092850181043891802072500430200735973581081228711070923822341261809453662427341958883142789220800541626034573952425948295446202775198692920613709157662831071515700549093766182579873408465779</span></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;ps.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    ps = [<span class="built_in">int</span>(line.strip()) <span class="keyword">for</span> line <span class="keyword">in</span> f]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> ps:</span><br><span class="line">    phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">    d = gmpy2.invert(e,phi)</span><br><span class="line">    m = <span class="built_in">pow</span>(c,d,p*q)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        flag = long_to_bytes(m).decode()</span><br><span class="line">        <span class="keyword">if</span> flag.startswith(<span class="string">&#x27;NSSCTF&#123;&#x27;</span>):</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">        <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h3 id="Level-3">Level_3</h3><p>当时没做出来，后来发现nc的时候应该输ip 空格 端口 而不是ip:端口</p><p>就很亏</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> tqdm <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decode</span>(<span class="params">n,e1,e2,c1,c2</span>):</span><br><span class="line">t = gmpy2.gcd(e1,e2)</span><br><span class="line"><span class="keyword">if</span> t == <span class="number">1</span>:</span><br><span class="line">s,x,y = gmpy2.gcdext(e1,e2)</span><br><span class="line">m = (<span class="built_in">pow</span>(c1,x,n)*<span class="built_in">pow</span>(c2,y,n))%n</span><br><span class="line">flag = long_to_bytes(m)</span><br><span class="line"><span class="keyword">return</span> flag</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">s,x,y = gmpy2.gcdext(e1,e2)</span><br><span class="line">k = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">m = gmpy2.iroot((<span class="built_in">pow</span>(c1,x,n)*<span class="built_in">pow</span>(c2,y,n)+k*n)%n,t)</span><br><span class="line"><span class="keyword">if</span> m[<span class="number">1</span>]:</span><br><span class="line"><span class="built_in">print</span>(long_to_bytes(m[<span class="number">0</span>]))</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">k += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">sh = remote(<span class="string">&quot;IP&quot;</span>,端口号)</span><br><span class="line"></span><br><span class="line"><span class="comment">#这里需要666次，试了试665次打不出来</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> trange(<span class="number">666</span>):</span><br><span class="line">data = sh.recvuntil(<span class="string">b&quot; y0u J01n In th3 NSS t3am?\n py?\n&quot;</span>)</span><br><span class="line">n = <span class="built_in">eval</span>(sh.recvline().decode().strip().split(<span class="string">&quot;=&quot;</span>)[-<span class="number">1</span>])</span><br><span class="line">e1 = <span class="built_in">eval</span>(sh.recvline().decode().strip().split(<span class="string">&quot;=&quot;</span>)[-<span class="number">1</span>])</span><br><span class="line">e2 = <span class="built_in">eval</span>(sh.recvline().decode().strip().split(<span class="string">&quot;=&quot;</span>)[-<span class="number">1</span>])</span><br><span class="line">c1 = <span class="built_in">eval</span>(sh.recvline().decode().strip().split(<span class="string">&quot;=&quot;</span>)[-<span class="number">1</span>])</span><br><span class="line">c2 = <span class="built_in">eval</span>(sh.recvline().decode().strip().split(<span class="string">&quot;=&quot;</span>)[-<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">flag = decode(n,e1,e2,c1,c2)</span><br><span class="line">sh.sendlineafter(<span class="string">b&quot;[+] Pl Give Me flaag :&quot;</span>,flag)</span><br><span class="line">sh.interactive()</span><br><span class="line"><span class="comment">#转自https://www.cnblogs.com/mumuhhh/p/17993151#top</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">好难</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="wp" scheme="https://www.pri87.vip/tags/wp/"/>
    
  </entry>
  
  <entry>
    <title>春秋杯2023冬 复现</title>
    <link href="https://www.pri87.vip/posts/64aac72c.html"/>
    <id>https://www.pri87.vip/posts/64aac72c.html</id>
    <published>2024-01-23T13:58:58.000Z</published>
    <updated>2024-01-26T08:57:03.960Z</updated>
    
    <content type="html"><![CDATA[<h2 id="re">re</h2><h3 id="upx2023">upx2023</h3><p>先脱upx壳，这是修改了标志，用010editor把upx修改成UPX然后用upx -d脱壳</p><p>进入主函数后，发现逻辑大概是</p><ol><li>读flag</li><li>变换flag</li><li>用随机数异或flag加密</li><li>和check数组检验</li></ol><p>那么可以直接拿到check数组<br>我们要找flag就要找到那个随机数，srand函数传入的是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Seed = time(<span class="number">0</span>i64);</span><br><span class="line">srand(Seed);</span><br></pre></td></tr></table></figure><p>同时动态调试可以得到：</p><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;0123456789ABCDEFGHIGKLMNOPQRSTUVWXYZ&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">变成</span></span><br><span class="line"><span class="language-xml">f</span><span class="template-variable">&#123;37BFGNRVZlg02468ACEGIKMOQSUWY&#125;</span><span class="language-xml">a159DHLPTX</span></span><br></pre></td></tr></table></figure><p>因此我们可以找时间遍历，遍历去年的时间戳</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span> </span>&#123;</span><br><span class="line"><span class="comment">/*unsigned int seed = time(0);</span></span><br><span class="line"><span class="comment">srand(seed);</span></span><br><span class="line"><span class="comment">cout &lt;&lt; &#x27;[&#x27;;</span></span><br><span class="line"><span class="comment">for (int i = 0; i &lt; 42; i++) &#123;</span></span><br><span class="line"><span class="comment">int r = rand() % 255;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; r;</span></span><br><span class="line"><span class="comment">if (i != 41) &#123;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; &#x27;,&#x27;;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">cout &lt;&lt; &#x27;]&#x27;;*/</span></span><br><span class="line"><span class="type">int</span> check[<span class="number">6</span>];</span><br><span class="line">check[<span class="number">0</span>] = <span class="string">&#x27;f&#x27;</span> ^ <span class="number">0x9</span>;</span><br><span class="line">check[<span class="number">1</span>] = <span class="string">&#x27;&#123;&#x27;</span> ^ <span class="number">0x63</span>;</span><br><span class="line">check[<span class="number">2</span>] = <span class="string">&#x27;l&#x27;</span>^ <span class="number">0xC6</span>;</span><br><span class="line">check[<span class="number">3</span>] = <span class="string">&#x27;g&#x27;</span>^ <span class="number">0x65</span>;</span><br><span class="line">check[<span class="number">4</span>] = <span class="string">&#x27;&#125;&#x27;</span>^ <span class="number">0xFD</span>;</span><br><span class="line">check[<span class="number">5</span>] = <span class="string">&#x27;a&#x27;</span>^ <span class="number">0xFA</span>;</span><br><span class="line"><span class="type">int</span> r[<span class="number">42</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> time = <span class="number">1672416000</span>; time &lt; <span class="number">1706253391</span>; time++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">srand</span>(time);</span><br><span class="line"><span class="keyword">if</span> (check[<span class="number">0</span>] != (r[<span class="number">0</span>] = <span class="built_in">rand</span>() % <span class="number">255</span>))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (check[<span class="number">1</span>] != (r[<span class="number">1</span>] = <span class="built_in">rand</span>() % <span class="number">255</span>))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; <span class="number">42</span>; i++)</span><br><span class="line">r[i] = <span class="built_in">rand</span>() % <span class="number">255</span>;</span><br><span class="line"><span class="keyword">if</span> ((check[<span class="number">2</span>] != r[<span class="number">11</span>]) || (check[<span class="number">3</span>] != r[<span class="number">12</span>]) || (check[<span class="number">4</span>] != r[<span class="number">31</span>]) || (check[<span class="number">5</span>] != r[<span class="number">32</span>]))</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (time &lt; <span class="number">1706253391</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;the seed is: &quot;</span> &lt;&lt; time&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;[&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">42</span>; j++) &#123;</span><br><span class="line">cout &lt;&lt; r[j];</span><br><span class="line"><span class="keyword">if</span> (j != <span class="number">41</span>) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;,&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&#x27;]&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到seed:</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">the seed is: <span class="number">1682145110</span></span><br><span class="line">[<span class="number">111,24,236,196</span>,<span class="number">58,186,93,97</span>,<span class="number">61,51,169,170</span>,<span class="number">2,17,113,139</span>,<span class="number">162,38,14,77</span>,<span class="number">131,66,112,202</span>,<span class="number">80,113,231,107</span>,<span class="number">15,50,159,128</span>,<span class="number">155,183,227,184</span>,<span class="number">224,28,16,180</span>,<span class="number">42</span>,<span class="number">57</span>]</span><br></pre></td></tr></table></figure><p>最后异或一下，发现是打乱的flag</p><p>根据这个对应写代码逆向</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line">check = [<span class="number">0x09</span>, <span class="number">0x63</span>, <span class="number">0xD9</span>, <span class="number">0xF6</span>, <span class="number">0x58</span>, <span class="number">0xDD</span>, <span class="number">0x3F</span>, <span class="number">0x4C</span>, </span><br><span class="line">         <span class="number">0x0F</span>, <span class="number">0x0B</span>, <span class="number">0x98</span>, <span class="number">0xC6</span>, <span class="number">0x65</span>, <span class="number">0x21</span>, <span class="number">0x41</span>, <span class="number">0xED</span>, </span><br><span class="line">         <span class="number">0xC4</span>, <span class="number">0x0B</span>, <span class="number">0x3A</span>, <span class="number">0x7B</span>, <span class="number">0xE5</span>, <span class="number">0x75</span>, <span class="number">0x5D</span>, <span class="number">0xA9</span>, </span><br><span class="line">         <span class="number">0x31</span>, <span class="number">0x41</span>, <span class="number">0xD7</span>, <span class="number">0x52</span>, <span class="number">0x6C</span>, <span class="number">0x0A</span>, <span class="number">0xFA</span>, <span class="number">0xFD</span>, </span><br><span class="line">         <span class="number">0xFA</span>, <span class="number">0x84</span>, <span class="number">0xDB</span>, <span class="number">0x89</span>, <span class="number">0xCD</span>, <span class="number">0x7E</span>, <span class="number">0x27</span>, <span class="number">0x85</span>, </span><br><span class="line">         <span class="number">0x13</span>, <span class="number">0x08</span>]</span><br><span class="line">rand = [<span class="number">111</span>,<span class="number">24</span>,<span class="number">236</span>,<span class="number">196</span>,<span class="number">58</span>,<span class="number">186</span>,<span class="number">93</span>,<span class="number">97</span>,<span class="number">61</span>,<span class="number">51</span>,<span class="number">169</span>,<span class="number">170</span>,<span class="number">2</span>,<span class="number">17</span>,<span class="number">113</span>,<span class="number">139</span>,<span class="number">162</span>,<span class="number">38</span>,<span class="number">14</span>,<span class="number">77</span>,<span class="number">131</span>,<span class="number">66</span>,<span class="number">112</span>,<span class="number">202</span>,<span class="number">80</span>,<span class="number">113</span>,<span class="number">231</span>,<span class="number">107</span>,<span class="number">15</span>,<span class="number">50</span>,<span class="number">159</span>,<span class="number">128</span>,<span class="number">155</span>,<span class="number">183</span>,<span class="number">227</span>,<span class="number">184</span>,<span class="number">224</span>,<span class="number">28</span>,<span class="number">16</span>,<span class="number">180</span>,<span class="number">42</span>,<span class="number">57</span>]</span><br><span class="line"></span><br><span class="line">miao =    <span class="string">&#x27;flag&#123;0123456789ABCDEFGHIGKLMNOPQRSTUVWXYZ&#125;&#x27;</span></span><br><span class="line">mia2 =    <span class="string">&#x27;f&#123;37BFGNRVZlg02468ACEGIKMOQSUWY&#125;a159DHLPTX&#x27;</span></span><br><span class="line"></span><br><span class="line">back = [<span class="number">0</span>]*<span class="number">42</span></span><br><span class="line"></span><br><span class="line">a = pxor(check,rand)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">        <span class="keyword">if</span> (miao[i]==mia2[j]):</span><br><span class="line">            back[i]=a[j]</span><br><span class="line"></span><br><span class="line">pl(back)</span><br><span class="line"><span class="comment">#flag&#123;0305f8f2-14b6-fg7b-7c7a-010299c881e1&#125;</span></span><br></pre></td></tr></table></figure><p>总结：</p><p>一开始没看出来标志的大小写有问题TAT，于是直接调试找的main。。。</p><p>其次，由于srand随机的是当前时间，所以调试的时候值几乎不可能是当时的值，所以只有爆破才能找到真的seed，因此就要先把第一个变换通过动调看出来是打乱才可以（当然也不能验证）</p><h2 id="misc">misc</h2><h3 id="谁偷吃了我的外卖">谁偷吃了我的外卖</h3><p>这道题是压缩包<br>先打开，看到小凯.jpg</p><p>继续打开，发现外卖箱.zip<br>继续打开，一个flag文件夹和一堆外卖，</p><p>结构是：用户xxx_yyyy的外卖，yyyy很明显可以看出是base64，根据hint（在信息中）：I can give you a hint: - = /<br>But there was a takeaway that was partially eaten.</p><p>可以知道这里的-就是/，那么先写一个脚本把文件中的yyyy提取出来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">process_filenames</span>(<span class="params">zip_path</span>):</span><br><span class="line">    <span class="comment"># 打开压缩文件</span></span><br><span class="line">    <span class="keyword">with</span> zipfile.ZipFile(zip_path, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> zip_ref:</span><br><span class="line">        <span class="comment"># 获取压缩文件中的所有文件名</span></span><br><span class="line">        all_files = zip_ref.namelist()</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 对文件名进行解码</span></span><br><span class="line">        all_files = [filename.encode(<span class="string">&#x27;cp437&#x27;</span>).decode(<span class="string">&#x27;gbk&#x27;</span>) <span class="keyword">for</span> filename <span class="keyword">in</span> all_files]</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 提取每个文件名中的用户编号并按照编号排序文件名</span></span><br><span class="line">        all_files.sort(key=<span class="keyword">lambda</span> filename: <span class="built_in">int</span>(re.search(<span class="string">r&#x27;用户(\d+)&#x27;</span>, filename).group(<span class="number">1</span>)) <span class="keyword">if</span> re.search(<span class="string">r&#x27;用户(\d+)&#x27;</span>, filename) <span class="keyword">else</span> <span class="number">0</span>)</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 初始化一个空字符串用于存储字符</span></span><br><span class="line">        combined = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 对每个文件名进行操作</span></span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> all_files:</span><br><span class="line">            <span class="comment"># 提取文件名中倒数第7到倒数第4的字符</span></span><br><span class="line">            part = filename[-<span class="number">7</span>:-<span class="number">3</span>]</span><br><span class="line">            </span><br><span class="line">            <span class="comment"># 将字符添加到 combined 中</span></span><br><span class="line">            combined += part</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> combined</span><br><span class="line"></span><br><span class="line">result = process_filenames(<span class="string">&#x27;外卖箱.zip&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(result)</span><br></pre></td></tr></table></figure><p>得到：</p><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><p>那么把他base64解码</p><p>解码的结果是一堆乱码，看最后可以看到有png，PK，.md的字样，也就是说这是一个压缩包</p><p>转换为hex，开头是04 14 00 00 00 08 00，再看上面的提示，补充前三个字符（50 4B 03），然后一起复制到新文件中，得到新压缩包，里面是之前加密的压缩包的flag文件夹中的两个文件，同时钥匙.png表示这是deflate+zipcrypyo，既然是zipcrypyo，就可以用明文攻击，使用archpr找到密钥（密钥是由密码生成，同时加密使用密钥）：</p><p>[ 48ff002a 56e00484 380c5c49 ]</p><p>然后用bkcrack解密压缩包</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\bkcrack -C <span class="selector-tag">a</span><span class="selector-class">.zip</span> -k <span class="number">48</span>ff002a <span class="number">56</span>e00484 <span class="number">380</span>c5c49 -U new<span class="selector-class">.zip</span> ok</span><br></pre></td></tr></table></figure><p>将原始密码换成ok</p><p>然后解密即可</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;W<span class="number">1</span>sh_y<span class="number">0</span>u_AaaAaaaaaaaaaaa_w<span class="number">0</span><span class="symbol">nderfu1</span>_CTF_jour<span class="symbol">ne9</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">唯一做出来的题QAQ</summary>
    
    
    
    <category term="题集" scheme="https://www.pri87.vip/categories/%E9%A2%98%E9%9B%86/"/>
    
    
    <category term="misc" scheme="https://www.pri87.vip/tags/misc/"/>
    
    <category term="压缩包" scheme="https://www.pri87.vip/tags/%E5%8E%8B%E7%BC%A9%E5%8C%85/"/>
    
    <category term="upx" scheme="https://www.pri87.vip/tags/upx/"/>
    
    <category term="随机数" scheme="https://www.pri87.vip/tags/%E9%9A%8F%E6%9C%BA%E6%95%B0/"/>
    
  </entry>
  
  <entry>
    <title>CTF_RE_VM</title>
    <link href="https://www.pri87.vip/posts/670cb6e7.html"/>
    <id>https://www.pri87.vip/posts/670cb6e7.html</id>
    <published>2024-01-20T16:26:39.000Z</published>
    <updated>2024-03-08T18:18:41.539Z</updated>
    
    <content type="html"><![CDATA[<h2 id="伪虚拟机保护">伪虚拟机保护</h2><blockquote><p><strong>虚拟机</strong>（英语：virtual machine），在计算机科学中的体系结构里，是指一种特殊的软件，可以在计算机平台和终端用户之间建立一种环境，而终端用户则是基于虚拟机这个软件所建立的环境来操作其它软件。虚拟机（VM）是计算机系统的仿真器，通过软件模拟具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统，能提供物理计算机的功能。</p></blockquote><p>很明显，ctf中的vm技术和虚拟机并不相同，却有一定关系</p><p>伪虚拟机保护是一种模拟，它将程序可执行代码转换为自定义的中间操作码(operationcode)，如果操作码是一个字节，将它称为(bytecode)。中间操作码通过模拟器执行，实现程序原来的功能，同时阻碍逆向。这也是大多数跨平台语言可以成立的原因，先将代码翻译成中间码，这个代码就可以在任何有对应虚拟机的地方执行。</p><h3 id="实例">实例</h3><p>JVM</p><p>两个文件</p><p>JVM.class</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> p000;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* renamed from: JVM */</span></span><br><span class="line"><span class="comment">/* loaded from: JVM.class */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JVM</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* renamed from: program */</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">byte</span>[] flag;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] strArr)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(strArr[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">FileInputStream</span> <span class="variable">fileInputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(file);</span><br><span class="line">        flag = <span class="keyword">new</span> <span class="title class_">byte</span>[(<span class="type">int</span>) file.length()];</span><br><span class="line">        fileInputStream.read(flag);</span><br><span class="line">        fileInputStream.close();</span><br><span class="line">        m0vm();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* renamed from: vm */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">m0vm</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">bufferedReader</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span>[] iArr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">1024</span>];</span><br><span class="line">        <span class="type">int</span>[] iArr2 = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">while</span> (i &lt; flag.length) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (flag[i]) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> flag[i];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> iArr2[b];</span><br><span class="line">                    iArr2[b] = iArr2[b2];</span><br><span class="line">                    iArr2[b2] = i3;</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">n_next</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[n_next] = iArr2[n_next] + flag[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b3</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b3] = iArr2[b3] + iArr2[flag[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b4</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b4] = iArr2[b4] - flag[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b5</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b5] = iArr2[b5] - iArr2[flag[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b6</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b6] = iArr2[b6] * flag[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">17</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b7</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b7] = iArr2[b7] * iArr2[flag[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">20</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b8</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b8] = iArr2[b8] / flag[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">21</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b9</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b9] = iArr2[b9] / iArr2[flag[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">24</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b10</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b10] = iArr2[b10] % flag[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">25</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b11</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b11] = iArr2[b11] % iArr2[flag[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">28</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b12</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b12] = iArr2[b12] &lt;&lt; flag[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">29</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b13</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    iArr2[b13] = iArr2[b13] &lt;&lt; iArr2[flag[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">31</span>:</span><br><span class="line">                    iArr2[flag[i + <span class="number">1</span>]] = bufferedReader.read();</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">32</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i4</span> <span class="operator">=</span> i2;</span><br><span class="line">                    i2++;</span><br><span class="line">                    iArr[i4] = bufferedReader.read();</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">33</span>:</span><br><span class="line">                    System.out.print((<span class="type">char</span>) iArr2[flag[i + <span class="number">1</span>]]);</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">34</span>:</span><br><span class="line">                    i2--;</span><br><span class="line">                    System.out.print((<span class="type">char</span>) iArr[i2]);</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">41</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b14</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b15</span> <span class="operator">=</span> flag[i + <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (iArr2[b14] == <span class="number">0</span>) &#123;</span><br><span class="line">                        i = b15;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        i += <span class="number">3</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">42</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b16</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b17</span> <span class="operator">=</span> flag[i + <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (iArr2[b16] != <span class="number">0</span>) &#123;</span><br><span class="line">                        i = b17;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        i += <span class="number">3</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">43</span>:</span><br><span class="line">                    i = flag[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">52</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i5</span> <span class="operator">=</span> i2;</span><br><span class="line">                    i2++;</span><br><span class="line">                    iArr[i5] = iArr2[flag[i + <span class="number">1</span>]];</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">53</span>:</span><br><span class="line">                    i2--;</span><br><span class="line">                    iArr2[flag[i + <span class="number">1</span>]] = iArr[i2];</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">54</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i6</span> <span class="operator">=</span> i2;</span><br><span class="line">                    i2++;</span><br><span class="line">                    iArr[i6] = flag[i + <span class="number">1</span>];</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Byte.MAX_VALUE:</span><br><span class="line">                    bufferedReader.close();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b18</span> <span class="operator">=</span> flag[i];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b19</span> <span class="operator">=</span> flag[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b20</span> <span class="operator">=</span> flag[i + <span class="number">2</span>];</span><br><span class="line">                    flag[i] = (<span class="type">byte</span>) ((flag[i] ^ b19) ^ b20);</span><br><span class="line">                    flag[i + <span class="number">1</span>] = (<span class="type">byte</span>) ((flag[i] ^ b18) ^ b20);</span><br><span class="line">                    flag[i + <span class="number">2</span>] = (<span class="type">byte</span>) ((flag[i + <span class="number">1</span>] ^ b18) ^ b19);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>code.jvm(二进制文件)</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">36</span> <span class="number">20</span> <span class="number">36</span> <span class="number">3</span>E <span class="number">22</span> <span class="number">22</span> <span class="number">08</span> <span class="number">00</span> <span class="number">0</span>A <span class="number">09</span> <span class="number">00</span> <span class="number">00</span> <span class="number">09</span> <span class="number">00</span> <span class="number">00</span> <span class="number">08</span></span><br><span class="line"><span class="attribute">00</span> <span class="number">02</span> <span class="number">20</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">01</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">12</span> <span class="number">2</span>B <span class="number">2</span>C <span class="number">36</span> <span class="number">53</span> <span class="number">36</span> <span class="number">45</span> <span class="number">36</span></span><br><span class="line"><span class="attribute">59</span> <span class="number">22</span> <span class="number">22</span> <span class="number">22</span> <span class="number">7</span>F <span class="number">36</span> <span class="number">4</span>F <span class="number">36</span> <span class="number">4</span>E <span class="number">22</span> <span class="number">22</span> <span class="number">7</span>F <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span></span><br><span class="line"><span class="attribute">7D</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">09</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">36</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span></span><br><span class="line"><span class="attribute">02</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">0</span>A <span class="number">0</span>C <span class="number">02</span> <span class="number">63</span> <span class="number">2</span>A <span class="number">02</span> <span class="number">25</span> <span class="number">35</span> <span class="number">02</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">15</span> <span class="number">0</span>C</span><br><span class="line"><span class="attribute">02</span> <span class="number">61</span> <span class="number">2</span>A <span class="number">02</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">5</span>F <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">08</span></span><br><span class="line"><span class="attribute">01</span> <span class="number">01</span> <span class="number">00</span> <span class="number">01</span> <span class="number">09</span> <span class="number">01</span> <span class="number">01</span> <span class="number">08</span> <span class="number">02</span> <span class="number">07</span> <span class="number">09</span> <span class="number">00</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">01</span></span><br><span class="line"><span class="attribute">2A</span> <span class="number">02</span> <span class="number">6</span>A <span class="number">08</span> <span class="number">00</span> <span class="number">02</span> <span class="number">0</span>D <span class="number">00</span> <span class="number">01</span> <span class="number">0</span>D <span class="number">01</span> <span class="number">01</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span></span><br><span class="line"><span class="attribute">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">5</span>F <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">01</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">01</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">73</span> <span class="number">2</span>A</span><br><span class="line"><span class="attribute">01</span> <span class="number">25</span> <span class="number">35</span> <span class="number">02</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">03</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">6</span>B <span class="number">2</span>A <span class="number">02</span> <span class="number">25</span> <span class="number">35</span> <span class="number">01</span> <span class="number">0</span>C</span><br><span class="line"><span class="attribute">01</span> <span class="number">03</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">70</span> <span class="number">2</span>A <span class="number">01</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">07</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">62</span></span><br><span class="line"><span class="attribute">2A</span> <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">5</span>F <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">04</span></span><br><span class="line"><span class="attribute">0C</span> <span class="number">00</span> <span class="number">30</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">03</span> <span class="number">0</span>C <span class="number">03</span> <span class="number">0</span>B <span class="number">0</span>C <span class="number">03</span> <span class="number">6</span>B <span class="number">2</span>A <span class="number">03</span></span><br><span class="line"><span class="attribute">25</span> <span class="number">35</span> <span class="number">03</span> <span class="number">0</span>C <span class="number">03</span> <span class="number">04</span> <span class="number">0</span>C <span class="number">03</span> <span class="number">30</span> <span class="number">2</span>A <span class="number">03</span> <span class="number">25</span> <span class="number">35</span> <span class="number">01</span> <span class="number">0</span>C <span class="number">01</span></span><br><span class="line"><span class="attribute">13</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">57</span> <span class="number">2</span>A <span class="number">01</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">5</span>F <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span></span><br><span class="line"><span class="attribute">02</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">1</span>A <span class="number">0</span>C <span class="number">02</span> <span class="number">54</span> <span class="number">2</span>A <span class="number">02</span> <span class="number">25</span> <span class="number">35</span> <span class="number">02</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">04</span> <span class="number">0</span>C</span><br><span class="line"><span class="attribute">02</span> <span class="number">30</span> <span class="number">2</span>A <span class="number">02</span> <span class="number">25</span> <span class="number">35</span> <span class="number">01</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">07</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">2</span>C <span class="number">2</span>A <span class="number">01</span> <span class="number">25</span></span><br><span class="line"><span class="attribute">35</span> <span class="number">01</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">0</span>F <span class="number">0</span>C <span class="number">01</span> <span class="number">5</span>E <span class="number">2</span>A <span class="number">01</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">5</span>F</span><br><span class="line"><span class="attribute">2A</span> <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">01</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">29</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">2</span>C <span class="number">2</span>A <span class="number">01</span> <span class="number">25</span> <span class="number">35</span> <span class="number">02</span></span><br><span class="line"><span class="attribute">0C</span> <span class="number">02</span> <span class="number">27</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">48</span> <span class="number">2</span>A <span class="number">02</span> <span class="number">25</span> <span class="number">35</span> <span class="number">02</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">2</span>D <span class="number">0</span>C <span class="number">02</span></span><br><span class="line"><span class="attribute">4C</span> <span class="number">2</span>A <span class="number">02</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">5</span>F <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span></span><br><span class="line"><span class="attribute">07</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">29</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">01</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">23</span> <span class="number">0</span>C <span class="number">01</span> <span class="number">41</span> <span class="number">2</span>A</span><br><span class="line"><span class="attribute">01</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">5</span>F <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">02</span> <span class="number">0</span>C <span class="number">02</span> <span class="number">2</span>C <span class="number">0</span>C</span><br><span class="line"><span class="attribute">02</span> <span class="number">48</span> <span class="number">2</span>A <span class="number">02</span> <span class="number">25</span> <span class="number">35</span> <span class="number">03</span> <span class="number">0</span>C <span class="number">03</span> <span class="number">04</span> <span class="number">0</span>C <span class="number">03</span> <span class="number">30</span> <span class="number">2</span>A <span class="number">03</span> <span class="number">25</span></span><br><span class="line"><span class="attribute">35</span> <span class="number">03</span> <span class="number">0</span>C <span class="number">03</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">03</span> <span class="number">68</span> <span class="number">2</span>A <span class="number">03</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">1</span>C</span><br><span class="line"><span class="attribute">0C</span> <span class="number">00</span> <span class="number">5</span>B <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">7</span>B <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span></span><br><span class="line"><span class="attribute">0C</span> <span class="number">00</span> <span class="number">46</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">54</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span></span><br><span class="line"><span class="attribute">0C</span> <span class="number">00</span> <span class="number">43</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">73</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span></span><br><span class="line"><span class="attribute">0C</span> <span class="number">00</span> <span class="number">72</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">75</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span></span><br><span class="line"><span class="attribute">0C</span> <span class="number">00</span> <span class="number">65</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">74</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span></span><br><span class="line"><span class="attribute">0C</span> <span class="number">00</span> <span class="number">61</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">00</span> <span class="number">6</span>D <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">35</span> <span class="number">00</span></span><br><span class="line"><span class="attribute">0C</span> <span class="number">00</span> <span class="number">61</span> <span class="number">2</span>A <span class="number">00</span> <span class="number">25</span> <span class="number">2</span>B <span class="number">1</span>B</span><br></pre></td></tr></table></figure><p>可以看出vm的基本特征，即：</p><p>一个switch加一堆case<br>这是在判断这一个字节的指令是什么，然后执行相应指令</p><p>所以，给出了程序，我们需要逆向模拟器推出每一个指令是什么意思，然后把指令还原。同时，一般还会模拟寄存器和栈结构来读取数据，所以还要找到这两个结构才好理解。</p><p>所以，化简代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (i &lt; code.length) &#123;</span><br><span class="line">            <span class="keyword">switch</span> (code[i]) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> code[i];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b2</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> reg[b];</span><br><span class="line">                    reg[b] = reg[b2];</span><br><span class="line">                    reg[b2] = i3;</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b3</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b3] = reg[b3] + code[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b4</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b4] = reg[b4] + reg[code[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b5</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b5] = reg[b5] - code[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">13</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b6</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b6] = reg[b6] - reg[code[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">16</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b7</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b7] = reg[b7] * code[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">17</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b8</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b8] = reg[b8] * reg[code[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">20</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b9</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b9] = reg[b9] / code[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">21</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b10</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b10] = reg[b10] / reg[code[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">24</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b11</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b11] = reg[b11] % code[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">25</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b12</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b12] = reg[b12] % reg[code[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">28</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b13</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b13] = reg[b13] &lt;&lt; code[i + <span class="number">2</span>];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">29</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b14</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    reg[b14] = reg[b14] &lt;&lt; reg[code[i + <span class="number">2</span>]];</span><br><span class="line">                    i += <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">31</span>:</span><br><span class="line">                    reg[code[i + <span class="number">1</span>]] = bufferedReader.read();</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">32</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i4</span> <span class="operator">=</span> i2;</span><br><span class="line">                    i2++;</span><br><span class="line">                    stack[i4] = bufferedReader.read();</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">33</span>:</span><br><span class="line">                    System.out.print((<span class="type">char</span>) reg[code[i + <span class="number">1</span>]]);</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">34</span>:</span><br><span class="line">                    i2--;</span><br><span class="line">                    System.out.print((<span class="type">char</span>) stack[i2]);</span><br><span class="line">                    i++;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">41</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b15</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b16</span> <span class="operator">=</span> code[i + <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (reg[b15] == <span class="number">0</span>) &#123;</span><br><span class="line">                        i = b16;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        i += <span class="number">3</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">42</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b17</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b18</span> <span class="operator">=</span> code[i + <span class="number">2</span>];</span><br><span class="line">                    <span class="keyword">if</span> (reg[b17] != <span class="number">0</span>) &#123;</span><br><span class="line">                        i = b18;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        i += <span class="number">3</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">43</span>:</span><br><span class="line">                    i = code[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">52</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i5</span> <span class="operator">=</span> i2;</span><br><span class="line">                    i2++;</span><br><span class="line">                    stack[i5] = reg[code[i + <span class="number">1</span>]];</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">53</span>:</span><br><span class="line">                    i2--;</span><br><span class="line">                    reg[code[i + <span class="number">1</span>]] = stack[i2];</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="number">54</span>:</span><br><span class="line">                    <span class="type">int</span> <span class="variable">i6</span> <span class="operator">=</span> i2;</span><br><span class="line">                    i2++;</span><br><span class="line">                    stack[i6] = code[i + <span class="number">1</span>];</span><br><span class="line">                    i += <span class="number">2</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> Byte.MAX_VALUE:</span><br><span class="line">                    bufferedReader.close();</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b19</span> <span class="operator">=</span> code[i];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b20</span> <span class="operator">=</span> code[i + <span class="number">1</span>];</span><br><span class="line">                    <span class="type">byte</span> <span class="variable">b21</span> <span class="operator">=</span> code[i + <span class="number">2</span>];</span><br><span class="line">                    code[i] = (<span class="type">byte</span>) ((code[i] ^ b20) ^ b21);</span><br><span class="line">                    code[i + <span class="number">1</span>] = (<span class="type">byte</span>) ((code[i] ^ b19) ^ b21);</span><br><span class="line">                    code[i + <span class="number">2</span>] = (<span class="type">byte</span>) ((code[i + <span class="number">1</span>] ^ b19) ^ b20);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure><p>改写代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> i &lt; <span class="built_in">len</span>(code):</span><br><span class="line">b0 = code[i]</span><br><span class="line">b1 = code[i + <span class="number">1</span>] <span class="keyword">if</span> i + <span class="number">1</span> &lt; <span class="built_in">len</span>(code) <span class="keyword">else</span> <span class="number">0xff</span></span><br><span class="line">b2 = code[i + <span class="number">2</span>] <span class="keyword">if</span> i + <span class="number">2</span> &lt; <span class="built_in">len</span>(code) <span class="keyword">else</span> <span class="number">0xff</span></span><br><span class="line"><span class="keyword">if</span> b0 == <span class="number">0</span> <span class="keyword">or</span> b0 == <span class="number">1</span> <span class="keyword">or</span> b0 == <span class="number">2</span> <span class="keyword">or</span> b0 == <span class="number">3</span>:</span><br><span class="line">fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    swap r<span class="subst">&#123;b0&#125;</span> r<span class="subst">&#123;b1&#125;</span>\n&quot;</span>)</span><br><span class="line">i += <span class="number">2</span></span><br><span class="line"><span class="keyword">elif</span> b0 == <span class="number">8</span>:</span><br><span class="line">fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> += b2\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">9</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> += r<span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">12</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> -= <span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">13</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> -= r<span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">16</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> *= <span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">17</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> *= r<span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">20</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> /= <span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">21</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> /= r<span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">24</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> mod= <span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">25</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    r<span class="subst">&#123;b1&#125;</span> mod= r<span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">28</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    shl r<span class="subst">&#123;b1&#125;</span>, <span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">29</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    shl r<span class="subst">&#123;b1&#125;</span>, r<span class="subst">&#123;b2&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">31</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    read r<span class="subst">&#123;b1&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">32</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    rdpush\n&quot;</span>)<span class="comment">#i2为栈顶指针</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">33</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    print_write r<span class="subst">&#123;b1&#125;</span>\n&quot;</span>)<span class="comment">#只打印不改变栈</span></span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">34</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    print_pop\n&quot;</span>)<span class="comment">#打印加出栈</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">41</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    jmp <span class="subst">&#123;b2&#125;</span> if !r<span class="subst">&#123;b1&#125;</span>\n&quot;</span>)<span class="comment">#这里jmp通过修改i来跳转</span></span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">42</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    jmp <span class="subst">&#123;b2&#125;</span> if r<span class="subst">&#123;b1&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">3</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">43</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    jmp <span class="subst">&#123;b1&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">52</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    push r<span class="subst">&#123;b1&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">53</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    pop r<span class="subst">&#123;b1&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">54</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    push <span class="subst">&#123;b1&#125;</span>\n&quot;</span>)</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">    <span class="keyword">elif</span> b0 == <span class="number">127</span>:</span><br><span class="line">        fq.write(<span class="string">f&quot;<span class="subst">&#123;i&#125;</span>    quit\n&quot;</span>)</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> i + <span class="number">1</span> &lt; <span class="built_in">len</span>(code) <span class="keyword">and</span> i + <span class="number">2</span> &lt; <span class="built_in">len</span>(code):<span class="comment">#这是一个解密函数</span></span><br><span class="line">            code[i] = b0 ^ b1 ^ b2</span><br><span class="line">            code[i + <span class="number">1</span>] = b1</span><br><span class="line">            code[i + <span class="number">2</span>] = b0</span><br></pre></td></tr></table></figure><p>根据code.jvm生成正确的代码，然后人脑模拟运行得到flag</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">0 </span>   push <span class="number">32</span></span><br><span class="line"><span class="symbol">2 </span>   push <span class="number">62</span></span><br><span class="line"><span class="symbol">4 </span>   print_pop</span><br><span class="line"><span class="symbol">5 </span>   print_pop</span><br><span class="line"><span class="symbol">6 </span>   r0 += b2</span><br><span class="line"><span class="symbol">9 </span>   r0 += r0</span><br><span class="line"><span class="symbol">12 </span>   r0 += r0</span><br><span class="line"><span class="symbol">15 </span>   r0 += b2</span><br><span class="line"><span class="symbol">18 </span>   rdpush</span><br><span class="line"><span class="symbol">19 </span>   r0 -= <span class="number">1</span></span><br><span class="line"><span class="symbol">22 </span>   jmp <span class="number">18</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">25 </span>   jmp <span class="number">44</span></span><br><span class="line"><span class="symbol">27 </span>   push <span class="number">83</span></span><br><span class="line"><span class="symbol">29 </span>   push <span class="number">69</span></span><br><span class="line"><span class="symbol">31 </span>   push <span class="number">89</span></span><br><span class="line"><span class="symbol">33 </span>   print_pop</span><br><span class="line"><span class="symbol">34 </span>   print_pop</span><br><span class="line"><span class="symbol">35 </span>   print_pop</span><br><span class="line"><span class="symbol">36 </span>   quit</span><br><span class="line"><span class="symbol">37 </span>   push <span class="number">79</span></span><br><span class="line"><span class="symbol">39 </span>   push <span class="number">78</span></span><br><span class="line"><span class="symbol">41 </span>   print_pop</span><br><span class="line"><span class="symbol">42 </span>   print_pop</span><br><span class="line"><span class="symbol">43 </span>   quit</span><br><span class="line"><span class="symbol">44 </span>   pop r0</span><br><span class="line"><span class="symbol">46 </span>   r0 -= <span class="number">125</span></span><br><span class="line"><span class="symbol">49 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">52 </span>   pop r0</span><br><span class="line"><span class="symbol">54 </span>   r0 -= <span class="number">9</span></span><br><span class="line"><span class="symbol">57 </span>   r0 -= <span class="number">54</span></span><br><span class="line"><span class="symbol">60 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">63 </span>   pop r2</span><br><span class="line"><span class="symbol">65 </span>   r2 -= <span class="number">10</span></span><br><span class="line"><span class="symbol">68 </span>   r2 -= <span class="number">99</span></span><br><span class="line"><span class="symbol">71 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">74 </span>   pop r2</span><br><span class="line"><span class="symbol">76 </span>   r2 -= <span class="number">21</span></span><br><span class="line"><span class="symbol">79 </span>   r2 -= <span class="number">97</span></span><br><span class="line"><span class="symbol">82 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">85 </span>   pop r0</span><br><span class="line"><span class="symbol">87 </span>   r0 -= <span class="number">95</span></span><br><span class="line"><span class="symbol">90 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">93 </span>   pop r0</span><br><span class="line"><span class="symbol">95 </span>   r1 += b2</span><br><span class="line"><span class="symbol">98 </span>   <span class="keyword">swap</span> r0 r1</span><br><span class="line"><span class="symbol">100 </span>   r1 += r1</span><br><span class="line"><span class="symbol">103 </span>   r2 += b2</span><br><span class="line"><span class="symbol">106 </span>   r0 += r0</span><br><span class="line"><span class="symbol">109 </span>   r2 -= <span class="number">1</span></span><br><span class="line"><span class="symbol">112 </span>   jmp <span class="number">106</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">115 </span>   r0 += b2</span><br><span class="line"><span class="symbol">118 </span>   r0 -= r1</span><br><span class="line"><span class="symbol">121 </span>   r1 -= r1</span><br><span class="line"><span class="symbol">124 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">127 </span>   pop r0</span><br><span class="line"><span class="symbol">129 </span>   r0 -= <span class="number">95</span></span><br><span class="line"><span class="symbol">132 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">135 </span>   pop r1</span><br><span class="line"><span class="symbol">137 </span>   r1 -= <span class="number">1</span></span><br><span class="line"><span class="symbol">140 </span>   r1 -= <span class="number">115</span></span><br><span class="line"><span class="symbol">143 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r1</span><br><span class="line"><span class="symbol">146 </span>   pop r2</span><br><span class="line"><span class="symbol">148 </span>   r2 -= <span class="number">3</span></span><br><span class="line"><span class="symbol">151 </span>   r2 -= <span class="number">107</span></span><br><span class="line"><span class="symbol">154 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">157 </span>   pop r1</span><br><span class="line"><span class="symbol">159 </span>   r1 -= <span class="number">3</span></span><br><span class="line"><span class="symbol">162 </span>   r1 -= <span class="number">112</span></span><br><span class="line"><span class="symbol">165 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r1</span><br><span class="line"><span class="symbol">168 </span>   pop r0</span><br><span class="line"><span class="symbol">170 </span>   r0 -= <span class="number">7</span></span><br><span class="line"><span class="symbol">173 </span>   r0 -= <span class="number">98</span></span><br><span class="line"><span class="symbol">176 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">179 </span>   pop r0</span><br><span class="line"><span class="symbol">181 </span>   r0 -= <span class="number">95</span></span><br><span class="line"><span class="symbol">184 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">187 </span>   pop r0</span><br><span class="line"><span class="symbol">189 </span>   r0 -= <span class="number">4</span></span><br><span class="line"><span class="symbol">192 </span>   r0 -= <span class="number">48</span></span><br><span class="line"><span class="symbol">195 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">198 </span>   pop r3</span><br><span class="line"><span class="symbol">200 </span>   r3 -= <span class="number">11</span></span><br><span class="line"><span class="symbol">203 </span>   r3 -= <span class="number">107</span></span><br><span class="line"><span class="symbol">206 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r3</span><br><span class="line"><span class="symbol">209 </span>   pop r3</span><br><span class="line"><span class="symbol">211 </span>   r3 -= <span class="number">4</span></span><br><span class="line"><span class="symbol">214 </span>   r3 -= <span class="number">48</span></span><br><span class="line"><span class="symbol">217 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r3</span><br><span class="line"><span class="symbol">220 </span>   pop r1</span><br><span class="line"><span class="symbol">222 </span>   r1 -= <span class="number">19</span></span><br><span class="line"><span class="symbol">225 </span>   r1 -= <span class="number">87</span></span><br><span class="line"><span class="symbol">228 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r1</span><br><span class="line"><span class="symbol">231 </span>   pop r0</span><br><span class="line"><span class="symbol">233 </span>   r0 -= <span class="number">95</span></span><br><span class="line"><span class="symbol">236 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">239 </span>   pop r2</span><br><span class="line"><span class="symbol">241 </span>   r2 -= <span class="number">26</span></span><br><span class="line"><span class="symbol">244 </span>   r2 -= <span class="number">84</span></span><br><span class="line"><span class="symbol">247 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">250 </span>   pop r2</span><br><span class="line"><span class="symbol">252 </span>   r2 -= <span class="number">4</span></span><br><span class="line"><span class="symbol">255 </span>   r2 -= <span class="number">48</span></span><br><span class="line"><span class="symbol">258 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">261 </span>   pop r1</span><br><span class="line"><span class="symbol">263 </span>   r1 -= <span class="number">7</span></span><br><span class="line"><span class="symbol">266 </span>   r1 -= <span class="number">44</span></span><br><span class="line"><span class="symbol">269 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r1</span><br><span class="line"><span class="symbol">272 </span>   pop r1</span><br><span class="line"><span class="symbol">274 </span>   r1 -= <span class="number">15</span></span><br><span class="line"><span class="symbol">277 </span>   r1 -= <span class="number">94</span></span><br><span class="line"><span class="symbol">280 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r1</span><br><span class="line"><span class="symbol">283 </span>   pop r0</span><br><span class="line"><span class="symbol">285 </span>   r0 -= <span class="number">95</span></span><br><span class="line"><span class="symbol">288 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">291 </span>   pop r1</span><br><span class="line"><span class="symbol">293 </span>   r1 -= <span class="number">41</span></span><br><span class="line"><span class="symbol">296 </span>   r1 -= <span class="number">44</span></span><br><span class="line"><span class="symbol">299 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r1</span><br><span class="line"><span class="symbol">302 </span>   pop r2</span><br><span class="line"><span class="symbol">304 </span>   r2 -= <span class="number">39</span></span><br><span class="line"><span class="symbol">307 </span>   r2 -= <span class="number">72</span></span><br><span class="line"><span class="symbol">310 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">313 </span>   pop r2</span><br><span class="line"><span class="symbol">315 </span>   r2 -= <span class="number">45</span></span><br><span class="line"><span class="symbol">318 </span>   r2 -= <span class="number">76</span></span><br><span class="line"><span class="symbol">321 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">324 </span>   pop r0</span><br><span class="line"><span class="symbol">326 </span>   r0 -= <span class="number">95</span></span><br><span class="line"><span class="symbol">329 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">332 </span>   pop r0</span><br><span class="line"><span class="symbol">334 </span>   r0 -= <span class="number">7</span></span><br><span class="line"><span class="symbol">337 </span>   r0 -= <span class="number">41</span></span><br><span class="line"><span class="symbol">340 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">343 </span>   pop r1</span><br><span class="line"><span class="symbol">345 </span>   r1 -= <span class="number">35</span></span><br><span class="line"><span class="symbol">348 </span>   r1 -= <span class="number">65</span></span><br><span class="line"><span class="symbol">351 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r1</span><br><span class="line"><span class="symbol">354 </span>   pop r0</span><br><span class="line"><span class="symbol">356 </span>   r0 -= <span class="number">95</span></span><br><span class="line"><span class="symbol">359 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">362 </span>   pop r2</span><br><span class="line"><span class="symbol">364 </span>   r2 -= <span class="number">44</span></span><br><span class="line"><span class="symbol">367 </span>   r2 -= <span class="number">72</span></span><br><span class="line"><span class="symbol">370 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r2</span><br><span class="line"><span class="symbol">373 </span>   pop r3</span><br><span class="line"><span class="symbol">375 </span>   r3 -= <span class="number">4</span></span><br><span class="line"><span class="symbol">378 </span>   r3 -= <span class="number">48</span></span><br><span class="line"><span class="symbol">381 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r3</span><br><span class="line"><span class="symbol">384 </span>   pop r3</span><br><span class="line"><span class="symbol">386 </span>   r3 -= <span class="number">0</span></span><br><span class="line"><span class="symbol">389 </span>   r3 -= <span class="number">104</span></span><br><span class="line"><span class="symbol">392 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r3</span><br><span class="line"><span class="symbol">395 </span>   pop r0</span><br><span class="line"><span class="symbol">397 </span>   r0 -= <span class="number">28</span></span><br><span class="line"><span class="symbol">400 </span>   r0 -= <span class="number">91</span></span><br><span class="line"><span class="symbol">403 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">406 </span>   pop r0</span><br><span class="line"><span class="symbol">408 </span>   r0 -= <span class="number">123</span></span><br><span class="line"><span class="symbol">411 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">414 </span>   pop r0</span><br><span class="line"><span class="symbol">416 </span>   r0 -= <span class="number">70</span></span><br><span class="line"><span class="symbol">419 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">422 </span>   pop r0</span><br><span class="line"><span class="symbol">424 </span>   r0 -= <span class="number">84</span></span><br><span class="line"><span class="symbol">427 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">430 </span>   pop r0</span><br><span class="line"><span class="symbol">432 </span>   r0 -= <span class="number">67</span></span><br><span class="line"><span class="symbol">435 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">438 </span>   pop r0</span><br><span class="line"><span class="symbol">440 </span>   r0 -= <span class="number">115</span></span><br><span class="line"><span class="symbol">443 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">446 </span>   pop r0</span><br><span class="line"><span class="symbol">448 </span>   r0 -= <span class="number">114</span></span><br><span class="line"><span class="symbol">451 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">454 </span>   pop r0</span><br><span class="line"><span class="symbol">456 </span>   r0 -= <span class="number">117</span></span><br><span class="line"><span class="symbol">459 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">462 </span>   pop r0</span><br><span class="line"><span class="symbol">464 </span>   r0 -= <span class="number">101</span></span><br><span class="line"><span class="symbol">467 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">470 </span>   pop r0</span><br><span class="line"><span class="symbol">472 </span>   r0 -= <span class="number">116</span></span><br><span class="line"><span class="symbol">475 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">478 </span>   pop r0</span><br><span class="line"><span class="symbol">480 </span>   r0 -= <span class="number">97</span></span><br><span class="line"><span class="symbol">483 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">486 </span>   pop r0</span><br><span class="line"><span class="symbol">488 </span>   r0 -= <span class="number">109</span></span><br><span class="line"><span class="symbol">491 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">494 </span>   pop r0</span><br><span class="line"><span class="symbol">496 </span>   r0 -= <span class="number">97</span></span><br><span class="line"><span class="symbol">499 </span>   jmp <span class="number">37</span> <span class="keyword">if</span> r0</span><br><span class="line"><span class="symbol">502 </span>   jmp <span class="number">27</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">q</span>(<span class="params">a</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">chr</span>(a),end =<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="comment">#对应每一个循环条件</span></span><br><span class="line"></span><br><span class="line">q(<span class="number">97</span>)</span><br><span class="line">q(<span class="number">109</span>)</span><br><span class="line">q(<span class="number">97</span>)</span><br><span class="line">q(<span class="number">116</span>)</span><br><span class="line">q(<span class="number">101</span>)</span><br><span class="line">q(<span class="number">117</span>)</span><br><span class="line">q(<span class="number">114</span>)</span><br><span class="line">q(<span class="number">115</span>)</span><br><span class="line">q(<span class="number">67</span>)</span><br><span class="line">q(<span class="number">84</span>)</span><br><span class="line">q(<span class="number">70</span>)</span><br><span class="line">q(<span class="number">123</span>)</span><br><span class="line">q(<span class="number">28</span>+<span class="number">91</span>)</span><br><span class="line">q(<span class="number">104</span>)</span><br><span class="line">q(<span class="number">4</span>+<span class="number">48</span>)</span><br><span class="line">q(<span class="number">44</span>+<span class="number">72</span>)</span><br><span class="line">q(<span class="number">95</span>)</span><br><span class="line">q(<span class="number">35</span>+<span class="number">65</span>)</span><br><span class="line">q(<span class="number">7</span>+<span class="number">41</span>)</span><br><span class="line">q(<span class="number">95</span>)</span><br><span class="line">q(<span class="number">45</span>+<span class="number">76</span>)</span><br><span class="line">q(<span class="number">39</span>+<span class="number">72</span>)</span><br><span class="line">q(<span class="number">41</span>+<span class="number">44</span>)</span><br><span class="line">q(<span class="number">95</span>)</span><br><span class="line">q(<span class="number">15</span>+<span class="number">94</span>)</span><br><span class="line">q(<span class="number">7</span>+<span class="number">44</span>)</span><br><span class="line">q(<span class="number">4</span>+<span class="number">48</span>)</span><br><span class="line">q(<span class="number">26</span>+<span class="number">84</span>)</span><br><span class="line">q(<span class="number">95</span>)</span><br><span class="line">q(<span class="number">19</span>+<span class="number">87</span>)</span><br><span class="line">q(<span class="number">4</span>+<span class="number">48</span>)</span><br><span class="line">q(<span class="number">11</span>+<span class="number">107</span>)</span><br><span class="line">q(<span class="number">4</span>+<span class="number">48</span>)</span><br><span class="line">q(<span class="number">95</span>)</span><br><span class="line">q(<span class="number">7</span>+<span class="number">98</span>)</span><br><span class="line">q(<span class="number">115</span>)</span><br><span class="line">q(<span class="number">110</span>)</span><br><span class="line">q(<span class="number">116</span>)</span><br><span class="line">q(<span class="number">95</span>)</span><br><span class="line">q(<span class="number">65</span>)</span><br><span class="line">q(<span class="number">95</span>)</span><br><span class="line">q(<span class="number">97</span>+<span class="number">21</span>)</span><br><span class="line">q(<span class="number">10</span>+<span class="number">99</span>)</span><br><span class="line">q(<span class="number">9</span>+<span class="number">54</span>)</span><br><span class="line">q(<span class="number">125</span>)</span><br><span class="line"><span class="comment">#amateursCTF&#123;wh4t_d0_yoU_m34n_j4v4_isnt_A_vm?&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">这篇介绍Re中的VM</summary>
    
    
    
    <category term="知识集" scheme="https://www.pri87.vip/categories/%E7%9F%A5%E8%AF%86%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
  </entry>
  
  <entry>
    <title>z3基本语法</title>
    <link href="https://www.pri87.vip/posts/b4d67d75.html"/>
    <id>https://www.pri87.vip/posts/b4d67d75.html</id>
    <published>2024-01-17T05:31:24.000Z</published>
    <updated>2024-01-22T14:02:06.479Z</updated>
    
    <content type="html"><![CDATA[<p>z3是一个约束求解器，可以理解为解方程的工具，每一个约束都要写在x.add的语句中。</p><h2 id="声明变量">声明变量</h2><p>z3一共有三种变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a,b = Int(<span class="string">&#x27;a b&#x27;</span>)<span class="comment">#声明多个整数型变量</span></span><br><span class="line">a = Real(<span class="string">&#x27;a&#x27;</span>)<span class="comment">#声明单个实型变量</span></span><br><span class="line">a,b = Bitvec(<span class="string">&#x27;a b&#x27;</span>,<span class="number">8</span>)<span class="comment">#声明多个8位的向量型变量</span></span><br></pre></td></tr></table></figure><h2 id="使用例">使用例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a,b = Int(<span class="string">&#x27;a b&#x27;</span>)</span><br><span class="line">solve(a+b == <span class="number">10</span>,a + <span class="number">3</span> * b ==<span class="number">12</span>)<span class="comment">#条件少时可以直接用solve不用add</span></span><br><span class="line"><span class="comment">#result : [b = 1,a = 9]</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">x=Int(<span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">y=Int(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (simplify(x + y + <span class="number">2</span>*x + <span class="number">3</span>))<span class="comment">#simplify用于打印化简后的表达式</span></span><br><span class="line"><span class="built_in">print</span> (simplify(x &lt; y + x + <span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span> (simplify(And(x + <span class="number">1</span> &gt;= <span class="number">3</span>, x**<span class="number">2</span> + x**<span class="number">2</span> + y**<span class="number">2</span> + <span class="number">2</span> &gt;= <span class="number">5</span>)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#3 + 3*x + y</span></span><br><span class="line"><span class="comment">#Not(y &lt;= -2)</span></span><br><span class="line"><span class="comment">#And(x &gt;= 2, 2*x**2 + y**2 &gt;= 3)</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">a,b = Ints(<span class="string">&#x27;a b&#x27;</span>)</span><br><span class="line"></span><br><span class="line">s=Solver()  <span class="comment">#创建一个解的对象s</span></span><br><span class="line">s.add(a + b == <span class="number">10</span>)<span class="comment">#添加约束条件</span></span><br><span class="line">s.add(a + <span class="number">3</span> * b == <span class="number">12</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat: <span class="comment">#check() 检查解是否存在，存在会return &#x27;sat&#x27;</span></span><br><span class="line">result = s.model() <span class="comment">#输出</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(result[a])</span><br><span class="line"><span class="built_in">print</span>(result[b])</span><br></pre></td></tr></table></figure><h2 id="z3语法">z3语法</h2><p>对于普通的自定义逻辑（带位移，异或之类的不好逆向），z3可以秒杀</p><p>比如这么写：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">cmp = [<span class="number">0x66</span>, <span class="number">0x4E</span>, <span class="number">0xA9</span>, <span class="number">0xFD</span>, <span class="number">0x3C</span>, <span class="number">0x55</span>, <span class="number">0x90</span>, <span class="number">0x24</span>, <span class="number">0x57</span>, <span class="number">0xF6</span>, <span class="number">0x5D</span>, <span class="number">0xB1</span>, <span class="number">0x01</span>, <span class="number">0x20</span>, <span class="number">0x81</span>, <span class="number">0xFD</span>, <span class="number">0x36</span>, <span class="number">0xA9</span>, <span class="number">0x1F</span>, <span class="number">0xA1</span>, <span class="number">0x0E</span>, <span class="number">0x0D</span>, <span class="number">0x80</span>, <span class="number">0x8F</span>, <span class="number">0xCE</span>, <span class="number">0x77</span>, <span class="number">0xE8</span>, <span class="number">0x23</span>, <span class="number">0x9E</span>, <span class="number">0x27</span>, <span class="number">0x60</span>, <span class="number">0x2F</span>, <span class="number">0xA5</span>, <span class="number">0xCF</span>, <span class="number">0x1B</span>, <span class="number">0xBD</span>, <span class="number">0x32</span>, <span class="number">0xDB</span>, <span class="number">0xFF</span>, <span class="number">0x28</span>, <span class="number">0xA4</span>, <span class="number">0x5D</span>]</span><br><span class="line">f = Solver()</span><br><span class="line"></span><br><span class="line">flag,out = pini(<span class="number">42</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m = n = a = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i,j <span class="keyword">in</span> pl(<span class="number">7</span>,<span class="number">6</span>):</span><br><span class="line">    a = <span class="number">6</span> * i + j</span><br><span class="line">    m = flag[a]</span><br><span class="line">    n = flag[a]</span><br><span class="line">    m = ~m</span><br><span class="line">    m &amp;= i * (j + <span class="number">2</span>)</span><br><span class="line">    n = n &amp; ~(i * (j + <span class="number">2</span>)) | m</span><br><span class="line">    a = <span class="number">7</span> * j + i</span><br><span class="line">    out[a] = n</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">42</span>):</span><br><span class="line">    <span class="keyword">if</span> ( i % <span class="number">2</span> == <span class="number">1</span> ):</span><br><span class="line">        out[i] *= <span class="number">107</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        out[i] += out[i - <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">42</span>):</span><br><span class="line">    f.add(cmp[i]==out[i])</span><br><span class="line">isflag(f,flag)</span><br><span class="line">pcheck(f,flag)</span><br></pre></td></tr></table></figure><p>但是可能遇到要对z3型数据判断的情况，比如下面这个题：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> __fastcall <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">size_t</span> v3; <span class="comment">// rax</span></span><br><span class="line">  <span class="type">char</span> flag[<span class="number">64</span>]; <span class="comment">// [rsp+0h] [rbp-C0h] BYREF</span></span><br><span class="line">  <span class="type">char</span> out2[<span class="number">64</span>]; <span class="comment">// [rsp+40h] [rbp-80h] BYREF</span></span><br><span class="line">  __int64 check[<span class="number">4</span>]; <span class="comment">// [rsp+80h] [rbp-40h]</span></span><br><span class="line">  __int16 v8; <span class="comment">// [rsp+A0h] [rbp-20h]</span></span><br><span class="line">  <span class="type">int</span> len; <span class="comment">// [rsp+B0h] [rbp-10h]</span></span><br><span class="line">  <span class="type">int</span> v10; <span class="comment">// [rsp+B4h] [rbp-Ch]</span></span><br><span class="line">  <span class="type">int</span> v11; <span class="comment">// [rsp+B8h] [rbp-8h]</span></span><br><span class="line">  <span class="type">int</span> i; <span class="comment">// [rsp+BCh] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  check[<span class="number">0</span>] = <span class="number">0x10C0105000D07</span>LL;</span><br><span class="line">  check[<span class="number">1</span>] = <span class="number">0xF0509000F050D00</span>LL;</span><br><span class="line">  check[<span class="number">2</span>] = <span class="number">0x701030305020003</span>LL;</span><br><span class="line">  check[<span class="number">3</span>] = <span class="number">0xC02070201020B07</span>LL;</span><br><span class="line">  v8 = <span class="number">514</span>;</span><br><span class="line">  i = <span class="number">0</span>;</span><br><span class="line">  v11 = <span class="number">0</span>;</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  len = <span class="number">17</span>;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Hi, PLZ input input&quot;</span>);</span><br><span class="line">  <span class="built_in">memset</span>(flag, <span class="number">0</span>, <span class="keyword">sizeof</span>(flag));</span><br><span class="line">  <span class="built_in">memset</span>(out2, <span class="number">0</span>, <span class="keyword">sizeof</span>(out2));</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%s&quot;</span>, flag);</span><br><span class="line">  v3 = <span class="built_in">strlen</span>(flag);</span><br><span class="line">  <span class="keyword">if</span> ( v3 == len )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">16</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( (<span class="type">unsigned</span> __int8)flag[i] &gt; <span class="string">&#x27;`&#x27;</span> &amp;&amp; (<span class="type">unsigned</span> __int8)flag[i] &lt;= <span class="string">&#x27;z&#x27;</span> )</span><br><span class="line">        flag[i] = (flag[i] ^ <span class="number">0x47</span>) + <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">if</span> ( (<span class="type">unsigned</span> __int8)flag[i] &gt; <span class="string">&#x27;@&#x27;</span> &amp;&amp; (<span class="type">unsigned</span> __int8)flag[i] &lt;= <span class="string">&#x27;Z&#x27;</span> )</span><br><span class="line">        flag[i] = (flag[i] ^ <span class="number">0x4B</span>) - <span class="number">1</span>;</span><br><span class="line">      out2[<span class="number">2</span> * i] = (<span class="type">unsigned</span> __int8)flag[i] &gt;&gt; <span class="number">4</span>;</span><br><span class="line">      out2[<span class="number">2</span> * i + <span class="number">1</span>] = flag[i] &amp; <span class="number">0xF</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; len; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( *((_BYTE *)check + <span class="number">2</span> * i) != out2[<span class="number">2</span> * (len - i) - <span class="number">2</span>]</span><br><span class="line">        &amp;&amp; *((_BYTE *)check + <span class="number">2</span> * i + <span class="number">1</span>) != out2[<span class="number">2</span> * (len - i) - <span class="number">2</span>] )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;wrong wrong wrong&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;woc,you got it,flag is your input&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a Ha ? wrong1&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>主函数是这样的，这里它不止对flag进行分类讨论，还在讨论后进行计算：z3型可以直接进行计算，包括加和乘，对于位向量还可以左右移以及异或，但是都不能进行判断大小，如果要进行判断必须要在add中做判断，比如判断两个值是否相等：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f.add(check[<span class="number">2</span> * i]==out3[<span class="number">2</span>*(<span class="built_in">len</span>-i-<span class="number">1</span>)])</span><br></pre></td></tr></table></figure><p>那么如果我们根据这道题写，还需要If函数（Z3自带）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">If(condition,a,b)</span><br></pre></td></tr></table></figure><p>意思是：如果条件成立，语句视为a，否则视为b</p><p>那么和add结合起来看就是：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">f.add(If(And(out[i] &gt; <span class="number">0x60</span>, out[i] &lt;= <span class="number">0x7a</span>), out2[i] == (out[i] ^ <span class="number">0x47</span>) + <span class="number">1</span>, <span class="literal">True</span>))</span><br><span class="line">f.add(If(And(out[i] &gt; <span class="number">0x40</span>, out[i] &lt;= <span class="number">0x5a</span>), out2[i] == (out[i] ^ <span class="number">0x4b</span>) - <span class="number">1</span>, <span class="literal">True</span>))</span><br></pre></td></tr></table></figure><p>如果条件成立，添加a约束，否则添加b约束，这里的b约束恒为真，表示如果条件不成立就跳过这个约束。可是问题来了，我们知道out[i]是由flag初始化的，也就是说out是z3位向量型，但是out2呢？如果把这里的out2视作一个普通列表，让out[i]计算后的值返回给out2，好像也没问题。但是！！这里的语句并不是赋值语句，而是判断语句，是一个<code>约束</code>，如果这里out2=34*[0],那么就是让out[i]运算后的值恒等于0的条件成立，显然这是无解的，也就是说，这里的两个变量都必须是位向量才可以，同时，不应该忘了如果两个条件均不成立，就要让out=out2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">f.add(out2[i] == If(And(out[i] &gt; <span class="number">0x40</span>, out[i] &lt;= <span class="number">0x5a</span>), (out[i] ^ <span class="number">0x4b</span>) - <span class="number">1</span>,If(And(out[i] &gt; <span class="number">0x60</span>, out[i] &lt;= <span class="number">0x7a</span>), (out[i] ^ <span class="number">0x47</span>) + <span class="number">1</span>, out[i])))</span><br></pre></td></tr></table></figure><p>进行if的嵌套完成这个效果</p><p>之后还要对flag继续做变换变成最后的数组，且数组大小翻倍，如果后面的检查比较简单，可以直接在check==的时候写，但是由于这里的比较不是很直观，不如写出来变成单独的列表再比较，这时又要涉及到out2变成out3的问题了，由于这个是直接赋值，没有判断，所以方便起见，直接写赋值语句。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">out3[<span class="number">2</span>*i] = LShR(out2[i], <span class="number">4</span>)</span><br><span class="line">out3[<span class="number">2</span>*i+<span class="number">1</span>] = out2[i] &amp; <span class="number">0xf</span></span><br></pre></td></tr></table></figure><p>通过这两个例子可以发现，当想要赋值时，如果要对z3型变量进行判断/比较，就必须用add表达式，在其中，为了达成赋值效果，必须新建一个z3量才可以成功，但是如果是直接赋值，则直接对列表赋值即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> prism <span class="keyword">import</span> *</span><br><span class="line">check = [<span class="number">0x07</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x01</span>, <span class="number">0x0C</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0D</span>, <span class="number">0x05</span>, <span class="number">0x0F</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x05</span>, <span class="number">0x0F</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x05</span>, <span class="number">0x03</span>, <span class="number">0x03</span>, <span class="number">0x01</span>, <span class="number">0x07</span>, <span class="number">0x07</span>, <span class="number">0x0B</span>, <span class="number">0x02</span>, <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x07</span>, <span class="number">0x02</span>, <span class="number">0x0C</span>, <span class="number">0x02</span>, <span class="number">0x02</span>]</span><br><span class="line">flag,out = pini(<span class="number">17</span>)</span><br><span class="line">out2 = [BitVec(<span class="string">&#x27;out2[%2d]&#x27;</span> % i , <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">34</span>)]</span><br><span class="line">out3 = [<span class="number">0</span>]*<span class="number">34</span></span><br><span class="line"><span class="built_in">len</span> = <span class="number">17</span></span><br><span class="line">f = Solver()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>):</span><br><span class="line"></span><br><span class="line">    f.add(out2[i] == If(And(out[i] &gt; <span class="number">0x40</span>, out[i] &lt;= <span class="number">0x5a</span>), (out[i] ^ <span class="number">0x4b</span>) - <span class="number">1</span>,</span><br><span class="line">                     If(And(out[i] &gt; <span class="number">0x60</span>, out[i] &lt;= <span class="number">0x7a</span>), (out[i] ^ <span class="number">0x47</span>) + <span class="number">1</span>, out[i])))</span><br><span class="line"></span><br><span class="line">    out3[<span class="number">2</span>*i] = LShR(out2[i], <span class="number">4</span>)</span><br><span class="line">    out3[<span class="number">2</span>*i+<span class="number">1</span>] = out2[i] &amp; <span class="number">0xf</span></span><br><span class="line">isflag(f,flag)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">17</span>):</span><br><span class="line">    f.add(check[<span class="number">2</span> * i]==out3[<span class="number">2</span>*(<span class="built_in">len</span>-i-<span class="number">1</span>)])</span><br><span class="line">    f.add(check[<span class="number">2</span> * i + <span class="number">1</span>]==out3[<span class="number">2</span>*(<span class="built_in">len</span>-i-<span class="number">1</span>)+<span class="number">1</span>])</span><br><span class="line">pcheck(f,flag)</span><br></pre></td></tr></table></figure><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml">&quot;la!</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;g</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;g</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;g</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;!</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;!</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;!</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;!</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;!</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;!</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;!</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fla!</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;la!</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fla!</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,a!</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,a!</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,a!</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,a!</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;la!</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;!</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;!</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;g</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;g</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;g</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;g</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;g</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;g</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;!</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,ag</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,ag</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fla!</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,a!</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;lag</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;lag</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,ag</span><span class="template-variable">&#123;Su%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,a!</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,ag</span><span class="template-variable">&#123;S3%h_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;!</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;!</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;!</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,a!</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;!</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;!</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;!</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,a!</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fla!</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;la!</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;g</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;g</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,ag</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;g</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,ag</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;g</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;lag</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;g</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;lag</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;g</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,ag</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,ag</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;g</span><span class="template-variable">&#123;Such_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;g</span><span class="template-variable">&#123;S3ch_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;!</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;g</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;!</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;!</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;g</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;!</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;g</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;g</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;g</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;g</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;!</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;!</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;!</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;!</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;g</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,ag</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,ag</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;lag</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,ag</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;lag</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,ag</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,a!</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,a!</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,a!</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,a!</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;la!</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fla!</span><span class="template-variable">&#123;Su%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;la!</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fla!</span><span class="template-variable">&#123;Suc0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;!</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;la!</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;g</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;lag</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;g</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,ag</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;!</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,a!</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;!</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,&#x27;g</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;!</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;la!</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,a!</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;,ag</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;lag</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">&quot;l&#x27;g</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;g</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;g</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;g</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;g</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,ag</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,ag</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">flag</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fla!</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fla!</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;!</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;!</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,a!</span><span class="template-variable">&#123;S3c0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,a!</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">f,&#x27;!</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml">fl&#x27;!</span><span class="template-variable">&#123;S3%0_A_EZVM&#125;</span></span><br></pre></td></tr></table></figure><p>以上均是解</p><p>补充说明：</p><p>如果想约束某个值只能出现一次，比如{,}，可以用Sum：</p><p>Sum用于计算一系列表达式的和类似于加</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s.add(Sum([If(i == BitVecVal(<span class="built_in">ord</span>(<span class="string">&#x27;&#123;&#x27;</span>), <span class="number">8</span>), <span class="number">1</span>, <span class="number">0</span>) <span class="keyword">for</span> i <span class="keyword">in</span> flag]) &lt;= <span class="number">1</span>)</span><br><span class="line">s.add(Sum([If(i == BitVecVal(<span class="built_in">ord</span>(<span class="string">&#x27;&#125;&#x27;</span>), <span class="number">8</span>), <span class="number">1</span>, <span class="number">0</span>) <span class="keyword">for</span> i <span class="keyword">in</span> flag]) &lt;= <span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>计算flag中等于括号的值的表达式个数，然后让其小于等于1</p>]]></content>
    
    
    <summary type="html">对z3使用的思考</summary>
    
    
    
    <category term="知识集" scheme="https://www.pri87.vip/categories/%E7%9F%A5%E8%AF%86%E9%9B%86/"/>
    
    
    <category term="逆向" scheme="https://www.pri87.vip/tags/%E9%80%86%E5%90%91/"/>
    
    <category term="符号执行" scheme="https://www.pri87.vip/tags/%E7%AC%A6%E5%8F%B7%E6%89%A7%E8%A1%8C/"/>
    
    <category term="z3" scheme="https://www.pri87.vip/tags/z3/"/>
    
  </entry>
  
</feed>
